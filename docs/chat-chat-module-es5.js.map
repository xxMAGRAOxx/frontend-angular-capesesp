{"version":3,"sources":["webpack:///src/app/main/apps/chat/sidenavs/left/left.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/left.component.html","webpack:///src/app/main/apps/chat/chat.service.ts","webpack:///src/app/main/apps/chat/chat.component.ts","webpack:///src/app/main/apps/chat/chat.component.html","webpack:///src/app/main/apps/chat/chat-view/chat-view.component.ts","webpack:///src/app/main/apps/chat/chat-view/chat-view.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///src/app/main/apps/chat/sidenavs/left/chats/chats.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/chats/chats.component.html","webpack:///src/app/main/apps/chat/sidenavs/left/user/user.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/user/user.component.html","webpack:///src/app/main/apps/chat/sidenavs/right/right.component.ts","webpack:///src/app/main/apps/chat/sidenavs/right/right.component.html","webpack:///src/app/main/apps/chat/sidenavs/right/contact/contact.component.ts","webpack:///src/app/main/apps/chat/sidenavs/right/contact/contact.component.html","webpack:///src/app/main/apps/chat/chat.module.ts","webpack:///src/app/main/apps/chat/chat-start/chat-start.component.ts","webpack:///src/app/main/apps/chat/chat-start/chat-start.component.html"],"names":["ChatLeftSidenavComponent","_chatService","view","_unsubscribeAll","onLeftSidenavViewChanged","pipe","subscribe","next","complete","selector","templateUrl","styleUrls","encapsulation","None","animations","ChatService","_httpClient","onChatSelected","onContactSelected","onChatsUpdated","onUserUpdated","onRightSidenavViewChanged","route","state","Promise","resolve","reject","all","getContacts","getChats","getUser","then","contacts","chats","user","contactId","chatItem","chatList","find","item","createNewChat","newChats","getChat","get","id","response","chat","chatContact","contact","chatData","chatId","dialog","generateGUID","chatListItem","lastMessageTime","name","unread","push","post","newUserData","updatedUser","status","userData","newData","updatedChat","ChatComponent","selectedChat","ChatViewComponent","readyToReply","replyInput","replyInputField","first","nativeElement","message","i","who","length","selectContact","setTimeout","focusReplyInput","scrollToBottom","focus","speed","directiveScroll","update","event","preventDefault","replyForm","form","value","time","Date","toISOString","reset","updateDialog","reply","_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","ɵfac","MatCardContent_Factory","t","ɵdir","type","selectors","hostAttrs","args","host","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","hostVars","hostBindings","MatCardActions_HostBindings","rf","ctx","inputs","exportAs","propDecorators","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","ɵcmp","MatCard_HostBindings","ngContentSelectors","decls","vars","template","MatCard_Template","styles","changeDetection","ctorParameters","String","decorators","OnPush","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","ɵmod","ɵinj","factory","MatCardModule_Factory","imports","ngJitMode","declarations","exports","ChatChatsSidenavComponent","_fuseMatSidenavHelperService","_mediaObserver","chatSearch","searchText","updatedChats","isActive","getSidenav","toggle","setUserStatus","console","log","changeLeftSidenavView","logout","ChatUserSidenavComponent","userForm","mood","valueChanges","data","updateUserData","ChatRightSidenavComponent","ChatContactSidenavComponent","routes","path","component","children","ChatModule","forChild","providers","ChatStartComponent"],"mappings":"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","file":"chat-chat-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-left-sidenav',\r\n    templateUrl  : './left.component.html',\r\n    styleUrls    : ['./left.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatLeftSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    view: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.view = 'chats';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onLeftSidenavViewChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(view => {\r\n                this.view = view;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<div [ngSwitch]=\"view\" class=\"views\">\r\n    <chat-chats-sidenav class=\"view\"\r\n                        *ngSwitchCase=\"'chats'\"\r\n                        [@slideInRight]>\r\n    </chat-chats-sidenav>\r\n\r\n    <chat-user-sidenav class=\"view\"\r\n                       *ngSwitchCase=\"'user'\"\r\n                       [@slideInLeft]\r\n                       fusePerfectScrollbar>\r\n    </chat-user-sidenav>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\n@Injectable()\r\nexport class ChatService implements Resolve<any>\r\n{\r\n    contacts: any[];\r\n    chats: any[];\r\n    user: any;\r\n    onChatSelected: BehaviorSubject<any>;\r\n    onContactSelected: BehaviorSubject<any>;\r\n    onChatsUpdated: Subject<any>;\r\n    onUserUpdated: Subject<any>;\r\n    onLeftSidenavViewChanged: Subject<any>;\r\n    onRightSidenavViewChanged: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onChatSelected = new BehaviorSubject(null);\r\n        this.onContactSelected = new BehaviorSubject(null);\r\n        this.onChatsUpdated = new Subject();\r\n        this.onUserUpdated = new Subject();\r\n        this.onLeftSidenavViewChanged = new Subject();\r\n        this.onRightSidenavViewChanged = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getChats(),\r\n                this.getUser()\r\n            ]).then(\r\n                ([contacts, chats, user]) => {\r\n                    this.contacts = contacts;\r\n                    this.chats = chats;\r\n                    this.user = user;\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get chat\r\n     *\r\n     * @param contactId\r\n     * @returns {Promise<any>}\r\n     */\r\n    getChat(contactId): Promise<any>\r\n    {\r\n        const chatItem = this.user.chatList.find((item) => {\r\n            return item.contactId === contactId;\r\n        });\r\n\r\n        // Create new chat, if it's not created yet.\r\n        if ( !chatItem )\r\n        {\r\n            this.createNewChat(contactId).then((newChats) => {\r\n                this.getChat(contactId);\r\n            });\r\n            return;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-chats/' + chatItem.id)\r\n                .subscribe((response: any) => {\r\n                    const chat = response;\r\n\r\n                    const chatContact = this.contacts.find((contact) => {\r\n                        return contact.id === contactId;\r\n                    });\r\n\r\n                    const chatData = {\r\n                        chatId : chat.id,\r\n                        dialog : chat.dialog,\r\n                        contact: chatContact\r\n                    };\r\n\r\n                    this.onChatSelected.next({...chatData});\r\n\r\n                }, reject);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Create new chat\r\n     *\r\n     * @param contactId\r\n     * @returns {Promise<any>}\r\n     */\r\n    createNewChat(contactId): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const contact = this.contacts.find((item) => {\r\n                return item.id === contactId;\r\n            });\r\n\r\n            const chatId = FuseUtils.generateGUID();\r\n\r\n            const chat = {\r\n                id    : chatId,\r\n                dialog: []\r\n            };\r\n\r\n            const chatListItem = {\r\n                contactId      : contactId,\r\n                id             : chatId,\r\n                lastMessageTime: '2017-02-18T10:30:18.931Z',\r\n                name           : contact.name,\r\n                unread         : null\r\n            };\r\n\r\n            // Add new chat list item to the user's chat list\r\n            this.user.chatList.push(chatListItem);\r\n\r\n            // Post the created chat\r\n            this._httpClient.post('api/chat-chats', {...chat})\r\n                .subscribe((response: any) => {\r\n\r\n                    // Post the new the user data\r\n                    this._httpClient.post('api/chat-user/' + this.user.id, this.user)\r\n                        .subscribe(newUserData => {\r\n\r\n                            // Update the user data from server\r\n                            this.getUser().then(updatedUser => {\r\n                                this.onUserUpdated.next(updatedUser);\r\n                                resolve(updatedUser);\r\n                            });\r\n                        });\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Select contact\r\n     *\r\n     * @param contact\r\n     */\r\n    selectContact(contact): void\r\n    {\r\n        this.onContactSelected.next(contact);\r\n    }\r\n\r\n    /**\r\n     * Set user status\r\n     *\r\n     * @param status\r\n     */\r\n    setUserStatus(status): void\r\n    {\r\n        this.user.status = status;\r\n    }\r\n\r\n    /**\r\n     * Update user data\r\n     *\r\n     * @param userData\r\n     */\r\n    updateUserData(userData): void\r\n    {\r\n        this._httpClient.post('api/chat-user/' + this.user.id, userData)\r\n            .subscribe((response: any) => {\r\n                    this.user = userData;\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the chat dialog\r\n     *\r\n     * @param chatId\r\n     * @param dialog\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateDialog(chatId, dialog): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const newData = {\r\n                id    : chatId,\r\n                dialog: dialog\r\n            };\r\n\r\n            this._httpClient.post('api/chat-chats/' + chatId, newData)\r\n                .subscribe(updatedChat => {\r\n                    resolve(updatedChat);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get contacts\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getContacts(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-contacts')\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get chats\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getChats(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-chats')\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get user\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUser(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-user')\r\n                .subscribe((response: any) => {\r\n                    resolve(response[0]);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat',\r\n    templateUrl  : './chat.component.html',\r\n    styleUrls    : ['./chat.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy\r\n{\r\n    selectedChat: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onChatSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(chatData => {\r\n                this.selectedChat = chatData;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<div id=\"chat\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n\r\n            <mat-sidenav-container>\r\n\r\n                <!-- LEFT SIDENAV -->\r\n                <mat-sidenav class=\"sidenav\" position=\"start\" opened=\"true\" mode=\"side\"\r\n                             fuseMatSidenavHelper=\"chat-left-sidenav\" matIsLockedOpen=\"gt-md\">\r\n                    <chat-left-sidenav></chat-left-sidenav>\r\n                </mat-sidenav>\r\n                <!-- / LEFT SIDENAV -->\r\n\r\n                <!-- CONTENT -->\r\n                <chat-start *ngIf=\"!selectedChat\"></chat-start>\r\n\r\n                <chat-view *ngIf=\"selectedChat\"></chat-view>\r\n                <!-- / CONTENT -->\r\n\r\n                <!-- RIGHT SIDENAV -->\r\n                <mat-sidenav class=\"sidenav\" position=\"end\" opened=\"false\" mode=\"over\"\r\n                             fuseMatSidenavHelper=\"chat-right-sidenav\">\r\n                    <chat-right-sidenav></chat-right-sidenav>\r\n                </mat-sidenav>\r\n                <!-- / RIGHT SIDENAV -->\r\n\r\n            </mat-sidenav-container>\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-view',\r\n    templateUrl  : './chat-view.component.html',\r\n    styleUrls    : ['./chat-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChatViewComponent implements OnInit, OnDestroy, AfterViewInit\r\n{\r\n    user: any;\r\n    chat: any;\r\n    dialog: any;\r\n    contact: any;\r\n    replyInput: any;\r\n    selectedChat: any;\r\n\r\n    @ViewChild(FusePerfectScrollbarDirective)\r\n    directiveScroll: FusePerfectScrollbarDirective;\r\n\r\n    @ViewChildren('replyInput')\r\n    replyInputField;\r\n\r\n    @ViewChild('replyForm')\r\n    replyForm: NgForm;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.user = this._chatService.user;\r\n        this._chatService.onChatSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(chatData => {\r\n                if ( chatData )\r\n                {\r\n                    this.selectedChat = chatData;\r\n                    this.contact = chatData.contact;\r\n                    this.dialog = chatData.dialog;\r\n                    this.readyToReply();\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * After view init\r\n     */\r\n    ngAfterViewInit(): void\r\n    {\r\n        this.replyInput = this.replyInputField.first.nativeElement;\r\n        this.readyToReply();\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Decide whether to show or not the contact's avatar in the message row\r\n     *\r\n     * @param message\r\n     * @param i\r\n     * @returns {boolean}\r\n     */\r\n    shouldShowContactAvatar(message, i): boolean\r\n    {\r\n        return (\r\n            message.who === this.contact.id &&\r\n            ((this.dialog[i + 1] && this.dialog[i + 1].who !== this.contact.id) || !this.dialog[i + 1])\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the given message is the first message of a group\r\n     *\r\n     * @param message\r\n     * @param i\r\n     * @returns {boolean}\r\n     */\r\n    isFirstMessageOfGroup(message, i): boolean\r\n    {\r\n        return (i === 0 || this.dialog[i - 1] && this.dialog[i - 1].who !== message.who);\r\n    }\r\n\r\n    /**\r\n     * Check if the given message is the last message of a group\r\n     *\r\n     * @param message\r\n     * @param i\r\n     * @returns {boolean}\r\n     */\r\n    isLastMessageOfGroup(message, i): boolean\r\n    {\r\n        return (i === this.dialog.length - 1 || this.dialog[i + 1] && this.dialog[i + 1].who !== message.who);\r\n    }\r\n\r\n    /**\r\n     * Select contact\r\n     */\r\n    selectContact(): void\r\n    {\r\n        this._chatService.selectContact(this.contact);\r\n    }\r\n\r\n    /**\r\n     * Ready to reply\r\n     */\r\n    readyToReply(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.focusReplyInput();\r\n            this.scrollToBottom();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Focus to the reply input\r\n     */\r\n    focusReplyInput(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.replyInput.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Scroll to the bottom\r\n     *\r\n     * @param {number} speed\r\n     */\r\n    scrollToBottom(speed?: number): void\r\n    {\r\n        speed = speed || 400;\r\n        if ( this.directiveScroll )\r\n        {\r\n            this.directiveScroll.update();\r\n\r\n            setTimeout(() => {\r\n                this.directiveScroll.scrollToBottom(0, speed);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reply\r\n     */\r\n    reply(event): void\r\n    {\r\n        event.preventDefault();\r\n\r\n        if ( !this.replyForm.form.value.message )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Message\r\n        const message = {\r\n            who    : this.user.id,\r\n            message: this.replyForm.form.value.message,\r\n            time   : new Date().toISOString()\r\n        };\r\n\r\n        // Add the message to the chat\r\n        this.dialog.push(message);\r\n\r\n        // Reset the reply form\r\n        this.replyForm.reset();\r\n\r\n        // Update the server\r\n        this._chatService.updateDialog(this.selectedChat.chatId, this.dialog).then(response => {\r\n            this.readyToReply();\r\n        });\r\n    }\r\n}\r\n","<!-- CHAT -->\r\n<div class=\"chat\" fxFlex fxLayout=\"column\">\r\n\r\n    <!-- CHAT TOOLBAR -->\r\n    <mat-toolbar class=\"chat-toolbar\">\r\n\r\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <!-- RESPONSIVE CHATS BUTTON-->\r\n                <button mat-icon-button fxHide.gt-md class=\"responsive-chats-button mr-16\"\r\n                        fuseMatSidenavToggler=\"chat-left-sidenav\"\r\n                        aria-label=\"chats button\">\r\n                    <mat-icon>chat</mat-icon>\r\n                </button>\r\n                <!-- / RESPONSIVE CHATS BUTTON-->\r\n\r\n                <!-- CHAT CONTACT-->\r\n                <div class=\"chat-contact\" fxLayout=\"row\" fxLayoutAlign=\"start center\"\r\n                     fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\r\n\r\n                    <div class=\"avatar-wrapper\">\r\n\r\n                        <img [src]=\"contact.avatar\"\r\n                             class=\"avatar\"\r\n                             alt=\"{{contact.name}}\"/>\r\n\r\n                        <mat-icon class=\"s-16 status\"\r\n                                  [ngClass]=\"contact.status\">\r\n                        </mat-icon>\r\n                    </div>\r\n\r\n                    <div class=\"chat-contact-name\">\r\n                        {{contact.name}}\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- / CHAT CONTACT-->\r\n            </div>\r\n\r\n            <div>\r\n                <button mat-icon-button [matMenuTriggerFor]=\"contactMenu\" aria-label=\"more\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n\r\n                <mat-menu #contactMenu=\"matMenu\">\r\n                    <button mat-menu-item fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\r\n                        Contact Info\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n        </div>\r\n    </mat-toolbar>\r\n    <!-- / CHAT TOOLBAR -->\r\n\r\n    <!-- CHAT CONTENT -->\r\n    <div id=\"chat-content\" fxFlex=\"1 1 auto\"  fusePerfectScrollbar>\r\n\r\n        <!-- CHAT MESSAGES -->\r\n        <div class=\"chat-messages\">\r\n\r\n            <!-- MESSAGE -->\r\n            <div *ngFor=\"let message of dialog; let i = index\" class=\"message-row\"\r\n                 [ngClass]=\"{\r\n                            'me': message.who === user.id,\r\n                            'contact': message.who !== user.id,\r\n                            'first-of-group': isFirstMessageOfGroup(message, i),\r\n                            'last-of-group': isLastMessageOfGroup(message, i)\r\n                            }\">\r\n\r\n                <img *ngIf=\"shouldShowContactAvatar(message, i)\"\r\n                     src=\"{{contact.avatar}}\"\r\n                     class=\"avatar\">\r\n\r\n                <div class=\"bubble\">\r\n                    <div class=\"message\">{{message.message}}</div>\r\n                    <div class=\"time secondary-text\">{{message.time | date:'short'}}</div>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / MESSAGE -->\r\n\r\n        </div>\r\n        <!-- CHAT MESSAGES -->\r\n\r\n    </div>\r\n    <!-- / CHAT CONTENT -->\r\n\r\n    <!-- CHAT FOOTER -->\r\n    <div class=\"chat-footer\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n\r\n        <!-- REPLY FORM -->\r\n        <div class=\"reply-form\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n            <form #replyForm=\"ngForm\"\r\n                  (ngSubmit)=\"reply($event)\"\r\n                  (keydown.enter)=\"reply($event)\"\r\n                  fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <mat-form-field class=\"message-text\" fxFlex floatLabel=\"never\" appearance=\"standard\">\r\n                    <textarea matInput #replyInput placeholder=\"Type your message\"\r\n                              ngModel name=\"message\" [rows]=\"1\" [matTextareaAutosize]=\"true\"></textarea>\r\n                </mat-form-field>\r\n\r\n                <button class=\"send-message-button\" mat-icon-button type=\"submit\" aria-label=\"Send message\">\r\n                    <mat-icon class=\"secondary-text\">send</mat-icon>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n        <!-- / REPLY FORM -->\r\n\r\n    </div>\r\n    <!-- / CHAT FOOTER-->\r\n\r\n</div>\r\n<!-- / CHAT -->\r\n","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MediaObserver } from '@angular/flex-layout';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseMatSidenavHelperService } from '@fuse/directives/fuse-mat-sidenav/fuse-mat-sidenav.service';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-chats-sidenav',\r\n    templateUrl  : './chats.component.html',\r\n    styleUrls    : ['./chats.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatChatsSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    chats: any[];\r\n    chatSearch: any;\r\n    contacts: any[];\r\n    searchText: string;\r\n    user: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     * @param {FuseMatSidenavHelperService} _fuseMatSidenavHelperService\r\n     * @param {MediaObserver} _mediaObserver\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService,\r\n        private _fuseMatSidenavHelperService: FuseMatSidenavHelperService,\r\n        public _mediaObserver: MediaObserver\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.chatSearch = {\r\n            name: ''\r\n        };\r\n        this.searchText = '';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.user = this._chatService.user;\r\n        this.chats = this._chatService.chats;\r\n        this.contacts = this._chatService.contacts;\r\n\r\n        this._chatService.onChatsUpdated\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(updatedChats => {\r\n                this.chats = updatedChats;\r\n            });\r\n\r\n        this._chatService.onUserUpdated\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(updatedUser => {\r\n                this.user = updatedUser;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get chat\r\n     *\r\n     * @param contact\r\n     */\r\n    getChat(contact): void\r\n    {\r\n        this._chatService.getChat(contact);\r\n\r\n        if ( !this._mediaObserver.isActive('gt-md') )\r\n        {\r\n            this._fuseMatSidenavHelperService.getSidenav('chat-left-sidenav').toggle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set user status\r\n     *\r\n     * @param status\r\n     */\r\n    setUserStatus(status): void\r\n    {\r\n        this._chatService.setUserStatus(status);\r\n    }\r\n\r\n    /**\r\n     * Change left sidenav view\r\n     *\r\n     * @param view\r\n     */\r\n    changeLeftSidenavView(view): void\r\n    {\r\n        this._chatService.onLeftSidenavViewChanged.next(view);\r\n    }\r\n\r\n    /**\r\n     * Logout\r\n     */\r\n    logout(): void\r\n    {\r\n        console.log('logout triggered');\r\n    }\r\n}\r\n","<!-- SIDENAV HEADER -->\r\n<div class=\"sidenav-header\">\r\n    <!-- CHATS TOOLBAR -->\r\n    <mat-toolbar>\r\n\r\n        <!-- TOOLBAR TOP -->\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <!-- USER AVATAR WRAPPER -->\r\n            <div class=\"avatar-wrapper\">\r\n\r\n                <!-- USER AVATAR -->\r\n                <img (click)=\"changeLeftSidenavView('user')\"\r\n                     src=\"{{user.avatar}}\"\r\n                     class=\"mat-avatar avatar\"\r\n                     alt=\"{{user.name}}\"/>\r\n                <!-- / USER AVATAR -->\r\n\r\n                <mat-icon class=\"s-16 status\" [ngClass]=\"user.status\"\r\n                          [matMenuTriggerFor]=\"userStatusMenu\"></mat-icon>\r\n\r\n                <!-- USER STATUS -->\r\n                <mat-menu id=\"user-status-menu\" #userStatusMenu=\"matMenu\">\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('online')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status online\"></mat-icon>\r\n                            <span>Online</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('away')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status away\"></mat-icon>\r\n                            <span>Away</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('do-not-disturb')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status do-not-disturb\"></mat-icon>\r\n                            <span>Do not disturb</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('offline')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status offline\"></mat-icon>\r\n                            <span>Offline</span>\r\n                        </div>\r\n                    </button>\r\n                </mat-menu>\r\n                <!-- / USER STATUS -->\r\n\r\n            </div>\r\n            <!-- / USER AVATAR -->\r\n\r\n            <div>\r\n                <button mat-icon-button\r\n                        [matMenuTriggerFor]=\"userMenu\"\r\n                        aria-label=\"more\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #userMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"changeLeftSidenavView('user')\">\r\n                        Profile\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"logout()\">\r\n                        Logout\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR TOP -->\r\n\r\n        <!-- TOOLBAR BOTTOM -->\r\n        <mat-toolbar-row>\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"s-16 secondary-text\">search</mat-icon>\r\n                    <input [(ngModel)]=\"searchText\" type=\"text\" placeholder=\"Search or start new chat\" fxFlex>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR BOTTOM -->\r\n\r\n    </mat-toolbar>\r\n    <!-- / CHATS TOOLBAR -->\r\n\r\n</div>\r\n<!-- / SIDENAV HEADER -->\r\n\r\n<!-- SIDENAV CONTENT -->\r\n<div class=\"sidenav-content\" fusePerfectScrollbar fxFlex>\r\n\r\n    <!-- CHATS CONTENT -->\r\n    <div *fuseIfOnDom [@animateStagger]=\"{value:'50'}\">\r\n\r\n        <!-- CHATS LIST-->\r\n        <div class=\"chat-list\" fxLayout=\"column\">\r\n\r\n            <div matSubheader *ngIf=\"(user.chatList | filter: searchText).length > 0\">\r\n                Chats\r\n            </div>\r\n\r\n            <button mat-button class=\"contact\"\r\n                    *ngFor=\"let chat of user.chatList | filter: searchText\"\r\n                    (click)=\"getChat(chat.contactId)\" ngClass=\"{'unread':contact.unread}\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\" fxLayoutAlign=\"center center\">\r\n                        <img class=\"avatar\" [src]=\"contacts | getById:chat.contactId:'avatar'\"\r\n                             alt=\"{{contacts | getById:chat.contactId:'name'}}\"/>\r\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contacts | getById:chat.contactId:'status'\"></mat-icon>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxFlex>\r\n\r\n                        <div class=\"pr-4\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                            <div class=\"contact-name\">{{contacts | getById:chat.contactId:'name'}}</div>\r\n                            <div class=\"contact-last-message\">{{chat.lastMessage}}</div>\r\n                        </div>\r\n\r\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start end\">\r\n                            <div class=\"contact-last-message-time\">\r\n                                {{chat.lastMessageTime | date}}\r\n                            </div>\r\n                            <div *ngIf=\"chat.unread\" class=\"mt-4 unread-message-count accent\">{{chat.unread}}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </button>\r\n\r\n        </div>\r\n        <!-- / CHATS LIST-->\r\n\r\n        <!-- CONTACTS LIST-->\r\n        <div class=\"contact-list\" fxLayout=\"column\">\r\n\r\n            <div matSubheader *ngIf=\"(contacts | filter: searchText).length > 0\">\r\n                Contacts\r\n            </div>\r\n\r\n            <button mat-button class=\"contact\"\r\n                    *ngFor=\"let contact of contacts| filter: searchText\"\r\n                    (click)=\"getChat(contact.id)\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\">\r\n                        <img src=\"{{contact.avatar}}\" class=\"mat-avatar avatar\" alt=\"{{contact.name}}\"/>\r\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contact.status\"></mat-icon>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n                        <div class=\"contact-name\">{{contact.name}}</div>\r\n                        <p class=\"contact-mood\">{{contact.mood}}</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </button>\r\n\r\n        </div>\r\n        <!-- / CONTACTS LIST-->\r\n\r\n        <!-- NO RESULTS MESSAGE -->\r\n        <div *ngIf=\"(contacts | filter: searchText).length === 0\" class=\"no-results-message\">\r\n            No results..\r\n        </div>\r\n        <!-- NO RESULTS MESSAGE-->\r\n\r\n    </div>\r\n    <!-- / CHATS CONTENT -->\r\n\r\n</div>\r\n<!-- / SIDENAV CONTENT -->\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-user-sidenav',\r\n    templateUrl  : './user.component.html',\r\n    styleUrls    : ['./user.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChatUserSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    user: any;\r\n    userForm: FormGroup;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.user = this._chatService.user;\r\n\r\n        this.userForm = new FormGroup({\r\n            mood  : new FormControl(this.user.mood),\r\n            status: new FormControl(this.user.status)\r\n        });\r\n\r\n        this.userForm.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(500),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(data => {\r\n                this.user.mood = data.mood;\r\n                this.user.status = data.status;\r\n                this._chatService.updateUserData(this.user);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Change left sidenav view\r\n     *\r\n     * @param view\r\n     */\r\n    changeLeftSidenavView(view): void\r\n    {\r\n        this._chatService.onLeftSidenavViewChanged.next(view);\r\n    }\r\n\r\n}\r\n","<!-- SIDENAV HEADER -->\r\n<div class=\"sidenav-header\">\r\n\r\n    <!-- USER TOOLBAR -->\r\n    <mat-toolbar class=\"accent\">\r\n\r\n        <!-- TOOLBAR TOP -->\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <button mat-icon-button (click)=\"changeLeftSidenavView('chats')\" aria-label=\"back\">\r\n                <mat-icon>arrow_back</mat-icon>\r\n            </button>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR TOP -->\r\n\r\n        <!-- TOOLBAR BOTTOM -->\r\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n            <img [src]=\"user.avatar\" class=\"avatar user-avatar huge\" alt=\"{{user.name}}\"/>\r\n            <div class=\"user-name my-8\">{{user.name}}</div>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR BOTTOM -->\r\n\r\n    </mat-toolbar>\r\n    <!-- / USER TOOLBAR -->\r\n</div>\r\n\r\n<!-- SIDENAV CONTENT -->\r\n<div class=\"sidenav-content py-32 px-24\" fxFlex>\r\n\r\n    <!-- USER MOOD -->\r\n    <form [formGroup]=\"userForm\" fxLayout=\"column\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"0 1 auto\">\r\n            <mat-label>Mood</mat-label>\r\n            <textarea matInput name=\"mood\" formControlName=\"mood\" rows=\"3\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-radio-group formControlName=\"status\" fxLayout=\"column\">\r\n\r\n            <mat-radio-button value=\"online\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status online mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Online</span>\r\n                </div>\r\n            </mat-radio-button>\r\n\r\n            <mat-radio-button value=\"away\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status away mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Away</span>\r\n                </div>\r\n            </mat-radio-button>\r\n\r\n            <mat-radio-button value=\"do-not-disturb\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status do-not-disturb mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Do not disturb</span>\r\n                </div>\r\n            </mat-radio-button>\r\n\r\n            <mat-radio-button value=\"offline\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status offline mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Offline</span>\r\n                </div>\r\n            </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n    </form>\r\n    <!-- / USER MOOD -->\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-right-sidenav',\r\n    templateUrl  : './right.component.html',\r\n    styleUrls    : ['./right.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatRightSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    view: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.view = 'contact';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onRightSidenavViewChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(view => {\r\n                this.view = view;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n}\r\n","<div [ngSwitch]=\"view\" class=\"views\">\r\n\r\n    <chat-contact-sidenav class=\"view\"\r\n                          *ngSwitchCase=\"'contact'\"\r\n                          [@slideInRight]\r\n                          fusePerfectScrollbar>\r\n    </chat-contact-sidenav>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-contact-sidenav',\r\n    templateUrl  : './contact.component.html',\r\n    styleUrls    : ['./contact.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChatContactSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    contact: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onContactSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(contact => {\r\n                this.contact = contact;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- SIDENAV HEADER -->\r\n<div class=\"sidenav-header\" *ngIf=\"contact\">\r\n\r\n    <!-- CONTACT TOOLBAR -->\r\n    <mat-toolbar class=\"accent\">\r\n\r\n        <!-- TOOLBAR TOP -->\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <div>Contact Info</div>\r\n\r\n            <button mat-icon-button fuseMatSidenavToggler=\"chat-right-sidenav\" aria-label=\"close\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR TOP -->\r\n\r\n        <!-- TOOLBAR BOTTOM -->\r\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge\" alt=\"{{contact.name}}\"/>\r\n            <div class=\"contact-name my-8\">{{contact.name}}</div>\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR BOTTOM -->\r\n\r\n    </mat-toolbar>\r\n    <!-- / CONTACT TOOLBAR -->\r\n</div>\r\n\r\n<!-- SIDENAV CONTENT -->\r\n<div class=\"sidenav-content py-32 px-24\" fxFlex fxLayout=\"column\" *ngIf=\"contact\">\r\n\r\n    <!-- CONTACT MOOD -->\r\n    <div class=\"secondary-text mb-8\">Mood</div>\r\n    <div>{{contact.mood}}</div>\r\n    <!-- / CONTACT MOOD -->\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\nimport { ChatComponent } from 'app/main/apps/chat/chat.component';\r\nimport { ChatStartComponent } from 'app/main/apps/chat/chat-start/chat-start.component';\r\nimport { ChatViewComponent } from 'app/main/apps/chat/chat-view/chat-view.component';\r\nimport { ChatChatsSidenavComponent } from 'app/main/apps/chat/sidenavs/left/chats/chats.component';\r\nimport { ChatUserSidenavComponent } from 'app/main/apps/chat/sidenavs/left/user/user.component';\r\nimport { ChatLeftSidenavComponent } from 'app/main/apps/chat/sidenavs/left/left.component';\r\nimport { ChatRightSidenavComponent } from 'app/main/apps/chat/sidenavs/right/right.component';\r\nimport { ChatContactSidenavComponent } from 'app/main/apps/chat/sidenavs/right/contact/contact.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '**',\r\n        component: ChatComponent,\r\n        children: [],\r\n        resolve: {\r\n            chat: ChatService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ChatComponent,\r\n        ChatViewComponent,\r\n        ChatStartComponent,\r\n        ChatChatsSidenavComponent,\r\n        ChatUserSidenavComponent,\r\n        ChatLeftSidenavComponent,\r\n        ChatRightSidenavComponent,\r\n        ChatContactSidenavComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatRadioModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n\r\n        FuseSharedModule\r\n    ],\r\n    providers   : [\r\n        ChatService\r\n    ]\r\n})\r\nexport class ChatModule\r\n{\r\n}\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\n@Component({\r\n    selector     : 'chat-start',\r\n    templateUrl  : './chat-start.component.html',\r\n    styleUrls    : ['./chat-start.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatStartComponent\r\n{\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n","<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n    <div class=\"big-circle app-logo\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n         [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n        <mat-icon class=\"s-64 s-md-128 mat-accent\">chat</mat-icon>\r\n    </div>\r\n\r\n    <span class=\"app-title mt-48 mb-8\" [@animate]=\"{value:'*',params:{delay:'100ms',y:'25px'}}\">\r\n        Chat App\r\n    </span>\r\n\r\n    <span fxHide fxShow.gt-md class=\"app-message\" [@animate]=\"{value:'*',params:{delay:'200ms',y:'50px'}}\">\r\n        Select a contact to start a chat!\r\n    </span>\r\n\r\n    <button mat-raised-button fxHide.gt-md fuseMatSidenavToggler=\"chat-left-sidenav\">\r\n        Select a contact to start a chat!\r\n    </button>\r\n\r\n</div>\r\n"]}