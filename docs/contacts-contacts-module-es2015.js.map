{"version":3,"sources":["./src/app/main/apps/contacts/selected-bar/selected-bar.component.ts","./src/app/main/apps/contacts/selected-bar/selected-bar.component.html","./src/app/main/apps/contacts/contact.model.ts","./src/app/main/apps/contacts/contacts.module.ts","./src/app/main/apps/contacts/contacts.service.ts","./src/app/main/apps/contacts/sidebars/main/main.component.ts","./src/app/main/apps/contacts/sidebars/main/main.component.html","./src/app/main/apps/contacts/contacts.component.ts","./src/app/main/apps/contacts/contacts.component.html","./src/app/main/apps/contacts/contact-list/contact-list.component.ts","./src/app/main/apps/contacts/contact-list/contact-list.component.html","./src/app/main/apps/contacts/contact-form/contact-form.component.ts","./src/app/main/apps/contacts/contact-form/contact-form.component.html"],"names":[],"mappings":"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","file":"contacts-contacts-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector   : 'selected-bar',\r\n    templateUrl: './selected-bar.component.html',\r\n    styleUrls  : ['./selected-bar.component.scss']\r\n})\r\nexport class ContactsSelectedBarComponent implements OnInit, OnDestroy\r\n{\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    hasSelectedContacts: boolean;\r\n    isIndeterminate: boolean;\r\n    selectedContacts: string[];\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                this.selectedContacts = selectedContacts;\r\n                setTimeout(() => {\r\n                    this.hasSelectedContacts = selectedContacts.length > 0;\r\n                    this.isIndeterminate = (selectedContacts.length !== this._contactsService.contacts.length && selectedContacts.length > 0);\r\n                }, 0);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Select all\r\n     */\r\n    selectAll(): void\r\n    {\r\n        this._contactsService.selectContacts();\r\n    }\r\n\r\n    /**\r\n     * Deselect all\r\n     */\r\n    deselectAll(): void\r\n    {\r\n        this._contactsService.deselectContacts();\r\n    }\r\n\r\n    /**\r\n     * Delete selected contacts\r\n     */\r\n    deleteSelectedContacts(): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete all selected contacts?';\r\n\r\n        this.confirmDialogRef.afterClosed()\r\n            .subscribe(result => {\r\n                if ( result )\r\n                {\r\n                    this._contactsService.deleteSelectedContacts();\r\n                }\r\n                this.confirmDialogRef = null;\r\n            });\r\n    }\r\n}\r\n","<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"p-24\">\r\n\r\n    <div class=\"close-button-wrapper\" fxFlex=\"0 1 auto\" fxFlex.gt-sm=\"220px\" (click)=\"deselectAll()\">\r\n        <button class=\"p-8\" mat-button fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"mr-8\">arrow_back</mat-icon>\r\n            <span class=\"text-uppercase\">Back</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n        <div>\r\n            <span class=\"selected-contacts-count\">\r\n                <span class=\"mr-4\">{{selectedContacts.length}}</span>\r\n                <span>selected</span>\r\n            </span>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-menu #selectMenu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"selectAll()\">Select all</button>\r\n                <button mat-menu-item (click)=\"deselectAll()\">Deselect all</button>\r\n            </mat-menu>\r\n\r\n        </div>\r\n\r\n        <div class=\"multi-select-actions\">\r\n            <button mat-icon-button (click)=\"deleteSelectedContacts()\" aria-label=\"delete selected\">\r\n                <mat-icon>delete</mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Contact\r\n{\r\n    id: string;\r\n    name: string;\r\n    lastName: string;\r\n    avatar: string;\r\n    nickname: string;\r\n    company: string;\r\n    jobTitle: string;\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    birthday: string;\r\n    notes: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param contact\r\n     */\r\n    constructor(contact)\r\n    {\r\n        {\r\n            this.id = contact.id || FuseUtils.generateGUID();\r\n            this.name = contact.name || '';\r\n            this.lastName = contact.lastName || '';\r\n            this.avatar = contact.avatar || 'assets/images/avatars/profile.jpg';\r\n            this.nickname = contact.nickname || '';\r\n            this.company = contact.company || '';\r\n            this.jobTitle = contact.jobTitle || '';\r\n            this.email = contact.email || '';\r\n            this.phone = contact.phone || '';\r\n            this.address = contact.address || '';\r\n            this.birthday = contact.birthday || '';\r\n            this.notes = contact.notes || '';\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule, FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { ContactsComponent } from 'app/main/apps/contacts/contacts.component';\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactListComponent } from 'app/main/apps/contacts/contact-list/contact-list.component';\r\nimport { ContactsSelectedBarComponent } from 'app/main/apps/contacts/selected-bar/selected-bar.component';\r\nimport { ContactsMainSidebarComponent } from 'app/main/apps/contacts/sidebars/main/main.component';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '**',\r\n        component: ContactsComponent,\r\n        resolve  : {\r\n            contacts: ContactsService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        ContactsComponent,\r\n        ContactsContactListComponent,\r\n        ContactsSelectedBarComponent,\r\n        ContactsMainSidebarComponent,\r\n        ContactsContactFormDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatTableModule,\r\n        MatToolbarModule,\r\n\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers      : [\r\n        ContactsService\r\n    ],\r\n    entryComponents: [\r\n        ContactsContactFormDialogComponent\r\n    ]\r\n})\r\nexport class ContactsModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Contact } from 'app/main/apps/contacts/contact.model';\r\n\r\n@Injectable()\r\nexport class ContactsService implements Resolve<any>\r\n{\r\n    onContactsChanged: BehaviorSubject<any>;\r\n    onSelectedContactsChanged: BehaviorSubject<any>;\r\n    onUserDataChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: Subject<any>;\r\n    onFilterChanged: Subject<any>;\r\n\r\n    contacts: Contact[];\r\n    user: any;\r\n    selectedContacts: string[] = [];\r\n\r\n    searchText: string;\r\n    filterBy: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onContactsChanged = new BehaviorSubject([]);\r\n        this.onSelectedContactsChanged = new BehaviorSubject([]);\r\n        this.onUserDataChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new Subject();\r\n        this.onFilterChanged = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getUserData()\r\n            ]).then(\r\n                ([files]) => {\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        this.searchText = searchText;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    this.onFilterChanged.subscribe(filter => {\r\n                        this.filterBy = filter;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    resolve();\r\n\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get contacts\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getContacts(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this._httpClient.get('api/contacts-contacts')\r\n                    .subscribe((response: any) => {\r\n\r\n                        this.contacts = response;\r\n\r\n                        if ( this.filterBy === 'starred' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.starred.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.filterBy === 'frequent' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.frequentContacts.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.searchText && this.searchText !== '' )\r\n                        {\r\n                            this.contacts = FuseUtils.filterArrayByString(this.contacts, this.searchText);\r\n                        }\r\n\r\n                        this.contacts = this.contacts.map(contact => {\r\n                            return new Contact(contact);\r\n                        });\r\n\r\n                        this.onContactsChanged.next(this.contacts);\r\n                        resolve(this.contacts);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user data\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUserData(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this._httpClient.get('api/contacts-user/5725a6802d10e277a0f35724')\r\n                    .subscribe((response: any) => {\r\n                        this.user = response;\r\n                        this.onUserDataChanged.next(this.user);\r\n                        resolve(this.user);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Toggle selected contact by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedContact(id): void\r\n    {\r\n        // First, check if we already have that contact as selected...\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            const index = this.selectedContacts.indexOf(id);\r\n\r\n            if ( index !== -1 )\r\n            {\r\n                this.selectedContacts.splice(index, 1);\r\n\r\n                // Trigger the next event\r\n                this.onSelectedContactsChanged.next(this.selectedContacts);\r\n\r\n                // Return\r\n                return;\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedContacts.push(id);\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            this.deselectContacts();\r\n        }\r\n        else\r\n        {\r\n            this.selectContacts();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select contacts\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectContacts(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // If there is no filter, select all contacts\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedContacts = [];\r\n            this.contacts.map(contact => {\r\n                this.selectedContacts.push(contact.id);\r\n            });\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Update contact\r\n     *\r\n     * @param contact\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateContact(contact): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/contacts-contacts/' + contact.id, {...contact})\r\n                .subscribe(response => {\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update user data\r\n     *\r\n     * @param userData\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateUserData(userData): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/contacts-user/' + this.user.id, {...userData})\r\n                .subscribe(response => {\r\n                    this.getUserData();\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deselect contacts\r\n     */\r\n    deselectContacts(): void\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Delete contact\r\n     *\r\n     * @param contact\r\n     */\r\n    deleteContact(contact): void\r\n    {\r\n        const contactIndex = this.contacts.indexOf(contact);\r\n        this.contacts.splice(contactIndex, 1);\r\n        this.onContactsChanged.next(this.contacts);\r\n    }\r\n\r\n    /**\r\n     * Delete selected contacts\r\n     */\r\n    deleteSelectedContacts(): void\r\n    {\r\n        for ( const contactId of this.selectedContacts )\r\n        {\r\n            const contact = this.contacts.find(_contact => {\r\n                return _contact.id === contactId;\r\n            });\r\n            const contactIndex = this.contacts.indexOf(contact);\r\n            this.contacts.splice(contactIndex, 1);\r\n        }\r\n        this.onContactsChanged.next(this.contacts);\r\n        this.deselectContacts();\r\n    }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector   : 'contacts-main-sidebar',\r\n    templateUrl: './main.component.html',\r\n    styleUrls  : ['./main.component.scss']\r\n})\r\nexport class ContactsMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    user: any;\r\n    filterBy: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.filterBy = this._contactsService.filterBy || 'all';\r\n\r\n        this._contactsService.onUserDataChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Change the filter\r\n     *\r\n     * @param filter\r\n     */\r\n    changeFilter(filter): void\r\n    {\r\n        this.filterBy = filter;\r\n        this._contactsService.onFilterChanged.next(this.filterBy);\r\n    }\r\n}\r\n","<div class=\"sidebar-content\">\r\n\r\n    <div class=\"card\">\r\n\r\n        <!-- SIDEBAR HEADER -->\r\n        <div class=\"header p-24\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <!-- USER -->\r\n            <img [src]=\"user.avatar\" class=\"avatar mr-16\" [alt]=\"user.name\"/>\r\n            <span class=\"h5\">{{user.name}}</span>\r\n            <!-- / USER -->\r\n\r\n        </div>\r\n        <!-- / SIDEBAR HEADER -->\r\n\r\n        <!-- SIDEBAR CONTENT -->\r\n        <div class=\"content py-16\" fusePerfectScrollbar>\r\n\r\n            <div class=\"nav material2\">\r\n\r\n                <div class=\"nav-item\" aria-label=\"inbox\">\r\n                    <a class=\"nav-link\" matRipple (click)=\"changeFilter('all')\"\r\n                       [ngClass]=\"{'active accent':filterBy ==='all'}\">\r\n                        <span class=\"title\">All Contacts</span>\r\n                    </a>\r\n                </div>\r\n\r\n                <div class=\"nav-item\" aria-label=\"frequently contacted\" (click)=\"changeFilter('frequent')\">\r\n                    <a class=\"nav-link\" matRipple [ngClass]=\"{'active accent':filterBy ==='frequent'}\">\r\n                        <div class=\"title\">Freequently contacted</div>\r\n                    </a>\r\n                </div>\r\n\r\n                <div class=\"nav-item\" aria-label=\"starred\" (click)=\"changeFilter('starred')\">\r\n                    <a class=\"nav-link\" matRipple [ngClass]=\"{'active accent':filterBy ==='starred'}\">\r\n                        <div class=\"title\">Starred Contacts</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\n@Component({\r\n    selector     : 'contacts',\r\n    templateUrl  : './contacts.component.html',\r\n    styleUrls    : ['./contacts.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ContactsComponent implements OnInit, OnDestroy\r\n{\r\n    dialogRef: any;\r\n    hasSelectedContacts: boolean;\r\n    searchInput: FormControl;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                this.hasSelectedContacts = selectedContacts.length > 0;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._contactsService.onSearchTextChanged.next(searchText);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Reset the search\r\n        this._contactsService.onSearchTextChanged.next('');\r\n\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New contact\r\n     */\r\n    newContact(): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                action: 'new'\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe((response: FormGroup) => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                this._contactsService.updateContact(response.getRawValue());\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"contacts\" class=\"page-layout simple left-sidebar inner-sidebar inner-scroll\">\r\n\r\n    <!-- HEADER -->\r\n    <div class=\"header accent p-16 p-sm-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n         fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\r\n\r\n        <!-- APP TITLE -->\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button class=\"sidebar-toggle mr-12\" fxHide.gt-sm\r\n                    (click)=\"toggleSidebar('contacts-main-sidebar')\">\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n\r\n            <div class=\"logo\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon mr-16\"\r\n                          [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">account_box\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Contacts\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / APP TITLE -->\r\n\r\n        <!-- SEARCH -->\r\n        <div class=\"ml-sm-32\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex>\r\n\r\n            <div class=\"search-wrapper mt-16 mt-sm-0\">\r\n\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a contact\">\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / SEARCH -->\r\n\r\n    </div>\r\n    <!-- / HEADER -->\r\n\r\n    <!-- SELECTED BAR -->\r\n    <selected-bar class=\"accent-600\" *ngIf=\"hasSelectedContacts\" [@slideInTop]></selected-bar>\r\n    <!-- / SELECTED BAR -->\r\n\r\n    <!-- CONTENT -->\r\n    <div class=\"content\">\r\n\r\n        <!-- SIDEBAR -->\r\n        <fuse-sidebar class=\"sidebar\" name=\"contacts-main-sidebar\" position=\"left\" lockedOpen=\"gt-sm\">\r\n\r\n            <!-- SIDEBAR CONTENT -->\r\n            <div class=\"content\" fusePerfectScrollbar>\r\n                <contacts-main-sidebar [@animate]=\"{value:'*'}\"></contacts-main-sidebar>\r\n            </div>\r\n            <!-- / SIDEBAR CONTENT -->\r\n\r\n        </fuse-sidebar>\r\n        <!-- / SIDEBAR -->\r\n\r\n        <!-- CENTER -->\r\n        <div class=\"center p-24 pb-56 pr-sm-92\" fusePerfectScrollbar>\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\">\r\n                <contacts-contact-list></contacts-contact-list>\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CENTER -->\r\n\r\n    </div>\r\n    <!-- / CONTENT-->\r\n\r\n</div>\r\n\r\n<!-- ADD CONTACT BUTTON -->\r\n<button mat-fab class=\"accent\" id=\"add-contact-button\" (click)=\"newContact()\" aria-label=\"add contact\"\r\n        [@animate]=\"{value:'*', params:{delay:'300ms',scale:'.2'}}\">\r\n    <mat-icon>person_add</mat-icon>\r\n</button>\r\n<!-- / ADD CONTACT BUTTON -->\r\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\n@Component({\r\n    selector     : 'contacts-contact-list',\r\n    templateUrl  : './contact-list.component.html',\r\n    styleUrls    : ['./contact-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ContactsContactListComponent implements OnInit, OnDestroy\r\n{\r\n    @ViewChild('dialogContent')\r\n    dialogContent: TemplateRef<any>;\r\n\r\n    contacts: any;\r\n    user: any;\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['checkbox', 'avatar', 'name', 'email', 'phone', 'jobTitle', 'buttons'];\r\n    selectedContacts: any[];\r\n    checkboxes: {};\r\n    dialogRef: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._contactsService);\r\n\r\n        this._contactsService.onContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(contacts => {\r\n                this.contacts = contacts;\r\n\r\n                this.checkboxes = {};\r\n                contacts.map(contact => {\r\n                    this.checkboxes[contact.id] = false;\r\n                });\r\n            });\r\n\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                for ( const id in this.checkboxes )\r\n                {\r\n                    if ( !this.checkboxes.hasOwnProperty(id) )\r\n                    {\r\n                        continue;\r\n                    }\r\n\r\n                    this.checkboxes[id] = selectedContacts.includes(id);\r\n                }\r\n                this.selectedContacts = selectedContacts;\r\n            });\r\n\r\n        this._contactsService.onUserDataChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n\r\n        this._contactsService.onFilterChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this._contactsService.deselectContacts();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Edit contact\r\n     *\r\n     * @param contact\r\n     */\r\n    editContact(contact): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                contact: contact,\r\n                action : 'edit'\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData: FormGroup = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    /**\r\n                     * Save\r\n                     */\r\n                    case 'save':\r\n\r\n                        this._contactsService.updateContact(formData.getRawValue());\r\n\r\n                        break;\r\n                    /**\r\n                     * Delete\r\n                     */\r\n                    case 'delete':\r\n\r\n                        this.deleteContact(contact);\r\n\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Delete Contact\r\n     */\r\n    deleteContact(contact): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this._contactsService.deleteContact(contact);\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * On selected change\r\n     *\r\n     * @param contactId\r\n     */\r\n    onSelectedChange(contactId): void\r\n    {\r\n        this._contactsService.toggleSelectedContact(contactId);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param contactId\r\n     */\r\n    toggleStar(contactId): void\r\n    {\r\n        if ( this.user.starred.includes(contactId) )\r\n        {\r\n            this.user.starred.splice(this.user.starred.indexOf(contactId), 1);\r\n        }\r\n        else\r\n        {\r\n            this.user.starred.push(contactId);\r\n        }\r\n\r\n        this._contactsService.updateUserData(this.user);\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService\r\n    )\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        return this._contactsService.onContactsChanged;\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n}\r\n","<mat-table #table [dataSource]=\"dataSource\"\r\n           [@animateStagger]=\"{value:'50'}\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"checkbox\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <mat-checkbox [(ngModel)]=\"checkboxes[contact.id]\" (ngModelChange)=\"onSelectedChange(contact.id)\"\r\n                          (click)=\"$event.stopPropagation()\">\r\n            </mat-checkbox>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Avatar Column -->\r\n    <ng-container matColumnDef=\"avatar\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <img class=\"avatar\" *ngIf=\"contact.avatar\" [alt]=\"contact.name\"\r\n                 [src]=\"contact.avatar\"/>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <p class=\"text-truncate font-weight-600\">{{contact.name}} {{contact.lastName}}</p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Email Column -->\r\n    <ng-container matColumnDef=\"email\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm>Email</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-sm>\r\n            <p class=\"email text-truncate\">\r\n                {{contact.email}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Phone Column -->\r\n    <ng-container matColumnDef=\"phone\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-md>Phone</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-md>\r\n            <p class=\"phone text-truncate\">\r\n                {{contact.phone}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Job Title Column -->\r\n    <ng-container matColumnDef=\"jobTitle\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Job title</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-lg>\r\n            <p class=\"job-title text-truncate\">\r\n                {{contact.jobTitle}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Company Column -->\r\n    <ng-container matColumnDef=\"company\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Company</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-lg>\r\n            <p class=\"company text-truncate\">\r\n                {{contact.company}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Buttons Column -->\r\n    <ng-container matColumnDef=\"buttons\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <div fxFlex=\"row\" fxLayoutAlign=\"end center\">\r\n                <button mat-icon-button (click)=\"$event.stopPropagation();toggleStar(contact.id)\" aria-label=\"Toggle star\">\r\n                    <mat-icon class=\"amber-fg\" *ngIf=\"user.starred.includes(contact.id)\">star</mat-icon>\r\n                    <mat-icon class=\"secondary-text\" *ngIf=\"!user.starred.includes(contact.id)\">star_border</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\"\r\n                        (click)=\"$event.stopPropagation();\">\r\n                    <mat-icon class=\"secondary-text\">more_vert</mat-icon>\r\n                </button>\r\n\r\n                <mat-menu #moreMenu=\"matMenu\">\r\n                    <button mat-menu-item aria-label=\"remove\" (click)=\"deleteContact(contact)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>Remove</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let contact; columns: displayedColumns;\"\r\n             class=\"contact\"\r\n             (click)=\"editContact(contact)\"\r\n             [ngClass]=\"{'accent-50':checkboxes[contact.id]}\"\r\n             [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n    </mat-row>\r\n</mat-table>\r\n\r\n\r\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { Contact } from 'app/main/apps/contacts/contact.model';\r\n\r\n@Component({\r\n    selector     : 'contacts-contact-form-dialog',\r\n    templateUrl  : './contact-form.component.html',\r\n    styleUrls    : ['./contact-form.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ContactsContactFormDialogComponent\r\n{\r\n    action: string;\r\n    contact: Contact;\r\n    contactForm: FormGroup;\r\n    dialogTitle: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatDialogRef<ContactsContactFormDialogComponent>} matDialogRef\r\n     * @param _data\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<ContactsContactFormDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private _data: any,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.action = _data.action;\r\n\r\n        if ( this.action === 'edit' )\r\n        {\r\n            this.dialogTitle = 'Edit Contact';\r\n            this.contact = _data.contact;\r\n        }\r\n        else\r\n        {\r\n            this.dialogTitle = 'New Contact';\r\n            this.contact = new Contact({});\r\n        }\r\n\r\n        this.contactForm = this.createContactForm();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Create contact form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createContactForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            id      : [this.contact.id],\r\n            name    : [this.contact.name],\r\n            lastName: [this.contact.lastName],\r\n            avatar  : [this.contact.avatar],\r\n            nickname: [this.contact.nickname],\r\n            company : [this.contact.company],\r\n            jobTitle: [this.contact.jobTitle],\r\n            email   : [this.contact.email],\r\n            phone   : [this.contact.phone],\r\n            address : [this.contact.address],\r\n            birthday: [this.contact.birthday],\r\n            notes   : [this.contact.notes]\r\n        });\r\n    }\r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar matDialogTitle class=\"mat-accent m-0\">\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"title dialog-title\">{{dialogTitle}}</span>\r\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n\r\n        <mat-toolbar-row class=\"toolbar-bottom py-16\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge m-0\"\r\n                 [alt]=\"contact.name\"/>\r\n            <div class=\"contact-name mt-8\">{{contact.name}} {{contact.lastName}}</div>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 pb-0 m-0\" fusePerfectScrollbar>\r\n\r\n        <form [formGroup]=\"contactForm\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Name</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                    <input name=\"name\" formControlName=\"name\" matInput required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Lastname</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                    <input name=\"lastName\" formControlName=\"lastName\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Nickname</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">star</mat-icon>\r\n                    <input name=\"nickname\" formControlName=\"nickname\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Phone number</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n                    <input formControlName=\"phone\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Email</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">email</mat-icon>\r\n                    <input name=\"email\" formControlName=\"email\" matInput type=\"email\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Company</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">domain</mat-icon>\r\n                    <input name=\"company\" formControlName=\"company\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Job title</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">work</mat-icon>\r\n                    <input name=\"jobTitle\" formControlName=\"jobTitle\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Birthday</mat-label>\r\n                    <input matInput [matDatepicker]=\"birthdayDatePicker\" name=\"birthday\" formControlName=\"birthday\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"birthdayDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #birthdayDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Address</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\r\n                    <input name=\"address\" formControlName=\"address\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" class=\"textarea-wrapper\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Notes</mat-label>\r\n                    <textarea name=\"notes\" formControlName=\"notes\" matInput type=\"text\" max-rows=\"4\"></textarea>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n\r\n        <button *ngIf=\"action === 'edit'\"\r\n                mat-button\r\n                class=\"mr-8\"\r\n                (click)=\"matDialogRef.close(['delete',contactForm])\"\r\n                aria-label=\"Delete\"\r\n                matTooltip=\"Delete\">\r\n            DELETE\r\n        </button>\r\n\r\n        <button *ngIf=\"action !== 'edit'\"\r\n                mat-button\r\n                class=\"save-button\"\r\n                (click)=\"matDialogRef.close(contactForm)\"\r\n                [disabled]=\"contactForm.invalid\"\r\n                aria-label=\"SAVE\">\r\n            ADD\r\n        </button>\r\n\r\n        <button *ngIf=\"action === 'edit'\"\r\n                mat-button\r\n                class=\"save-button\"\r\n                (click)=\"matDialogRef.close(['save',contactForm])\"\r\n                [disabled]=\"contactForm.invalid\"\r\n                aria-label=\"SAVE\">\r\n            SAVE\r\n        </button>\r\n\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}