{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js"],"names":["_c0","_c1","MatTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","MatTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","MatTable","arguments","stickyCssClass","needsPositionStickyOnElement","ɵfac","MatTable_Factory","t","ɵMatTable_BaseFactory","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatTable_HostBindings","fixedLayout","exportAs","features","provide","useClass","useExisting","ngContentSelectors","decls","vars","consts","template","MatTable_Template","directives","styles","encapsulation","args","selector","host","providers","None","changeDetection","Default","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","ɵdir","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","_columnCssClassName","push","cssClassFriendlyName","_name","_setNameInput","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","inputs","sticky","propDecorators","MatHeaderCell","MatHeaderCell_Factory","ɵMatHeaderCell_BaseFactory","MatFooterCell","MatFooterCell_Factory","ɵMatFooterCell_BaseFactory","MatCell","MatCell_Factory","ɵMatCell_BaseFactory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","columns","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","when","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatNoDataRow","MatNoDataRow_Factory","ɵMatNoDataRow_BaseFactory","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","EXPORTED_DECLARATIONS","MatTableModule","ɵmod","ɵinj","factory","MatTableModule_Factory","imports","ngJitMode","declarations","exports","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","EMPTY","sortingDataAccessor","data","sortHeaderId","value","numberValue","Number","sortData","sort","active","direction","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","filter","dataStr","Object","keys","reduce","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_data","_updateChangeSubscription","sortChange","_sort","initialized","pageChange","_paginator","page","dataStream","filteredData","pipe","_filterData","orderedData","_orderData","paginatedData","_pageData","unsubscribe","subscribe","next","obj","paginator","_updatePaginator","length","slice","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min","CdkTextColumn_th_1_Template","CdkTextColumn_td_2_Template","mixinHasStickyInput","base","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","CdkCellDef_Factory","ctorParameters","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","replace","_updateColumnCssClassName","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","stickyEnd","undefined","decorators","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","task","_createScheduleIfNeeded","complete","_getScheduleObservable","schedule","isStable","onStable","_CoalescedStyleScheduler_Factory","ɵprov","token","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_cachedCellWidths","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","_scheduleStyleChanges","element","_removeStickyStyle","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","start","end","_addStickyStyle","rowsToStick","stickyStates","position","reverse","states","stickyHeights","elementsToStick","rowIndex","stickyHeight","Array","from","getBoundingClientRect","height","tableElement","tfoot","querySelector","dir","style","hasDirection","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","change","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","ngDevMode","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","updateStickyColumnStyles","_checkStickyStates","_rowOutlet","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","headerRowDef","footerRowDef","noDataRow","_customNoDataRow","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","renderRows","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","dataColumnsChanged","_forceRenderDataRows","headerColumnsChanged","footerColumnsChanged","_dataSource","connect","isArray","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","index","outlet","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","renderIndex","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","_trackByFn","fn","console","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","viewQuery","CdkTable_Query","CdkTable_HostBindings","CdkTable_Template","String","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","CdkTableModule","CdkTableModule_Factory"],"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","file":"default~contacts-contacts-module~dashboards-project-project-module~e-commerce-e-commerce-module~file~d6638ca9-es5.js","sourcesContent":["import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], hostVars: 2, hostBindings: function MatTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-table-fixed-layout\", ctx.fixedLayout);\n    } }, exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.NoDataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky;position:sticky}.mat-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table',\n                    '[class.mat-table-fixed-layout]': 'fixedLayout'\n                },\n                providers: [\n                    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                    //  is only included in the build if used.\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky;position:sticky}.mat-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return ɵMatHeaderCell_BaseFactory(t || MatHeaderCell); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCell_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCell);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], null, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return ɵMatFooterCell_BaseFactory(t || MatFooterCell); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCell_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatFooterCell);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return ɵMatCell_BaseFactory(t || MatCell); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCell_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCell);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n}\nMatNoDataRow.ɵfac = function MatNoDataRow_Factory(t) { return ɵMatNoDataRow_BaseFactory(t || MatNoDataRow); };\nMatNoDataRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatNoDataRow_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatNoDataRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matNoDataRow]',\n                providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef, MatHeaderCellDef, MatCellDef, MatHeaderCell, MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule, MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * @docs-private\n     */\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._cachedCellWidths = [];\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i]);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i]);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyHeight = 0; rowIndex < rows.length; rowIndex++) {\n            stickyHeights[rowIndex] = stickyHeight;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            if (rowIndex !== rows.length - 1) {\n                stickyHeight += row.getBoundingClientRect().height;\n            }\n        }\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const height = stickyHeights[rowIndex];\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, height);\n                }\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n    /**\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n     *    parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _viewRepeater, _coalescedStyleScheduler, \n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n    // this property will never be null.\n    // tslint:disable-next-line: lightweight-tokens\n    _viewportRuler) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n        // refresh its cache of cell widths the next time sticky styles are updated.\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        if (this._viewportRuler) {\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n                this._forceRecalculateCellWidths = true;\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\n        if (this._viewRepeater) {\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                if (change.operation === 1 /* INSERTED */ && change.context) {\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                }\n            });\n        }\n        else {\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\n                if (record.previousIndex == null) {\n                    const renderRow = record.item;\n                    const rowDef = renderRow.rowDef;\n                    const context = { $implicit: renderRow.data };\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                }\n                else if (currentIndex == null) {\n                    viewContainer.remove(prevIndex);\n                }\n                else {\n                    const view = viewContainer.get(prevIndex);\n                    viewContainer.move(view, currentIndex);\n                }\n            });\n        }\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(NoDataRowOutlet, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                ],\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); }, imports: [[ScrollingModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map"]}