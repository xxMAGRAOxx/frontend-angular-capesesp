{"version":3,"sources":["webpack:///src/app/main/apps/mail/sidebars/main/main-sidebar.component.ts","webpack:///src/app/main/apps/mail/sidebars/main/main-sidebar.component.html","webpack:///src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.html","webpack:///src/app/main/apps/mail/i18n/tr.ts","webpack:///src/app/main/apps/mail/i18n/en.ts","webpack:///src/app/main/apps/mail/mail.module.ts","webpack:///src/app/main/apps/mail/mail.service.ts","webpack:///src/app/main/apps/mail/mail.component.ts","webpack:///src/app/main/apps/mail/mail.component.html","webpack:///src/app/main/apps/mail/mail.model.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list.component.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list.component.html","webpack:///src/app/main/apps/mail/mail-details/mail-details.component.ts","webpack:///src/app/main/apps/mail/mail-details/mail-details.component.html","webpack:///src/app/main/apps/mail/dialogs/compose/compose.component.ts","webpack:///src/app/main/apps/mail/dialogs/compose/compose.component.html"],"names":["MailMainSidebarComponent","_mailService","_matDialog","accounts","creapond","withinpixels","selectedAccount","_unsubscribeAll","onFoldersChanged","pipe","subscribe","folders","onFiltersChanged","filters","onLabelsChanged","labels","next","complete","dialogRef","open","panelClass","afterClosed","response","actionType","formData","console","log","getRawValue","composeDialog","selector","templateUrl","styleUrls","encapsulation","None","animations","MailListItemComponent","mail","onSelectedMailsChanged","selectedMails","selected","length","id","toggleSelectedMail","event","stopPropagation","toggleStar","updateMail","toggleImportant","onSelectedChange","$event","locale","lang","data","MAIL","COMPOSE","FOLDERS","FILTERS","LABELS","NO_MESSAGES","SELECT_A_MESSAGE_TO_READ","SEARCH_PLACEHOLDER","routes","path","component","resolve","redirectTo","MailModule","forChild","declarations","imports","providers","entryComponents","MailService","_httpClient","searchText","onMailsChanged","onCurrentMailChanged","onSearchTextChanged","route","state","routeParams","params","Promise","reject","all","getFolders","getFilters","getLabels","getMails","then","mailId","setCurrentMail","get","labelHandle","getMailsByLabel","filterHandle","getMailsByFilter","getMailsByFolder","folderHandle","handle","folderId","mails","map","filterArrayByString","labelId","index","indexOf","splice","push","find","deselectMails","selectMails","filterParameter","filterValue","undefined","filter","currentMail","folder","post","MailComponent","_fuseSidebarService","_fuseTranslationLoaderService","loadTranslations","searchInput","setTimeout","hasSelectedMails","isIndeterminate","valueChanges","toggleSelectAll","toggleLabelOnSelectedMails","setFolderOnSelectedMails","name","getSidebar","toggleOpen","toggleSidebar","Mail","from","to","subject","message","time","read","starred","important","hasAttachments","attachments","MailListComponent","_activatedRoute","_location","snapshot","go","MailDetailsComponent","showDetails","MailComposeDialogComponent","matDialogRef","_data","composeForm","createComposeForm","showExtraToFields","value","disabled","cc","bcc","toggleExtraToFields"],"mappings":"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","file":"mail-mail-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { MailService } from 'app/main/apps/mail/mail.service';\r\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\r\n\r\n@Component({\r\n    selector     : 'mail-main-sidebar',\r\n    templateUrl  : './main-sidebar.component.html',\r\n    styleUrls    : ['./main-sidebar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class MailMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    folders: any[];\r\n    filters: any[];\r\n    labels: any[];\r\n    accounts: object;\r\n    selectedAccount: string;\r\n    dialogRef: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MailService} _mailService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _mailService: MailService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.accounts = {\r\n            creapond    : 'johndoe@creapond.com',\r\n            withinpixels: 'johndoe@withinpixels.com'\r\n        };\r\n        this.selectedAccount = 'creapond';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._mailService.onFoldersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.folders = folders;\r\n            });\r\n\r\n        this._mailService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(filters => {\r\n                this.filters = filters;\r\n            });\r\n\r\n        this._mailService.onLabelsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.labels = labels;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Compose dialog\r\n     */\r\n    composeDialog(): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(MailComposeDialogComponent, {\r\n            panelClass: 'mail-compose-dialog'\r\n        });\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData: FormGroup = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    /**\r\n                     * Send\r\n                     */\r\n                    case 'send':\r\n                        console.log('new Mail', formData.getRawValue());\r\n                        break;\r\n                    /**\r\n                     * Delete\r\n                     */\r\n                    case 'delete':\r\n                        console.log('delete Mail');\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n}\r\n","<!-- SIDEBAR HEADER -->\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\r\n     class=\"header accent p-24 pb-4\">\r\n\r\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">mail\r\n        </mat-icon>\r\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Mailbox</span>\r\n    </div>\r\n\r\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\r\n        <div class=\"title\">John Doe</div>\r\n        <mat-form-field floatLabel=\"never\">\r\n            <mat-select class=\"account-selection\" placeholder=\"Mail Selection\"\r\n                        [ngModel]=\"selectedAccount\">\r\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\r\n                    {{account.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR HEADER -->\r\n\r\n<!-- SIDEBAR CONTENT -->\r\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\r\n\r\n    <div class=\"px-24 pt-32 pb-12\">\r\n        <button mat-raised-button\r\n                class=\"mat-accent compose-dialog-button w-100-p\"\r\n                (click)=\"composeDialog()\"\r\n                aria-label=\"Compose\">\r\n            {{ 'MAIL.COMPOSE' | translate }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"nav material2\">\r\n\r\n        <div class=\"nav-subheader\">{{ 'MAIL.FOLDERS' | translate }}</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let folder of folders\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/' + folder.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"folder.icon\">{{folder.icon}}</mat-icon>\r\n                <span>{{folder.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">{{ 'MAIL.FILTERS' | translate }}</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/filter/' + filter.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" [ngClass]=\"filter.color\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\r\n                <span>{{filter.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">{{ 'MAIL.LABELS' | translate }}</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let label of labels\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/label/' + label.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':label.color}\">label</mat-icon>\r\n                <span>{{label.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Mail } from 'app/main/apps/mail/mail.model';\r\nimport { MailService } from 'app/main/apps/mail/mail.service';\r\n\r\n@Component({\r\n    selector     : 'mail-list-item',\r\n    templateUrl  : './mail-list-item.component.html',\r\n    styleUrls    : ['./mail-list-item.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MailListItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() mail: Mail;\r\n    labels: any[];\r\n\r\n    @HostBinding('class.selected')\r\n    selected: boolean;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MailService} _mailService\r\n     */\r\n    constructor(\r\n        private _mailService: MailService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the initial values\r\n        this.mail = new Mail(this.mail);\r\n\r\n        // Subscribe to update on selected mail change\r\n        this._mailService.onSelectedMailsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedMails => {\r\n                this.selected = false;\r\n\r\n                if ( selectedMails.length > 0 )\r\n                {\r\n                    for ( const mail of selectedMails )\r\n                    {\r\n                        if ( mail.id === this.mail.id )\r\n                        {\r\n                            this.selected = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on label change\r\n        this._mailService.onLabelsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.labels = labels;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On selected change\r\n     */\r\n    onSelectedChange(): void\r\n    {\r\n        this._mailService.toggleSelectedMail(this.mail.id);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param event\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.mail.toggleStar();\r\n\r\n        this._mailService.updateMail(this.mail);\r\n    }\r\n\r\n    /**\r\n     * Toggle Important\r\n     *\r\n     * @param event\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.mail.toggleImportant();\r\n\r\n        this._mailService.updateMail(this.mail);\r\n    }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\r\n                  (click)=\"$event.stopPropagation();\"></mat-checkbox>\r\n\r\n    <div class=\"info\" fxFlex FlexLayout=\"column\">\r\n\r\n        <div class=\"row-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <div class=\"name\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\r\n                <img class=\"avatar\" *ngIf=\"mail.from?.avatar\" alt=\"{{mail.from?.name}}\" src=\"{{mail.from?.avatar}}\"/>\r\n                <div class=\"avatar accent\" *ngIf=\"!mail.from?.avatar\">{{mail.from?.name[0]}}</div>\r\n                <span class=\"text-truncate\" *ngIf=\"mail?.from\">{{mail.from?.name}}</span>\r\n                <mat-icon class=\"s-16 ml-8\" *ngIf=\"mail.hasAttachments\">attachment</mat-icon>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <div class=\"time\">{{mail.time}}</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n\r\n                <div class=\"subject text-truncate\">\r\n                    {{mail.subject}}\r\n                </div>\r\n\r\n                <div class=\"message text-truncate\" *ngIf=\"mail?.message\">\r\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? '...' : ''}}\r\n                </div>\r\n\r\n                <div class=\"labels\" fxLayout=\"row wrap\" fxHide fxShow.gt-sm>\r\n                    <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\r\n                         fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div class=\"label-color\"\r\n                             [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\r\n                        <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","export const locale = {\r\n    lang: 'tr',\r\n    data: {\r\n        MAIL: {\r\n            COMPOSE                 : 'YENİ E-POSTA',\r\n            FOLDERS                 : 'KLASÖRLER',\r\n            FILTERS                 : 'FİLTRELER',\r\n            LABELS                  : 'ETİKETLER',\r\n            NO_MESSAGES             : 'Mesajiniz bulunmamakta!',\r\n            SELECT_A_MESSAGE_TO_READ: 'Okumak için bir mesaj seçin',\r\n            SEARCH_PLACEHOLDER      : 'E-mail yada bir kişi arayın'\r\n        }\r\n    }\r\n};\r\n","export const locale = {\r\n    lang: 'en',\r\n    data: {\r\n        MAIL: {\r\n            COMPOSE                 : 'COMPOSE',\r\n            FOLDERS                 : 'FOLDERS',\r\n            FILTERS                 : 'FILTERS',\r\n            LABELS                  : 'LABELS',\r\n            NO_MESSAGES             : 'There are no messages!',\r\n            SELECT_A_MESSAGE_TO_READ: 'Select a message to read',\r\n            SEARCH_PLACEHOLDER      : 'Search for an e-mail or contact'\r\n        }\r\n    }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { MailService } from 'app/main/apps/mail/mail.service';\r\nimport { MailComponent } from 'app/main/apps/mail/mail.component';\r\nimport { MailListComponent } from 'app/main/apps/mail/mail-list/mail-list.component';\r\nimport { MailListItemComponent } from 'app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component';\r\nimport { MailDetailsComponent } from 'app/main/apps/mail/mail-details/mail-details.component';\r\nimport { MailMainSidebarComponent } from 'app/main/apps/mail/sidebars/main/main-sidebar.component';\r\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'label/:labelHandle',\r\n        component: MailComponent,\r\n        resolve  : {\r\n            mail: MailService\r\n        }\r\n    },\r\n    {\r\n        path     : 'label/:labelHandle/:mailId',\r\n        component: MailComponent,\r\n        resolve  : {\r\n            mail: MailService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle',\r\n        component: MailComponent,\r\n        resolve  : {\r\n            mail: MailService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle/:mailId',\r\n        component: MailComponent,\r\n        resolve  : {\r\n            mail: MailService\r\n        }\r\n    },\r\n    {\r\n        path     : ':folderHandle',\r\n        component: MailComponent,\r\n        resolve  : {\r\n            mail: MailService\r\n        }\r\n    },\r\n    {\r\n        path     : ':folderHandle/:mailId',\r\n        component: MailComponent,\r\n        resolve  : {\r\n            mail: MailService\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'inbox'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        MailComponent,\r\n        MailListComponent,\r\n        MailListItemComponent,\r\n        MailDetailsComponent,\r\n        MailMainSidebarComponent,\r\n        MailComposeDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatToolbarModule,\r\n\r\n        TranslateModule,\r\n\r\n        FuseSharedModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers      : [\r\n        MailService\r\n    ],\r\n    entryComponents: [\r\n        MailComposeDialogComponent\r\n    ]\r\n})\r\nexport class MailModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Mail } from 'app/main/apps/mail/mail.model';\r\n\r\n@Injectable()\r\nexport class MailService implements Resolve<any>\r\n{\r\n    mails: Mail[];\r\n    selectedMails: Mail[];\r\n    currentMail: Mail;\r\n    searchText = '';\r\n\r\n    folders: any[];\r\n    filters: any[];\r\n    labels: any[];\r\n    routeParams: any;\r\n\r\n    onMailsChanged: BehaviorSubject<any>;\r\n    onSelectedMailsChanged: BehaviorSubject<any>;\r\n    onCurrentMailChanged: BehaviorSubject<any>;\r\n    onFoldersChanged: BehaviorSubject<any>;\r\n    onFiltersChanged: BehaviorSubject<any>;\r\n    onLabelsChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.selectedMails = [];\r\n        this.onMailsChanged = new BehaviorSubject([]);\r\n        this.onSelectedMailsChanged = new BehaviorSubject([]);\r\n        this.onCurrentMailChanged = new BehaviorSubject([]);\r\n        this.onFoldersChanged = new BehaviorSubject([]);\r\n        this.onFiltersChanged = new BehaviorSubject([]);\r\n        this.onLabelsChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new BehaviorSubject('');\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getFolders(),\r\n                this.getFilters(),\r\n                this.getLabels(),\r\n                this.getMails()\r\n            ]).then(\r\n                () => {\r\n                    if ( this.routeParams.mailId )\r\n                    {\r\n                        this.setCurrentMail(this.routeParams.mailId);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setCurrentMail(null);\r\n                    }\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        if ( searchText !== '' )\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getMails();\r\n                        }\r\n                        else\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getMails();\r\n                        }\r\n                    });\r\n\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all folders\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFolders(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/mail-folders')\r\n                .subscribe((response: any) => {\r\n                    this.folders = response;\r\n                    this.onFoldersChanged.next(this.folders);\r\n                    resolve(this.folders);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all filters\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFilters(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/mail-filters')\r\n                .subscribe((response: any) => {\r\n                    this.filters = response;\r\n                    this.onFiltersChanged.next(this.filters);\r\n                    resolve(this.filters);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all labels\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getLabels(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/mail-labels')\r\n                .subscribe((response: any) => {\r\n                    this.labels = response;\r\n                    this.onLabelsChanged.next(this.labels);\r\n                    resolve(this.labels);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all mails\r\n     *\r\n     * @returns {Promise<Mail[]>}\r\n     */\r\n    getMails(): Promise<Mail[]>\r\n    {\r\n        if ( this.routeParams.labelHandle )\r\n        {\r\n            return this.getMailsByLabel(this.routeParams.labelHandle);\r\n        }\r\n\r\n        if ( this.routeParams.filterHandle )\r\n        {\r\n            return this.getMailsByFilter(this.routeParams.filterHandle);\r\n        }\r\n\r\n        return this.getMailsByFolder(this.routeParams.folderHandle);\r\n    }\r\n\r\n    /**\r\n     * Get mails by folder\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Mail[]>}\r\n     */\r\n    getMailsByFolder(handle): Promise<Mail[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/mail-folders?handle=' + handle)\r\n                .subscribe((folders: any) => {\r\n\r\n                    const folderId = folders[0].id;\r\n\r\n                    this._httpClient.get('api/mail-mails?folder=' + folderId)\r\n                        .subscribe((mails: any) => {\r\n\r\n                            this.mails = mails.map(mail => {\r\n                                return new Mail(mail);\r\n                            });\r\n\r\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\r\n\r\n                            this.onMailsChanged.next(this.mails);\r\n\r\n                            resolve(this.mails);\r\n\r\n                        }, reject);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get mails by filter\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Mail[]>}\r\n     */\r\n    getMailsByFilter(handle): Promise<Mail[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/mail-mails?' + handle + '=true')\r\n                .subscribe((mails: any) => {\r\n\r\n                    this.mails = mails.map(mail => {\r\n                        return new Mail(mail);\r\n                    });\r\n\r\n                    this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\r\n\r\n                    this.onMailsChanged.next(this.mails);\r\n\r\n                    resolve(this.mails);\r\n\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get mails by label\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Mail[]>}\r\n     */\r\n    getMailsByLabel(handle): Promise<Mail[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/mail-labels?handle=' + handle)\r\n                .subscribe((labels: any) => {\r\n\r\n                    const labelId = labels[0].id;\r\n\r\n                    this._httpClient.get('api/mail-mails?labels=' + labelId)\r\n                        .subscribe((mails: any) => {\r\n\r\n                            this.mails = mails.map(mail => {\r\n                                return new Mail(mail);\r\n                            });\r\n\r\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\r\n\r\n                            this.onMailsChanged.next(this.mails);\r\n\r\n                            resolve(this.mails);\r\n\r\n                        }, reject);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle selected mail by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedMail(id): void\r\n    {\r\n        // First, check if we already have that mail as selected...\r\n        if ( this.selectedMails.length > 0 )\r\n        {\r\n            for ( const mail of this.selectedMails )\r\n            {\r\n                // ...delete the selected mail\r\n                if ( mail.id === id )\r\n                {\r\n                    const index = this.selectedMails.indexOf(mail);\r\n\r\n                    if ( index !== -1 )\r\n                    {\r\n                        this.selectedMails.splice(index, 1);\r\n\r\n                        // Trigger the next event\r\n                        this.onSelectedMailsChanged.next(this.selectedMails);\r\n\r\n                        // Return\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedMails.push(\r\n            this.mails.find(mail => {\r\n                return mail.id === id;\r\n            })\r\n        );\r\n\r\n        // Trigger the next event\r\n        this.onSelectedMailsChanged.next(this.selectedMails);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedMails.length > 0 )\r\n        {\r\n            this.deselectMails();\r\n        }\r\n        else\r\n        {\r\n            this.selectMails();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Select mails\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectMails(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedMails = [];\r\n\r\n        // If there is no filter, select all mails\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedMails = this.mails;\r\n        }\r\n        else\r\n        {\r\n            this.selectedMails.push(...\r\n                this.mails.filter(mail => {\r\n                    return mail[filterParameter] === filterValue;\r\n                })\r\n            );\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedMailsChanged.next(this.selectedMails);\r\n    }\r\n\r\n    /**\r\n     * Deselect mails\r\n     */\r\n    deselectMails(): void\r\n    {\r\n        this.selectedMails = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedMailsChanged.next(this.selectedMails);\r\n    }\r\n\r\n    /**\r\n     * Set current mail by id\r\n     *\r\n     * @param id\r\n     */\r\n    setCurrentMail(id): void\r\n    {\r\n        this.currentMail = this.mails.find(mail => {\r\n            return mail.id === id;\r\n        });\r\n\r\n        this.onCurrentMailChanged.next(this.currentMail);\r\n    }\r\n\r\n    /**\r\n     * Toggle label on selected mails\r\n     *\r\n     * @param labelId\r\n     */\r\n    toggleLabelOnSelectedMails(labelId): void\r\n    {\r\n        this.selectedMails.map(mail => {\r\n\r\n            const index = mail.labels.indexOf(labelId);\r\n\r\n            if ( index !== -1 )\r\n            {\r\n                mail.labels.splice(index, 1);\r\n            }\r\n            else\r\n            {\r\n                mail.labels.push(labelId);\r\n            }\r\n\r\n            this.updateMail(mail);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set folder on selected mails\r\n     *\r\n     * @param folderId\r\n     */\r\n    setFolderOnSelectedMails(folderId): void\r\n    {\r\n        this.selectedMails.map(mail => {\r\n            mail.folder = folderId;\r\n\r\n            this.updateMail(mail);\r\n        });\r\n\r\n        this.deselectMails();\r\n    }\r\n\r\n    /**\r\n     * Update the mail\r\n     *\r\n     * @param mail\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateMail(mail): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/mail-mails/' + mail.id, {...mail})\r\n                .subscribe(response => {\r\n\r\n                    this.getMails().then(mails => {\r\n\r\n                        if ( mails && this.currentMail )\r\n                        {\r\n                            this.setCurrentMail(this.currentMail.id);\r\n                        }\r\n\r\n                        resolve(mails);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\nimport { FuseTranslationLoaderService } from '@fuse/services/translation-loader.service';\r\n\r\nimport { Mail } from 'app/main/apps/mail/mail.model';\r\nimport { MailService } from 'app/main/apps/mail/mail.service';\r\n\r\nimport { locale as english } from 'app/main/apps/mail//i18n/en';\r\nimport { locale as turkish } from 'app/main/apps/mail//i18n/tr';\r\n\r\n@Component({\r\n    selector     : 'mail',\r\n    templateUrl  : './mail.component.html',\r\n    styleUrls    : ['./mail.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MailComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedMails: boolean;\r\n    isIndeterminate: boolean;\r\n    folders: any[];\r\n    filters: any[];\r\n    labels: any[];\r\n    searchInput: FormControl;\r\n    currentMail: Mail;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MailService} _mailService\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {FuseTranslationLoaderService} _fuseTranslationLoaderService\r\n     */\r\n    constructor(\r\n        private _mailService: MailService,\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _fuseTranslationLoaderService: FuseTranslationLoaderService\r\n    )\r\n    {\r\n        // Load the translations\r\n        this._fuseTranslationLoaderService.loadTranslations(english, turkish);\r\n\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._mailService.onSelectedMailsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedMails => {\r\n                setTimeout(() => {\r\n                    this.hasSelectedMails = selectedMails.length > 0;\r\n                    this.isIndeterminate = (selectedMails.length !== this._mailService.mails.length && selectedMails.length > 0);\r\n                }, 0);\r\n            });\r\n\r\n        this._mailService.onFoldersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.folders = this._mailService.folders;\r\n            });\r\n\r\n        this._mailService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.filters = this._mailService.filters;\r\n            });\r\n\r\n        this._mailService.onLabelsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.labels = this._mailService.labels;\r\n            });\r\n\r\n        this._mailService.onCurrentMailChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentMail => {\r\n                if ( !currentMail )\r\n                {\r\n                    this.currentMail = null;\r\n                }\r\n                else\r\n                {\r\n                    this.currentMail = currentMail;\r\n                }\r\n            });\r\n\r\n        this.searchInput.valueChanges.pipe(\r\n            takeUntil(this._unsubscribeAll),\r\n            debounceTime(300),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(searchText => {\r\n                this._mailService.onSearchTextChanged.next(searchText);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        this._mailService.toggleSelectAll();\r\n    }\r\n\r\n    /**\r\n     * Select mails\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectMails(filterParameter?, filterValue?): void\r\n    {\r\n        this._mailService.selectMails(filterParameter, filterValue);\r\n    }\r\n\r\n    /**\r\n     * Deselect mails\r\n     */\r\n    deselectMails(): void\r\n    {\r\n        this._mailService.deselectMails();\r\n    }\r\n\r\n    /**\r\n     * Deselect current mail\r\n     */\r\n    deselectCurrentMail(): void\r\n    {\r\n        this._mailService.onCurrentMailChanged.next(null);\r\n    }\r\n\r\n    /**\r\n     * Toggle label on selected mails\r\n     *\r\n     * @param labelId\r\n     */\r\n    toggleLabelOnSelectedMails(labelId): void\r\n    {\r\n        this._mailService.toggleLabelOnSelectedMails(labelId);\r\n    }\r\n\r\n    /**\r\n     * Set folder on selected mails\r\n     *\r\n     * @param folderId\r\n     */\r\n    setFolderOnSelectedMails(folderId): void\r\n    {\r\n        this._mailService.setFolderOnSelectedMails(folderId);\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"mail\" class=\"page-layout carded left-sidebar inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- SIDEBAR -->\r\n    <fuse-sidebar class=\"sidebar\" name=\"mail-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\r\n        <mail-main-sidebar></mail-main-sidebar>\r\n    </fuse-sidebar>\r\n    <!-- / SIDEBAR -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- CONTENT HEADER -->\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('mail-main-sidebar')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n\r\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\r\n                    <input [formControl]=\"searchInput\" [placeholder]=\"'MAIL.SEARCH_PLACEHOLDER' | translate\" fxFlex>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / CONTENT HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" [ngClass]=\"{'current-mail-selected':currentMail}\">\r\n\r\n            <!-- CONTENT TOOLBAR -->\r\n            <div class=\"toolbar px-24 py-8\">\r\n\r\n                <div class=\"mail-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedMails\"\r\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-menu #selectMenu=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"selectMails()\">All</button>\r\n                        <button mat-menu-item (click)=\"deselectMails()\">None</button>\r\n                        <button mat-menu-item (click)=\"selectMails('read', true)\">Read</button>\r\n                        <button mat-menu-item (click)=\"selectMails('read', false)\">Unread</button>\r\n                        <button mat-menu-item (click)=\"selectMails('starred', true)\">Starred</button>\r\n                        <button mat-menu-item (click)=\"selectMails('starred', false)\">Unstarred</button>\r\n                        <button mat-menu-item (click)=\"selectMails('important', true)\">Important</button>\r\n                        <button mat-menu-item (click)=\"selectMails('important', false)\">Unimportant</button>\r\n                    </mat-menu>\r\n\r\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedMails\"></div>\r\n\r\n                    <button mat-icon-button (click)=\"setFolderOnSelectedMails(4)\" *ngIf=\"hasSelectedMails\">\r\n                        <mat-icon class=\"secondary-text\">delete</mat-icon>\r\n                    </button>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"folderMenu\" *ngIf=\"hasSelectedMails\">\r\n                        <mat-icon class=\"secondary-text\">folder</mat-icon>\r\n                    </button>\r\n                    <mat-menu #folderMenu=\"matMenu\">\r\n                        <button mat-menu-item *ngFor=\"let folder of folders\"\r\n                                (click)=\"setFolderOnSelectedMails(folder.id)\">{{folder.title}}\r\n                        </button>\r\n                    </mat-menu>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedMails\">\r\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\r\n                    </button>\r\n                    <mat-menu #labelMenu=\"matMenu\">\r\n                        <button mat-menu-item *ngFor=\"let label of labels\"\r\n                                (click)=\"toggleLabelOnSelectedMails(label.id)\">{{label.title}}\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n\r\n                <div *ngIf=\"currentMail\" fxHide.gt-xs>\r\n                    <button mat-icon-button (click)=\"deselectCurrentMail()\">\r\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <!-- / CONTENT TOOLBAR -->\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\" fxLayout=\"row\">\r\n\r\n                <mail-list fusePerfectScrollbar fxFlex></mail-list>\r\n                <mail-details fusePerfectScrollbar fxFlex></mail-details>\r\n\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","export class Mail\r\n{\r\n    id: string;\r\n    from: {\r\n        name: string,\r\n        avatar: string,\r\n        email: string\r\n    };\r\n    to: {\r\n        name: string,\r\n        email: string\r\n    }[];\r\n    subject: string;\r\n    message: string;\r\n    time: string;\r\n    read: boolean;\r\n    starred: boolean;\r\n    important: boolean;\r\n    hasAttachments: boolean;\r\n    attachments: {\r\n        type: string,\r\n        fileName: string,\r\n        preview: string,\r\n        url: string,\r\n        size: string\r\n    }[];\r\n    labels: string[];\r\n    folder: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param mail\r\n     */\r\n    constructor(mail)\r\n    {\r\n        this.id = mail.id;\r\n        this.from = mail.from;\r\n        this.to = mail.to;\r\n        this.subject = mail.subject;\r\n        this.message = mail.message;\r\n        this.time = mail.time;\r\n        this.read = mail.read;\r\n        this.starred = mail.starred;\r\n        this.important = mail.important;\r\n        this.hasAttachments = mail.hasAttachments;\r\n        this.attachments = mail.attachments;\r\n        this.labels = mail.labels;\r\n        this.folder = mail.folder;\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(): void\r\n    {\r\n        this.starred = !this.starred;\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     */\r\n    toggleImportant(): void\r\n    {\r\n        this.important = !this.important;\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Mail } from 'app/main/apps/mail/mail.model';\r\nimport { MailService } from 'app/main/apps/mail/mail.service';\r\n\r\n@Component({\r\n    selector     : 'mail-list',\r\n    templateUrl  : './mail-list.component.html',\r\n    styleUrls    : ['./mail-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class MailListComponent implements OnInit, OnDestroy\r\n{\r\n    mails: Mail[];\r\n    currentMail: Mail;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {MailService} _mailService\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _mailService: MailService,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update mails on changes\r\n        this._mailService.onMailsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(mails => {\r\n                this.mails = mails;\r\n            });\r\n\r\n        // Subscribe to update current mail on changes\r\n        this._mailService.onCurrentMailChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentMail => {\r\n                if ( !currentMail )\r\n                {\r\n                    // Set the current mail id to null to deselect the current mail\r\n                    this.currentMail = null;\r\n\r\n                    // Handle the location changes\r\n                    const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\r\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle,\r\n                          folderHandle = this._activatedRoute.snapshot.params.folderHandle;\r\n\r\n                    if ( labelHandle )\r\n                    {\r\n                        this._location.go('apps/mail/label/' + labelHandle);\r\n                    }\r\n                    else if ( filterHandle )\r\n                    {\r\n                        this._location.go('apps/mail/filter/' + filterHandle);\r\n                    }\r\n                    else\r\n                    {\r\n                        this._location.go('apps/mail/' + folderHandle);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.currentMail = currentMail;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Read mail\r\n     *\r\n     * @param mailId\r\n     */\r\n    readMail(mailId): void\r\n    {\r\n        const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\r\n              filterHandle = this._activatedRoute.snapshot.params.filterHandle,\r\n              folderHandle = this._activatedRoute.snapshot.params.folderHandle;\r\n\r\n        if ( labelHandle )\r\n        {\r\n            this._location.go('apps/mail/label/' + labelHandle + '/' + mailId);\r\n        }\r\n        else if ( filterHandle )\r\n        {\r\n            this._location.go('apps/mail/filter/' + filterHandle + '/' + mailId);\r\n        }\r\n        else\r\n        {\r\n            this._location.go('apps/mail/' + folderHandle + '/' + mailId);\r\n        }\r\n\r\n        // Set current mail\r\n        this._mailService.setCurrentMail(mailId);\r\n    }\r\n}\r\n","<div *ngIf=\"mails.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\r\n    <span class=\"no-messages-text hint-text\">{{ 'MAIL.NO_MESSAGES' | translate }}</span>\r\n</div>\r\n\r\n<div class=\"mail-list\" [@animateStagger]=\"{value:'50'}\">\r\n    <mail-list-item *ngFor=\"let mail of mails\" [mail]=\"mail\" (click)=\"readMail(mail.id)\"\r\n                    [ngClass]=\"{'current-mail':mail?.id == currentMail?.id}\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n    </mail-list-item>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Mail } from 'app/main/apps/mail/mail.model';\r\nimport { MailService } from 'app/main/apps/mail/mail.service';\r\n\r\n@Component({\r\n    selector     : 'mail-details',\r\n    templateUrl  : './mail-details.component.html',\r\n    styleUrls    : ['./mail-details.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class MailDetailsComponent implements OnInit, OnDestroy\r\n{\r\n    mail: Mail;\r\n    labels: any[];\r\n    showDetails: boolean;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MailService} _mailService\r\n     */\r\n    constructor(\r\n        private _mailService: MailService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.showDetails = false;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update the current mail\r\n        this._mailService.onCurrentMailChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentMail => {\r\n                this.mail = currentMail;\r\n            });\r\n\r\n        // Subscribe to update on label change\r\n        this._mailService.onLabelsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.labels = labels;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param event\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.mail.toggleStar();\r\n\r\n        this._mailService.updateMail(this.mail);\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     *\r\n     * @param event\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.mail.toggleImportant();\r\n\r\n        this._mailService.updateMail(this.mail);\r\n    }\r\n}\r\n","<div *ngIf=\"!mail\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\r\n    <mat-icon class=\"s-128 mb-16 select-message-icon hint-text\"\r\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">\r\n        email\r\n    </mat-icon>\r\n    <span class=\"select-message-text hint-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\r\n        <span>{{ 'MAIL.SELECT_A_MESSAGE_TO_READ' | translate }}</span>\r\n    </span>\r\n</div>\r\n\r\n<div *ngIf=\"mail\">\r\n\r\n    <div class=\"mail-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n        <div>\r\n            <div class=\"subject\">{{mail.subject}}</div>\r\n\r\n            <div class=\"labels mt-8\" fxLayout=\"row wrap\">\r\n                <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\r\n                     fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <div class=\"label-color\" [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\r\n                    <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"mail.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\r\n                <mat-icon class=\"red-fg\" *ngIf=\"mail.important\">label</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.important\">label_outline</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"mail-content\">\r\n\r\n        <div class=\"info\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n            <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n\r\n                    <div>\r\n                        <img *ngIf=\"mail.from.avatar\" alt=\"{{mail.from.name}}\"\r\n                             src=\"{{mail.from.avatar}}\" class=\"avatar\"/>\r\n\r\n                        <div *ngIf=\"!mail.from.avatar\" class=\"avatar\" ms-random-class=\"vm.colors\">\r\n                            {{mail.from.name[0]}}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n\r\n                        <div class=\"name\">\r\n                            {{mail.from.name}}\r\n                        </div>\r\n\r\n                        <div class=\"to\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <div class=\"to-text\">to</div>\r\n                            <div>{{mail.to[0].name}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <a class=\"toggle-details\" (click)=\"showDetails = !showDetails\">\r\n                    <span *ngIf=\"!showDetails\">Show Details</span>\r\n                    <span *ngIf=\"showDetails\">Hide Details</span>\r\n                </a>\r\n\r\n                <div *ngIf=\"showDetails\" class=\"details\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n\r\n                    <div fxLayout=\"column\">\r\n                        <span class=\"title\">From:</span>\r\n                        <span class=\"title\">To:</span>\r\n                        <span class=\"title\">Date:</span>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"column\">\r\n                        <span class=\"detail\">{{mail.from.email}}</span>\r\n                        <span class=\"detail\">{{mail.to[0].email}}</span>\r\n                        <span class=\"detail\">{{mail.time}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\">\r\n                <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #moreMenu=\"matMenu\">\r\n                <button mat-menu-item aria-label=\"Reply\">\r\n                    <mat-icon>reply</mat-icon>\r\n                    <span>Reply</span>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"Forward\">\r\n                    <mat-icon>forward</mat-icon>\r\n                    <span>Forward</span>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"Print\">\r\n                    <mat-icon>print</mat-icon>\r\n                    <span>Print</span>\r\n                </button>\r\n            </mat-menu>\r\n        </div>\r\n\r\n        <div [innerHTML]=\"mail.message\"></div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"mail.attachments\" class=\"mail-attachments\">\r\n\r\n        <div class=\"title\">\r\n            <span>Attachments</span>\r\n            ({{mail.attachments.length}})\r\n        </div>\r\n\r\n        <div class=\"attachment-list\" fxLayout=\"row wrap\">\r\n\r\n            <div class=\"attachment\" fxLayout=\"column\"\r\n                 *ngFor=\"let attachment of mail.attachments\">\r\n\r\n                <img class=\"preview\" src=\"{{attachment.preview}}\">\r\n\r\n                <div fxLayout=\"column\">\r\n                    <a href=\"#\" onclick=\"event.preventDefault()\">View</a>\r\n                    <a href=\"#\" onclick=\"event.preventDefault()\">Download</a>\r\n                    <div class=\"size\">({{attachment.size}})</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector     : 'mail-compose',\r\n    templateUrl  : './compose.component.html',\r\n    styleUrls    : ['./compose.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MailComposeDialogComponent\r\n{\r\n    showExtraToFields: boolean;\r\n    composeForm: FormGroup;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatDialogRef<MailComposeDialogComponent>} matDialogRef\r\n     * @param _data\r\n     */\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<MailComposeDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private _data: any\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.composeForm = this.createComposeForm();\r\n        this.showExtraToFields = false;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Create compose form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createComposeForm(): FormGroup\r\n    {\r\n        return new FormGroup({\r\n            from   : new FormControl({\r\n                value   : 'johndoe@creapond.com',\r\n                disabled: true\r\n            }),\r\n            to     : new FormControl(''),\r\n            cc     : new FormControl(''),\r\n            bcc    : new FormControl(''),\r\n            subject: new FormControl(''),\r\n            message: new FormControl('')\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle extra to fields\r\n     */\r\n    toggleExtraToFields(): void\r\n    {\r\n        this.showExtraToFields = !this.showExtraToFields;\r\n    }\r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar class=\"mat-accent m-0\">\r\n        <mat-toolbar-row fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"title dialog-title\">New Message</span>\r\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\r\n\r\n        <form name=\"composeForm\" [formGroup]=\"composeForm\" class=\"compose-form\" fxLayout=\"column\" fxFlex>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>From</mat-label>\r\n                <input matInput name=\"from\"\r\n                       formControlName=\"from\"\r\n                       type=\"email\">\r\n            </mat-form-field>\r\n\r\n            <div class=\"show-hide-extra-fields\" (click)=\"toggleExtraToFields()\">\r\n                <span [fxShow]=\"!showExtraToFields\">Show CC & BCC</span>\r\n                <span [fxShow]=\"showExtraToFields\">Hide CC & BCC</span>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>To</mat-label>\r\n                <input matInput name=\"to\"\r\n                       formControlName=\"to\"\r\n                       type=\"email\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\r\n                <mat-label>Cc</mat-label>\r\n                <input matInput\r\n                       name=\"cc\"\r\n                       formControlName=\"cc\"\r\n                       type=\"email\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\r\n                <mat-label>Bcc</mat-label>\r\n                <input matInput\r\n                       name=\"bcc\"\r\n                       formControlName=\"bcc\"\r\n                       type=\"email\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Subject</mat-label>\r\n                <input matInput name=\"subject\"\r\n                       formControlName=\"subject\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Message</mat-label>\r\n                <textarea matInput name=\"message\"\r\n                          formControlName=\"message\"\r\n                          rows=\"6\">\r\n                </textarea>\r\n            </mat-form-field>\r\n\r\n            <div class=\"attachment-list\">\r\n\r\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <div>\r\n                        <span class=\"filename\">attachment-2.doc</span>\r\n                        <span class=\"size ml-4\">(12 Kb)</span>\r\n                    </div>\r\n\r\n                    <button mat-icon-button aria-label=\"Delete attachment\">\r\n                        <mat-icon class=\"s-16\">close</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <div>\r\n                        <span class=\"filename\">attachment-1.jpg</span>\r\n                        <span class=\"size ml-4\">(350 Kb)</span>\r\n                    </div>\r\n\r\n                    <button mat-icon-button aria-label=\"Delete attachment\">\r\n                        <mat-icon class=\"s-16\">close</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div>\r\n            <button mat-raised-button\r\n                    color=\"accent\"\r\n                    (click)=\"matDialogRef.close(['send',composeForm])\"\r\n                    class=\"save-button\"\r\n                    [disabled]=\"composeForm.invalid\"\r\n                    aria-label=\"SAVE\">\r\n                SEND\r\n            </button>\r\n\r\n            <button mat-icon-button matTooltip=\"Attach a file\">\r\n                <mat-icon>attach_file</mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <button mat-icon-button (click)=\"matDialogRef.close(['delete',composeForm])\"\r\n                aria-label=\"Delete\"\r\n                matTooltip=\"Delete\">\r\n            <mat-icon>delete</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n"]}