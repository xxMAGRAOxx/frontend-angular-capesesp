{"version":3,"sources":["./src/app/main/apps/scrumboard/board/dialogs/card/card.component.ts","./src/app/main/apps/scrumboard/board/dialogs/card/card.component.html","./src/app/main/apps/scrumboard/board/board.component.ts","./src/app/main/apps/scrumboard/board/board.component.html","./src/app/main/apps/scrumboard/board/add-list/add-list.component.ts","./src/app/main/apps/scrumboard/board/add-list/add-list.component.html","./src/app/main/apps/scrumboard/board/list/card/card.component.ts","./src/app/main/apps/scrumboard/board/list/card/card.component.html","./src/app/main/apps/scrumboard/scrumboard.service.ts","./src/app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.ts","./src/app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.html","./src/app/main/apps/scrumboard/scrumboard.component.ts","./src/app/main/apps/scrumboard/scrumboard.component.html","./src/app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component.ts","./src/app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component.html","./src/app/main/apps/scrumboard/board/sidenavs/settings/settings.component.ts","./src/app/main/apps/scrumboard/board/sidenavs/settings/settings.component.html","./src/app/main/apps/scrumboard/scrumboard.module.ts","./src/app/main/apps/scrumboard/board/list/list.component.ts","./src/app/main/apps/scrumboard/board/list/list.component.html","./src/app/main/apps/scrumboard/list.model.ts","./src/app/main/apps/scrumboard/board.model.ts","./src/app/main/apps/scrumboard/board/list/add-card/add-card.component.ts","./src/app/main/apps/scrumboard/board/list/add-card/add-card.component.html","./src/app/main/apps/scrumboard/card.model.ts","./src/app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.ts","./src/app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.html","./src/app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.ts","./src/app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.html"],"names":[],"mappings":"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","file":"scrumboard-scrumboard-module-es2015.js","sourcesContent":["import { Component, Inject, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-card-dialog',\r\n    templateUrl  : './card.component.html',\r\n    styleUrls    : ['./card.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardCardDialogComponent implements OnInit, OnDestroy\r\n{\r\n    card: any;\r\n    board: any;\r\n    list: any;\r\n\r\n    toggleInArray = FuseUtils.toggleInArray;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    @ViewChild('checklistMenuTrigger')\r\n    checklistMenu: MatMenuTrigger;\r\n\r\n    @ViewChild('newCheckListTitleField')\r\n    newCheckListTitleField;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatDialogRef<ScrumboardCardDialogComponent>} matDialogRef\r\n     * @param _data\r\n     * @param {MatDialog} _matDialog\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<ScrumboardCardDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private _data: any,\r\n        private _matDialog: MatDialog,\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n\r\n                this.card = this.board.cards.find((_card) => {\r\n                    return this._data.cardId === _card.id;\r\n                });\r\n\r\n                this.list = this.board.lists.find((_list) => {\r\n                    return this._data.listId === _list.id;\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Remove due date\r\n     */\r\n    removeDueDate(): void\r\n    {\r\n        this.card.due = '';\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Toggle subscribe\r\n     */\r\n    toggleSubscribe(): void\r\n    {\r\n        this.card.subscribed = !this.card.subscribed;\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Toggle cover image\r\n     *\r\n     * @param attachmentId\r\n     */\r\n    toggleCoverImage(attachmentId): void\r\n    {\r\n        if ( this.card.idAttachmentCover === attachmentId )\r\n        {\r\n            this.card.idAttachmentCover = '';\r\n        }\r\n        else\r\n        {\r\n            this.card.idAttachmentCover = attachmentId;\r\n        }\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove attachment\r\n     *\r\n     * @param attachment\r\n     */\r\n    removeAttachment(attachment): void\r\n    {\r\n        if ( attachment.id === this.card.idAttachmentCover )\r\n        {\r\n            this.card.idAttachmentCover = '';\r\n        }\r\n\r\n        this.card.attachments.splice(this.card.attachments.indexOf(attachment), 1);\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove checklist\r\n     *\r\n     * @param checklist\r\n     */\r\n    removeChecklist(checklist): void\r\n    {\r\n        this.card.checklists.splice(this.card.checklists.indexOf(checklist), 1);\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Update checked count\r\n     *\r\n     * @param list\r\n     */\r\n    updateCheckedCount(list): void\r\n    {\r\n        const checkItems = list.checkItems;\r\n        let checkedItems = 0;\r\n        let allCheckedItems = 0;\r\n        let allCheckItems = 0;\r\n\r\n        for ( const checkItem of checkItems )\r\n        {\r\n            if ( checkItem.checked )\r\n            {\r\n                checkedItems++;\r\n            }\r\n        }\r\n\r\n        list.checkItemsChecked = checkedItems;\r\n\r\n        for ( const item of this.card.checklists )\r\n        {\r\n            allCheckItems += item.checkItems.length;\r\n            allCheckedItems += item.checkItemsChecked;\r\n        }\r\n\r\n        this.card.checkItems = allCheckItems;\r\n        this.card.checkItemsChecked = allCheckedItems;\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove checklist item\r\n     *\r\n     * @param checkItem\r\n     * @param checklist\r\n     */\r\n    removeChecklistItem(checkItem, checklist): void\r\n    {\r\n        checklist.checkItems.splice(checklist.checkItems.indexOf(checkItem), 1);\r\n\r\n        this.updateCheckedCount(checklist);\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Add check item\r\n     *\r\n     * @param {NgForm} form\r\n     * @param checkList\r\n     */\r\n    addCheckItem(form: NgForm, checkList): void\r\n    {\r\n        const checkItemVal = form.value.checkItem;\r\n\r\n        if ( !checkItemVal || checkItemVal === '' )\r\n        {\r\n            return;\r\n        }\r\n\r\n        const newCheckItem = {\r\n            name   : checkItemVal,\r\n            checked: false\r\n        };\r\n\r\n        checkList.checkItems.push(newCheckItem);\r\n\r\n        this.updateCheckedCount(checkList);\r\n\r\n        form.setValue({checkItem: ''});\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Add checklist\r\n     *\r\n     * @param {NgForm} form\r\n     */\r\n    addChecklist(form: NgForm): void\r\n    {\r\n        this.card.checklists.push({\r\n            id               : FuseUtils.generateGUID(),\r\n            name             : form.value.checklistTitle,\r\n            checkItemsChecked: 0,\r\n            checkItems       : []\r\n        });\r\n\r\n        form.setValue({checklistTitle: ''});\r\n        form.resetForm();\r\n        this.checklistMenu.closeMenu();\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * On checklist menu open\r\n     */\r\n    onChecklistMenuOpen(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.newCheckListTitleField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add new comment\r\n     *\r\n     * @param {NgForm} form\r\n     */\r\n    addNewComment(form: NgForm): void\r\n    {\r\n        const newCommentText = form.value.newComment;\r\n\r\n        const newComment = {\r\n            idMember: '36027j1930450d8bf7b10158',\r\n            message : newCommentText,\r\n            time    : 'now'\r\n        };\r\n\r\n        this.card.comments.unshift(newComment);\r\n\r\n        form.setValue({newComment: ''});\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove card\r\n     */\r\n    removeCard(): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the card?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this.matDialogRef.close();\r\n                this._scrumboardService.removeCard(this.card.id, this.list.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update card\r\n     */\r\n    updateCard(): void\r\n    {\r\n        this._scrumboardService.updateCard(this.card);\r\n    }\r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n\r\n    <mat-toolbar *ngIf=\"card\" matDialogTitle class=\"accent m-0\" fxFlex=\"1 0 auto\" fxLayout=\"row\">\r\n\r\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <!-- DUE DATE -->\r\n                <div class=\"due-date\" fxFlex=\"0 1 auto\">\r\n\r\n                    <button *ngIf=\"card.due\" mat-icon-button [matMenuTriggerFor]=\"dueDateMenu\">\r\n                        <mat-icon>today</mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #dueDateMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n                        <button mat-menu-item (click)=\"removeDueDate()\">Remove Due Date</button>\r\n                    </mat-menu>\r\n\r\n                    <mat-form-field *ngIf=\"!card.due\">\r\n                        <input matInput [matDatepicker]=\"menuPicker\" [(ngModel)]=\"card.due\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"menuPicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #menuPicker></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n                <!-- / DUE DATE -->\r\n\r\n                <!-- LABELS -->\r\n                <div class=\"labels\" fxFlex=\"0 1 auto\">\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelsMenu\">\r\n                        <mat-icon>label</mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #labelsMenu=\"matMenu\" [overlapTrigger]=\"false\" class=\"scrumboard-labels-menu\">\r\n\r\n                        <scrumboard-label-selector [card]=\"card\"\r\n                                                   (cardLabelsChanged)=\"updateCard()\"></scrumboard-label-selector>\r\n\r\n                    </mat-menu>\r\n\r\n                </div>\r\n                <!-- / LABELS -->\r\n\r\n                <!-- MEMBERS -->\r\n                <div class=\"members\" fxFlex=\"0 1 auto\">\r\n\r\n                    <button mat-icon-button class=\"\" [matMenuTriggerFor]=\"membersMenu\">\r\n                        <mat-icon>account_circle</mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #membersMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n                        <div fxFlex fxLayout=\"column\" class=\"scrumboard-members-menu\"\r\n                             (click)=\"$event.stopPropagation()\">\r\n                            <mat-checkbox class=\"member px-16\" [checked]=\"card.idMembers.indexOf(member.id) > -1\"\r\n                                          *ngFor=\"let member of board.members\"\r\n                                          (change)=\"toggleInArray(member.id, card.idMembers);updateCard()\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                    <img [alt]=\"member.name\" [src]=\" member.avatar\" class=\"avatar\"/>\r\n                                    <p class=\"member-name\">{{ member.name }}</p>\r\n                                </div>\r\n                            </mat-checkbox>\r\n                        </div>\r\n                    </mat-menu>\r\n\r\n                </div>\r\n                <!-- / MEMBERS -->\r\n\r\n                <!-- ATTACHMENT -->\r\n                <button mat-icon-button aria-label=\"Attachment\">\r\n                    <mat-icon>attachment</mat-icon>\r\n                </button>\r\n                <!-- / ATTACHMENT -->\r\n\r\n                <!-- CHECKLIST -->\r\n                <div class=\"due-date \" fxFlex=\"0 1 auto\">\r\n\r\n                    <button mat-icon-button class=\"\" [matMenuTriggerFor]=\"checklistMenu\"\r\n                            #checklistMenuTrigger=\"matMenuTrigger\" (menuOpened)=\"onChecklistMenuOpen()\">\r\n                        <mat-icon>check_box</mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #checklistMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n\r\n                        <form class=\"px-16 py-8\" #newChecklistForm=\"ngForm\" (submit)=\"addChecklist(newChecklistForm)\"\r\n                              (click)=\"$event.stopPropagation()\"\r\n                              fxLayout=\"column\" fxLayoutAlign=\"start end\">\r\n\r\n                            <mat-form-field appearance=\"outline\" (click)=\"$event.stopPropagation()\" fxFlex>\r\n                                <mat-label>Checklist title</mat-label>\r\n                                <input #newCheckListTitleField matInput ngModel #checklistTitle=\"ngModel\"\r\n                                       name=\"checklistTitle\" required>\r\n                            </mat-form-field>\r\n\r\n                            <button mat-raised-button class=\"mat-accent\" aria-label=\"Add Checklist\"\r\n                                    [disabled]=\"!newChecklistForm.valid\">Add Checklist\r\n                            </button>\r\n\r\n                        </form>\r\n\r\n                    </mat-menu>\r\n\r\n                </div>\r\n                <!-- / CHECKLIST -->\r\n\r\n                <!-- SUBSCRIBE -->\r\n                <div class=\"subscribe \" fxFlex=\"0 1 auto\">\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"subscribeMenu\">\r\n                        <mat-icon *ngIf=\"card.subscribed\">visibility</mat-icon>\r\n                        <mat-icon *ngIf=\"!card.subscribed\">visibility_off</mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #subscribeMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n                        <button *ngIf=\"card.subscribed\" mat-menu-item (click)=\"toggleSubscribe()\">\r\n                            Unsubscribe\r\n                        </button>\r\n                        <button *ngIf=\"!card.subscribed\" mat-menu-item (click)=\"toggleSubscribe()\">\r\n                            Subscribe\r\n                        </button>\r\n                    </mat-menu>\r\n\r\n                </div>\r\n                <!-- / SUBSCRIBE -->\r\n\r\n                <!-- OPTIONS -->\r\n                <div class=\"options \" fxFlex=\"0 1 auto\">\r\n\r\n                    <button mat-icon-button class=\"\" [matMenuTriggerFor]=\"optionsMenu\">\r\n                        <mat-icon>more_horiz</mat-icon>\r\n                    </button>\r\n\r\n                    <mat-menu #optionsMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n                        <button mat-menu-item (click)=\"removeCard()\">\r\n                            Remove Card\r\n                        </button>\r\n                    </mat-menu>\r\n\r\n                </div>\r\n                <!-- / OPTIONS -->\r\n\r\n            </div>\r\n\r\n            <!-- CLOSE DIALOG BUTTON -->\r\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close Dialog\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n            <!-- / CLOSE DIALOG BUTTON -->\r\n\r\n        </div>\r\n\r\n    </mat-toolbar>\r\n\r\n    <div *ngIf=\"card\" mat-dialog-content class=\"py-24 px-0 m-0\" fusePerfectScrollbar>\r\n\r\n        <!-- BREADCRUMB -->\r\n        <div class=\"card-breadcrumb mt-8 mb-32 px-24\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <span>{{board.name}}</span>\r\n            <mat-icon class=\"s-20\">chevron_right</mat-icon>\r\n            <span>{{list.name}}</span>\r\n        </div>\r\n        <!-- / BREADCRUMB -->\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <!-- NAME -->\r\n            <div class=\"card-name px-24\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100-p\">\r\n                    <mat-label>Title</mat-label>\r\n                    <input matInput [(ngModel)]=\"card.name\" required (change)=\"updateCard()\">\r\n                </mat-form-field>\r\n            </div>\r\n            <!-- / NAME -->\r\n\r\n            <!-- DUE DATE -->\r\n            <div *ngIf=\"card.due\" class=\"due-date px-24 pl-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100-p\">\r\n                    <mat-label>Due Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"card.due\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n            <!-- / DUE DATE -->\r\n\r\n        </div>\r\n\r\n        <!-- DESCRIPTION -->\r\n        <div class=\"description px-24 mb-16\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-100-p\">\r\n                <mat-label>Description</mat-label>\r\n                <textarea matInput [(ngModel)]=\"card.description\" columns=\"1\"\r\n                          mat-maxlength=\"150\" max-rows=\"4\" (change)=\"updateCard()\"></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n        <!-- / DESCRIPTION -->\r\n\r\n        <!-- SECTIONS -->\r\n        <div class=\"sections\">\r\n\r\n            <!-- LABELS & MEMBERS SECTION -->\r\n            <div *ngIf=\"card.idLabels[0] || card.idMembers[0]\" class=\"section\"\r\n                 fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n\r\n                <div *ngIf=\"card.idLabels[0]\" fxFlex class=\"labels\">\r\n\r\n                    <div class=\"section-header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <mat-icon class=\"mr-8\">label</mat-icon>\r\n                        <span class=\"section-title\">Labels</span>\r\n                    </div>\r\n\r\n                    <div class=\"section-content\">\r\n                        <mat-chip-list class=\"label-chips\">\r\n                            <mat-chip class=\"label-chip mb-4\"\r\n                                      *ngFor=\"let labelId of card.idLabels\"\r\n                                      [ngClass]=\"board.labels | getById:labelId:'color'\"\r\n                                      fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                <span>{{board.labels|getById:labelId:'name'}}</span>\r\n                            </mat-chip>\r\n                        </mat-chip-list>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div *ngIf=\"card.idMembers[0]\" fxFlex class=\"members\">\r\n\r\n                    <div class=\"section-header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <mat-icon class=\"mr-8\">supervisor_account</mat-icon>\r\n                        <span class=\"section-title\">Members</span>\r\n                    </div>\r\n\r\n                    <div class=\"section-content\">\r\n                        <div class=\"member-chips\" fxLayout=\"row\" fxLayoutWrap>\r\n                            <div class=\"member-chip mb-4\" *ngFor=\"let memberId of card.idMembers\"\r\n                                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                <img class=\"member-chip-avatar\" [src]=\"board.members | getById:memberId:'avatar'\"\r\n                                     [matTooltip]=\"board.members | getById:memberId:'name'\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / LABELS & MEMBERS SECTION -->\r\n\r\n            <!-- ATTACHMENTS SECTION -->\r\n            <div *ngIf=\"card.attachments[0]\" class=\"section\">\r\n\r\n                <div class=\"attachments\">\r\n\r\n                    <div class=\"section-header\" fxLayout=\"row\" fxLayoutAlign=\"start\">\r\n                        <mat-icon class=\"mr-8\">attachment</mat-icon>\r\n                        <span class=\"section-title\">Attachments</span>\r\n                    </div>\r\n\r\n                    <div class=\"section-content\">\r\n\r\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start\" fxLayoutWrap fxLayout.gt-sm=\"row\">\r\n\r\n                            <div class=\"attachment\" fxFlex=\"33\" *ngFor=\"let item of card.attachments\"\r\n                                 [ngSwitch]=\"item.type\">\r\n\r\n                                <div fxLayout=\"column\" fxLayoutAlign=\"start\" *ngSwitchCase=\"'image'\">\r\n\r\n                                    <div class=\"attachment-preview mat-elevation-z1\">\r\n                                        <img [src]=\"item.src\">\r\n                                    </div>\r\n\r\n                                    <div class=\"attachment-content mt-8\" fxLayout=\"row\"\r\n                                         fxLayoutAlign=\"start center\">\r\n\r\n                                        <div fxFlex>\r\n\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                                                <span class=\"attachment-name\">{{item.name}}</span>\r\n                                                <mat-icon *ngIf=\"card.idAttachmentCover === item.id\"\r\n                                                          class=\"yellow-700-fg attachment-is-cover\">\r\n                                                    star\r\n                                                </mat-icon>\r\n                                            </div>\r\n\r\n                                            <span class=\"attachment-time\">{{item.time}}</span>\r\n\r\n                                        </div>\r\n\r\n                                        <button mat-icon-button class=\"attachment-actions-button\"\r\n                                                [matMenuTriggerFor]=\"attachmentActionsMenu\">\r\n                                            <mat-icon>more_vert</mat-icon>\r\n                                        </button>\r\n\r\n                                        <mat-menu #attachmentActionsMenu=\"matMenu\">\r\n                                            <button mat-menu-item (click)=\"toggleCoverImage(item.id)\">\r\n                                                <span *ngIf=\"card.idAttachmentCover !== item.id\">Make Cover</span>\r\n                                                <span *ngIf=\"card.idAttachmentCover === item.id\">Remove Cover</span>\r\n                                            </button>\r\n                                            <button mat-menu-item (click)=\"removeAttachment(item)\">\r\n                                                Remove Attachment\r\n                                            </button>\r\n                                        </mat-menu>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div *ngSwitchCase=\"'link'\" fxLayout=\"row\">\r\n                                    <div class=\"attachment-preview mat-elevation-z2\" fxLayout=\"column\"\r\n                                         fxLayoutAlign=\"center center\">\r\n                                        <span>LINK</span>\r\n                                    </div>\r\n                                    <div class=\"attachment-content\" fxLayout=\"column\">\r\n                                        <span class=\"attachment-url\">{{item.url}}</span>\r\n                                        <span class=\"attachment-time\">{{item.time}}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <button mat-stroked-button class=\"add-attachment-button\" aria-label=\"add attachment\">\r\n                            Add an attachment\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / ATTACHMENTS SECTION -->\r\n\r\n            <!-- CHECKLISTS SECTION -->\r\n            <div class=\"section\" *ngFor=\"let checklist of card.checklists\">\r\n\r\n                <div class=\"checklist\">\r\n\r\n                    <div class=\"section-header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                        <mat-icon class=\"mr-8\">check_box</mat-icon>\r\n                        <span fxFlex class=\"section-title\">{{checklist.name}}</span>\r\n\r\n                        <div>\r\n\r\n                            <button mat-icon-button class=\"checklist-actions-button\"\r\n                                    [matMenuTriggerFor]=\"checklistActionsMenu\">\r\n                                <mat-icon class=\"s-20\">more_vert</mat-icon>\r\n                            </button>\r\n\r\n                            <mat-menu #checklistActionsMenu=\"matMenu\">\r\n                                <button mat-menu-item (click)=\"removeChecklist(checklist)\">\r\n                                    <mat-icon>delete</mat-icon>\r\n                                    <span>Remove Checklist</span>\r\n                                </button>\r\n                            </mat-menu>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"section-content\">\r\n\r\n                        <div class=\"checklist-progress\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                            <span class=\"checklist-progress-value\">\r\n                                {{checklist.checkItemsChecked}} / {{checklist.checkItems.length}}\r\n                            </span>\r\n\r\n                            <mat-progress-bar color=\"accent\" class=\"checklist-progressbar\" mode=\"determinate\"\r\n                                              value=\"{{100 * checklist.checkItemsChecked / checklist.checkItems.length}}\">\r\n                            </mat-progress-bar>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"check-items\">\r\n\r\n                            <div class=\"check-item\" *ngFor=\"let checkItem of checklist.checkItems\" fxLayout=\"row\"\r\n                                 fxLayoutAlign=\"space-between center\">\r\n\r\n                                <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                                    <mat-form-field appearance=\"outline\" fxFlex>\r\n                                        <input matInput [(ngModel)]=\"checkItem.name\">\r\n                                        <mat-checkbox matPrefix [(ngModel)]=\"checkItem.checked\"\r\n                                                      (change)=\"updateCheckedCount(checklist)\"\r\n                                                      aria-label=\"{{checkItem.name}}\">\r\n                                        </mat-checkbox>\r\n                                        <button mat-icon-button matSuffix class=\"checklist-actions-button\"\r\n                                                (click)=\"removeChecklistItem(checkItem, checklist)\">\r\n                                            <mat-icon class=\"secondary-text\">delete</mat-icon>\r\n                                        </button>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <form #newCheckItemForm=\"ngForm\" (submit)=\"addCheckItem(newCheckItemForm,checklist)\"\r\n                              name=\"newCheckItemForm\" class=\"new-check-item-form\"\r\n                              fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\r\n\r\n                                <mat-form-field appearance=\"outline\" class=\"no-errors-spacer mr-16\" fxFlex>\r\n                                    <input matInput ngModel #checkItem=\"ngModel\" name=\"checkItem\" autocomplete=\"off\"\r\n                                           placeholder=\"New checklist item\">\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <button mat-mini-fab color=\"accent\"\r\n                                    [disabled]=\"!newCheckItemForm.valid || newCheckItemForm.pristine\"\r\n                                    aria-label=\"Add\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- / CHECKLISTS SECTION -->\r\n\r\n            <!-- COMMENTS SECTION -->\r\n            <div class=\"section\">\r\n\r\n                <div class=\"comments\">\r\n\r\n                    <div class=\"section-header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <mat-icon class=\"mr-8\">comment</mat-icon>\r\n                        <span class=\"section-title\">Comments</span>\r\n                    </div>\r\n\r\n                    <div class=\"section-content\">\r\n\r\n                        <form name=\"cardCommentForm\"\r\n                              #newCommentForm=\"ngForm\" (submit)=\"addNewComment(newCommentForm)\"\r\n                              class=\"comment new-comment\" fxLayout=\"column\" fxLayoutAlign=\"start\" no-validate>\r\n\r\n                            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n                                <img class=\"comment-member-avatar\" src=\"assets/images/avatars/profile.jpg\">\r\n\r\n                                <mat-form-field class=\"mr-12\" appearance=\"outline\" fxFlex>\r\n                                    <mat-label>Comment</mat-label>\r\n                                    <input matInput name=\"newComment\" ngModel #newComment=\"ngModel\" required>\r\n                                </mat-form-field>\r\n\r\n                                <button mat-mini-fab class=\"mat-accent\"\r\n                                        [disabled]=\"!newCommentForm.valid || newCommentForm.pristine\"\r\n                                        aria-label=\"Add\">\r\n                                    <mat-icon>add</mat-icon>\r\n                                </button>\r\n\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                        <div class=\"comment\" fxLayout=\"row\" fxLayoutAlign=\"start center\"\r\n                             *ngFor=\"let comment of card.comments\">\r\n\r\n                            <img class=\"comment-member-avatar\"\r\n                                 [src]=\"board.members | getById: comment.idMember:'avatar'\">\r\n\r\n                            <div fxLayout=\"column\">\r\n                                <div class=\"comment-member-name\">\r\n                                    {{board.members | getById: comment.idMember:'name'}}\r\n                                </div>\r\n                                <div class=\"comment-bubble\">{{comment.message}}</div>\r\n                                <div class=\"comment-time secondary-text\">{{comment.time}}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / COMMENTS SECTION -->\r\n\r\n            <!-- ACTIVITIES SECTION -->\r\n            <div *ngIf=\"card.activities[0]\" class=\"section\">\r\n\r\n                <div class=\"activities\">\r\n\r\n                    <div class=\"section-header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <mat-icon class=\"mr-8\">list</mat-icon>\r\n                        <span class=\"section-title\">Activity</span>\r\n                    </div>\r\n\r\n                    <div class=\"section-content\">\r\n\r\n                        <div class=\"activity\" *ngFor=\"let activity of card.activities\" fxLayout=\"row\"\r\n                             fxLayoutAlign=\"start center\">\r\n\r\n                            <img class=\"activity-member-avatar\"\r\n                                 [src]=\"board.members | getById:activity.idMember:'avatar'\">\r\n\r\n                            <div>\r\n\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                                    <div class=\"activity-member-name\">\r\n                                        {{board.members | getById:activity.idMember:'name'}}\r\n                                    </div>\r\n                                    <div class=\"activity-message\">{{activity.message}}</div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"activity-time mt-4 secondary-text\">{{activity.time}}</div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / ACTIVITIES SECTION -->\r\n\r\n        </div>\r\n        <!-- / SECTIONS -->\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { List } from 'app/main/apps/scrumboard/list.model';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board',\r\n    templateUrl  : './board.component.html',\r\n    styleUrls    : ['./board.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ScrumboardBoardComponent implements OnInit, OnDestroy\r\n{\r\n    board: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _location: Location,\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On list add\r\n     *\r\n     * @param newListName\r\n     */\r\n    onListAdd(newListName): void\r\n    {\r\n        if ( newListName === '' )\r\n        {\r\n            return;\r\n        }\r\n\r\n        this._scrumboardService.addList(new List({name: newListName}));\r\n    }\r\n\r\n    /**\r\n     * On board name changed\r\n     *\r\n     * @param newName\r\n     */\r\n    onBoardNameChanged(newName): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n        this._location.go('/apps/scrumboard/boards/' + this.board.id + '/' + this.board.uri);\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n}\r\n","<mat-sidenav-container>\r\n\r\n    <div id=\"board\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header p-16 p-md-24\" [ngClass]=\"board.settings.color\" fxLayout=\"column\">\r\n\r\n            <div class=\"header-content\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\" fxFlex=\"1 0 auto\">\r\n\r\n                <!-- BOARD SELECTION BUTTON -->\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlexOrder=\"2\" fxFlexOrder.gt-xs=\"1\">\r\n                    <button mat-raised-button class=\"header-boards-button\"\r\n                            [ngClass]=\"board.settings.color+'-800'\"\r\n                            routerLink=\"/apps/scrumboard/boards\"\r\n                            aria-label=\"boards button\">\r\n                        <mat-icon class=\"mr-8\">assessment</mat-icon>\r\n                        <span>BOARDS</span>\r\n                    </button>\r\n                </div>\r\n                <!-- / BOARD SELECTION BUTTON -->\r\n\r\n                <!-- BOARD NAME -->\r\n                <div class=\"header-board-name mb-8 mb-md-0\"\r\n                     fxLayout=\"row\" fxLayoutAlign=\"center center\"\r\n                     fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"center center\"\r\n                     fxFlex=\"1 0 100%\" fxFlex.gt-xs=\"1 0 auto\"\r\n                     fxFlexOrder=\"1\" fxFlexOrder.gt-xs=\"2\">\r\n                    <mat-icon *ngIf=\"board.settings.subscribed\" class=\"board-subscribe s-16\">remove_red_eye</mat-icon>\r\n                    <scrumboard-edit-board-name\r\n                        [board]=\"board\"\r\n                        (boardNameChanged)=\"onBoardNameChanged($event)\">\r\n                    </scrumboard-edit-board-name>\r\n                </div>\r\n                <!-- / BOARD NAME -->\r\n\r\n                <!-- TOOLBAR -->\r\n                <div class=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxFlexOrder=\"3\">\r\n\r\n                    <!-- BOARD SETTINGS BUTTON -->\r\n                    <button mat-icon-button (click)=\"settingsSidenav.toggle()\"\r\n                            aria-label=\"Settings\" matTooltip=\"Settings\">\r\n                        <mat-icon>settings</mat-icon>\r\n                    </button>\r\n                    <!-- / BOARD SETTINGS BUTTON -->\r\n                </div>\r\n                <!-- / TOOLBAR -->\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <div fxFlex class=\"board-content-wrapper p-16 p-md-24\">\r\n\r\n            <!-- BOARD -->\r\n            <div class=\"board-content ngx-dnd-container p-16 p-md-24\" fxLayout=\"row\"\r\n                 ngxDroppable=\"list\" [model]=\"board.lists\" (out)=\"onDrop($event)\"\r\n                 [@animateStagger]=\"{value:'50'}\">\r\n\r\n                <!-- LIST -->\r\n                <scrumboard-board-list\r\n                    class=\"scrumboard-board-list list-wrapper ngx-dnd-item\"\r\n                    ngxDraggable\r\n                    *ngFor=\"let list of board.lists\"\r\n                    [model]=\"list\"\r\n                    [list]=\"list\"\r\n                    [@animate]=\"{value:'*',params:{duration:'350ms',x:'100%'}}\">\r\n                </scrumboard-board-list>\r\n                <!-- / LIST -->\r\n\r\n                <!-- NEW LIST BUTTON-->\r\n                <scrumboard-board-add-list class=\"new-list-wrapper\" (listAdded)=\"onListAdd($event)\"\r\n                                           ngxDraggable [moves]=\"false\"\r\n                                           [@animate]=\"{value:'*',params:{duration:'350ms',x:'100%'}}\">\r\n                </scrumboard-board-add-list>\r\n                <!-- / NEW LIST BUTTON-->\r\n\r\n            </div>\r\n            <!-- / BOARD -->\r\n        </div>\r\n        <!-- primary content -->\r\n    </div>\r\n\r\n    <mat-sidenav #settingsSidenav position=\"end\">\r\n        <scrumboard-board-settings></scrumboard-board-settings>\r\n    </mat-sidenav>\r\n\r\n</mat-sidenav-container>\r\n","import { Component, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-add-list',\r\n    templateUrl  : './add-list.component.html',\r\n    styleUrls    : ['./add-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardAddListComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Output()\r\n    listAdded: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.listAdded = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this._formBuilder.group({\r\n            name: ['']\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            this.listAdded.next(this.form.getRawValue().name);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"list new-list mat-elevation-z1\">\r\n\r\n    <button *ngIf=\"!formActive\" mat-button class=\"new-list-form-button\" (click)=\"openForm()\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"red\">add</mat-icon>\r\n            <span>Add a list</span>\r\n        </div>\r\n    </button>\r\n\r\n    <form *ngIf=\"formActive\" class=\"new-list-form\" [formGroup]=\"form\" (submit)=\"onFormSubmit()\"\r\n          fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\r\n        <input formControlName=\"name\" #nameInput fxFlex placeholder=\"Write a list Name\">\r\n\r\n        <button mat-icon-button fxFlex=\"0 1 auto\">\r\n            <mat-icon>check</mat-icon>\r\n        </button>\r\n        <button mat-icon-button fxFlex=\"0 1 auto\" (click)=\"closeForm()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-card',\r\n    templateUrl  : './card.component.html',\r\n    styleUrls    : ['./card.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardCardComponent implements OnInit\r\n{\r\n    @Input()\r\n    cardId;\r\n\r\n    card: any;\r\n    board: any;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.board = this._activatedRoute.snapshot.data.board;\r\n        this.card = this.board.cards.filter((card) => {\r\n            return this.cardId === card.id;\r\n        })[0];\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Is the card overdue?\r\n     *\r\n     * @param cardDate\r\n     * @returns {boolean}\r\n     */\r\n    isOverdue(cardDate): boolean\r\n    {\r\n        return moment() > moment(new Date(cardDate));\r\n    }\r\n}\r\n","<!-- CARD COVER -->\r\n<div *ngIf=\"board.settings.cardCoverImages && card.idAttachmentCover\"\r\n     class=\"list-card-cover\">\r\n    <img [src]=\"card.attachments | getById:card.idAttachmentCover:'src'\">\r\n</div>\r\n<!-- / CARD COVER -->\r\n\r\n<!-- CARD DETAILS -->\r\n<div class=\"list-card-details\">\r\n\r\n    <!-- CARD SORT HANDLE -->\r\n    <div class=\"list-card-sort-handle\">\r\n        <mat-icon mat-font-icon=\"icon-cursor-move\" class=\"icon s16\"></mat-icon>\r\n    </div>\r\n    <!-- /CARD SORT HANDLE -->\r\n\r\n    <!-- CARD LABELS -->\r\n    <div *ngIf=\"card.idLabels.length > 0\" class=\"list-card-labels\" fxLayout=\"row wrap\">\r\n\r\n        <span class=\"list-card-label\"\r\n              [ngClass]=\"board.labels | getById:labelId:'color'\"\r\n              *ngFor=\"let labelId of card.idLabels\"\r\n              [matTooltip]=\"board.labels | getById:labelId:'name'\">\r\n        </span>\r\n\r\n    </div>\r\n    <!-- / CARD LABELS -->\r\n\r\n    <!-- CARD NAME -->\r\n    <div class=\"list-card-name\">{{card.name}}</div>\r\n    <!-- / CARD NAME -->\r\n\r\n    <div *ngIf=\"card.due || card.checkItems\"\r\n         class=\"list-card-badges\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n        <!-- CARD DUE -->\r\n        <span class=\"badge due-date\"\r\n              [ngClass]=\"{'overdue': isOverdue(card.due)}\"\r\n              *ngIf=\"card.due\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"s-16\">access_time</mat-icon>\r\n            <span>{{card.due | date:'mediumDate'}}</span>\r\n\r\n        </span>\r\n        <!-- / CARD DUE -->\r\n\r\n        <!-- CARD CHECK ITEMS STATUS -->\r\n        <span *ngIf=\"card.checkItems\"\r\n              class=\"badge check-items\"\r\n              [ngClass]=\"{'completed': card.checkItemsChecked === card.checkItems}\"\r\n              fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"s-16\">check_circle</mat-icon>\r\n            <span>{{card.checkItemsChecked}}</span>\r\n            <span>/</span>\r\n            <span>{{card.checkItems}}</span>\r\n        </span>\r\n        <!-- / CARD CHECK ITEMS STATUS -->\r\n\r\n    </div>\r\n\r\n    <!-- CARD MEMBERS -->\r\n    <div *ngIf=\"card.idMembers.length > 0\"\r\n         class=\"list-card-members\"\r\n         fxLayout=\"row\">\r\n\r\n        <div class=\"list-card-member\"\r\n             *ngFor=\"let memberId of card.idMembers\">\r\n\r\n            <img class=\"list-card-member-avatar\"\r\n                 [src]=\"board.members | getById:memberId:'avatar'\"\r\n                 [matTooltip]=\"board.members | getById:memberId:'name'\">\r\n        </div>\r\n\r\n    </div>\r\n    <!-- / CARD MEMBERS -->\r\n\r\n</div>\r\n<!-- / CARD DETAILS -->\r\n\r\n<!-- CARD FOOTER -->\r\n<div class=\"list-card-footer\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n        <!-- CARD SUBSCRIBE -->\r\n        <span *ngIf=\"card.subscribed\" class=\"list-card-footer-item\"\r\n              fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"s-18\">remove_red_eye</mat-icon>\r\n        </span>\r\n        <!-- / CARD SUBSCRIBE -->\r\n\r\n        <!-- CARD DETAILS -->\r\n        <span *ngIf=\"card.description !== ''\"\r\n              class=\"list-card-footer-item\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"s-18\">description</mat-icon>\r\n        </span>\r\n        <!-- / CARD DETAILS -->\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n\r\n        <!-- CARD ATTACHMENT -->\r\n        <span *ngIf=\"card.attachments\"\r\n              class=\"list-card-footer-item\"\r\n              fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"s-18\">attachment</mat-icon>\r\n            <span class=\"value\">{{card.attachments.length}}</span>\r\n        </span>\r\n        <!-- / CARD ATTACHMENT -->\r\n\r\n        <!-- CARD COMMENTS -->\r\n        <span *ngIf=\"card.comments\"\r\n              class=\"list-card-footer-item\"\r\n              fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"s-18\">comment</mat-icon>\r\n            <span class=\"value\">{{card.comments.length}}</span>\r\n        </span>\r\n        <!-- / CARD COMMENTS -->\r\n\r\n    </div>\r\n</div>\r\n<!-- CARD FOOTER -->\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ScrumboardService implements Resolve<any>\r\n{\r\n    boards: any[];\r\n    routeParams: any;\r\n    board: any;\r\n\r\n    onBoardsChanged: BehaviorSubject<any>;\r\n    onBoardChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onBoardsChanged = new BehaviorSubject([]);\r\n        this.onBoardChanged = new BehaviorSubject([]);\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getBoards()\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get boards\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getBoards(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/scrumboard-boards')\r\n                .subscribe((response: any) => {\r\n                    this.boards = response;\r\n                    this.onBoardsChanged.next(this.boards);\r\n                    resolve(this.boards);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get board\r\n     *\r\n     * @param boardId\r\n     * @returns {Promise<any>}\r\n     */\r\n    getBoard(boardId): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/scrumboard-boards/' + boardId)\r\n                .subscribe((response: any) => {\r\n                    this.board = response;\r\n                    this.onBoardChanged.next(this.board);\r\n                    resolve(this.board);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add card\r\n     *\r\n     * @param listId\r\n     * @param newCard\r\n     * @returns {Promise<any>}\r\n     */\r\n    addCard(listId, newCard): Promise<any>\r\n    {\r\n        this.board.lists.map((list) => {\r\n            if ( list.id === listId )\r\n            {\r\n                return list.idCards.push(newCard.id);\r\n            }\r\n        });\r\n\r\n        this.board.cards.push(newCard);\r\n\r\n        return this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Add list\r\n     *\r\n     * @param newList\r\n     * @returns {Promise<any>}\r\n     */\r\n    addList(newList): Promise<any>\r\n    {\r\n        this.board.lists.push(newList);\r\n\r\n        return this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Remove list\r\n     *\r\n     * @param listId\r\n     * @returns {Promise<any>}\r\n     */\r\n    removeList(listId): Promise<any>\r\n    {\r\n        const list = this.board.lists.find((_list) => {\r\n            return _list.id === listId;\r\n        });\r\n\r\n        for ( const cardId of list.idCards )\r\n        {\r\n            this.removeCard(cardId);\r\n        }\r\n\r\n        const index = this.board.lists.indexOf(list);\r\n\r\n        this.board.lists.splice(index, 1);\r\n\r\n        return this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Remove card\r\n     *\r\n     * @param cardId\r\n     * @param listId\r\n     */\r\n    removeCard(cardId, listId?): void\r\n    {\r\n        const card = this.board.cards.find((_card) => {\r\n            return _card.id === cardId;\r\n        });\r\n\r\n        if ( listId )\r\n        {\r\n            const list = this.board.lists.find((_list) => {\r\n                return listId === _list.id;\r\n            });\r\n            list.idCards.splice(list.idCards.indexOf(cardId), 1);\r\n        }\r\n\r\n        this.board.cards.splice(this.board.cards.indexOf(card), 1);\r\n\r\n        this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Update board\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateBoard(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/scrumboard-boards/' + this.board.id, this.board)\r\n                .subscribe(response => {\r\n                    this.onBoardChanged.next(this.board);\r\n                    resolve(this.board);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update card\r\n     *\r\n     * @param newCard\r\n     */\r\n    updateCard(newCard): void\r\n    {\r\n        this.board.cards.map((_card) => {\r\n            if ( _card.id === newCard.id )\r\n            {\r\n                return newCard;\r\n            }\r\n        });\r\n\r\n        this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Create new board\r\n     *\r\n     * @param board\r\n     * @returns {Promise<any>}\r\n     */\r\n    createNewBoard(board): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/scrumboard-boards/' + board.id, board)\r\n                .subscribe(response => {\r\n                    resolve(board);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class BoardResolve implements Resolve<any>\r\n{\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @returns {Promise<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Promise<any>\r\n    {\r\n        return this._scrumboardService.getBoard(route.paramMap.get('boardId'));\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { MatColors } from '@fuse/mat-colors';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-color-selector',\r\n    templateUrl  : './board-color-selector.component.html',\r\n    styleUrls    : ['./board-color-selector.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardColorSelectorComponent implements OnInit, OnDestroy\r\n{\r\n    colors: any;\r\n    board: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.colors = MatColors.all;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Set the color\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color): void\r\n    {\r\n        this.board.settings.color = color;\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n}\r\n","<mat-list class=\"colors\">\r\n    <!-- COLORS -->\r\n    <mat-list-item class=\"color m-8 mat-elevation-z1\"\r\n                   [ngClass]=\"color.key\"\r\n                   *ngFor=\"let color of (colors | keys)\"\r\n                   (click)=\"setColor(color.key)\"\r\n                   matRipple>\r\n        <p fxFlex>{{color.key}}</p>\r\n        <mat-icon class=\"s-16\" *ngIf=\"color.key === board.settings.color\">check</mat-icon>\r\n        <button mat-icon-button *ngIf=\"color.key === board.settings.color\" (click)=\"$event.stopPropagation();setColor('')\">\r\n            <mat-icon class=\"s-16\">delete</mat-icon>\r\n        </button>\r\n    </mat-list-item>\r\n    <!-- / COLORS -->\r\n</mat-list>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { Board } from 'app/main/apps/scrumboard/board.model';\r\n\r\n@Component({\r\n    selector     : 'scrumboard',\r\n    templateUrl  : './scrumboard.component.html',\r\n    styleUrls    : ['./scrumboard.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ScrumboardComponent implements OnInit, OnDestroy\r\n{\r\n    boards: any[];\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {Router} _router\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private  _router: Router,\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(boards => {\r\n                this.boards = boards;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New board\r\n     */\r\n    newBoard(): void\r\n    {\r\n        const newBoard = new Board({});\r\n        this._scrumboardService.createNewBoard(newBoard).then(() => {\r\n            this._router.navigate(['/apps/scrumboard/boards/' + newBoard.id + '/' + newBoard.uri]);\r\n        });\r\n    }\r\n}\r\n","<!-- BOARDS -->\r\n<div id=\"boards\" class=\"fuse-navy\" fxLayout=\"column\" fxLayoutAlign=\"start center\" fxFlex fusePerfectScrollbar>\r\n\r\n    <div class=\"header pt-44 pt-md-88\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex=\"0 0 auto\"\r\n         [@animate]=\"{value:'*',params:{delay:'100ms'}}\">\r\n        <h1>Scrumboard App</h1>\r\n    </div>\r\n\r\n    <!-- BOARD LIST -->\r\n    <div class=\"board-list\" fxFlex=\"0 0 auto\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\"\r\n         [@animateStagger]=\"{value:'50'}\">\r\n\r\n        <!-- BOARD -->\r\n        <div class=\"board-list-item\" *ngFor=\"let board of boards\"\r\n             [routerLink]=\"'/apps/scrumboard/boards/'+board.id+'/'+board.uri\"\r\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n             [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n            <mat-icon class=\"s-56\">assessment</mat-icon>\r\n            <div class=\"board-name\">{{board.name}}</div>\r\n        </div>\r\n        <!-- / BOARD -->\r\n\r\n        <!-- NEW BOARD BUTTON -->\r\n        <div class=\"board-list-item add-new-board\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n             (click)=\"newBoard()\"\r\n             [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n            <mat-icon class=\"s-56\">add_circle</mat-icon>\r\n            <div class=\"board-name\">Add new board</div>\r\n        </div>\r\n        <!-- / NEW BOARD BUTTON -->\r\n\r\n    </div>\r\n    <!-- / BOARD LIST -->\r\n</div>\r\n<!-- / BOARDS -->\r\n","import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-edit-board-name',\r\n    templateUrl  : './edit-board-name.component.html',\r\n    styleUrls    : ['./edit-board-name.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardEditBoardNameComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Input()\r\n    board;\r\n\r\n    @Output()\r\n    boardNameChanged: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.boardNameChanged = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this.formBuilder.group({\r\n            name: [this.board.name]\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            this.board.name = this.form.getRawValue().name;\r\n            this.board.uri = encodeURIComponent(this.board.name).replace(/%20/g, '-').toLowerCase();\r\n\r\n            this.boardNameChanged.next(this.board.name);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n}\r\n","<div *ngIf=\"!formActive\" class=\"board-name\" fxFlex=\"1 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n    <span>{{board.name}}</span>\r\n    <button mat-icon-button (click)=\"openForm()\">\r\n        <mat-icon class=\"s-16\">edit_mode</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\"\r\n      class=\"board-name-form\" fxLayout=\"row\" fxFlex=\"1 0 auto\" *ngIf=\"formActive\">\r\n\r\n    <input formControlName=\"name\" #nameInput fxFlex=\"1 0 auto\" placeholder=\"Write a board name\">\r\n\r\n    <button mat-icon-button fxFlex=\"0 1 auto\">\r\n        <mat-icon>check</mat-icon>\r\n    </button>\r\n    <button mat-icon-button fxFlex=\"0 1 auto\" (click)=\"closeForm()\" type=\"button\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</form>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-settings',\r\n    templateUrl  : './settings.component.html',\r\n    styleUrls    : ['./settings.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ScrumboardBoardSettingsSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    board: any;\r\n    view: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.view = 'main';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Toggle card cover\r\n     */\r\n    toggleCardCover(): void\r\n    {\r\n        this.board.settings.cardCoverImages = !this.board.settings.cardCoverImages;\r\n        this.scrumboardService.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Toggle subscription\r\n     */\r\n    toggleSubscription(): void\r\n    {\r\n        this.board.settings.subscribed = !this.board.settings.subscribed;\r\n        this.scrumboardService.updateBoard();\r\n    }\r\n}\r\n","<div [ngSwitch]=\"view\" class=\"views\" (click)=\"$event.stopPropagation()\">\r\n\r\n    <div class=\"view\" *ngSwitchCase=\"'main'\" [@slideInLeft]>\r\n\r\n        <!-- SIDENAV HEADER -->\r\n        <div class=\"header px-24\" [ngClass]=\"board.settings.color\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <div>Settings</div>\r\n        </div>\r\n        <!-- / SIDENAV HEADER -->\r\n\r\n        <!-- SIDENAV CONTENT -->\r\n        <div class=\"content py-16\" fusePerfectScrollbar>\r\n\r\n            <div class=\"nav material2\">\r\n                <div class=\"nav-item\">\r\n                    <div class=\"nav-link\" matRipple (click)=\"view = 'board-color'\">\r\n                        <mat-icon class=\"nav-link-icon\">format_color_fill</mat-icon>\r\n                        <p class=\"title\">Board Color</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"nav-item\">\r\n                    <div class=\"nav-link\" matRipple (click)=\"toggleCardCover()\">\r\n                        <mat-icon class=\"nav-link-icon\">photo</mat-icon>\r\n                        <p fxFlex class=\"title\">Card Cover Images</p>\r\n                        <mat-icon *ngIf=\"board.settings.cardCoverImages\" class=\"s-18\">check</mat-icon>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"nav-item\">\r\n                    <div class=\"nav-link\" matRipple (click)=\"toggleSubscription()\">\r\n                        <mat-icon class=\"nav-link-icon\">remove_red_eye</mat-icon>\r\n                        <p fxFlex class=\"title\">Subscribe</p>\r\n                        <mat-icon *ngIf=\"board.settings.subscribed\" class=\"s-18\">check</mat-icon>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"nav-item\">\r\n                    <div class=\"nav-link\" matRipple>\r\n                        <mat-icon class=\"nav-link-icon\">content_copy</mat-icon>\r\n                        <p class=\"title\">Copy Board</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"nav-item\">\r\n                    <div class=\"nav-link\" matRipple>\r\n                        <mat-icon class=\"nav-link-icon\">delete</mat-icon>\r\n                        <p class=\"title\">Delete Board</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <mat-divider></mat-divider>\r\n            </div>\r\n        </div>\r\n        <!-- / SIDENAV CONTENT -->\r\n    </div>\r\n\r\n    <div class=\"view\" *ngSwitchCase=\"'board-color'\" [@slideInRight]>\r\n\r\n        <!-- SIDENAV HEADER -->\r\n        <div class=\"header px-24\" [ngClass]=\"board.settings.color\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>Background Color</div>\r\n            <button mat-icon-button (click)=\"view ='main'\">\r\n                <mat-icon class=\"s-16\">arrow_back</mat-icon>\r\n            </button>\r\n        </div>\r\n        <!-- / SIDENAV HEADER -->\r\n\r\n        <!-- SIDENAV CONTENT -->\r\n        <div class=\"content p-8\" fusePerfectScrollbar>\r\n            <scrumboard-board-color-selector></scrumboard-board-color-selector>\r\n        </div>\r\n        <!-- / SIDENAV CONTENT -->\r\n\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule, FuseMaterialColorPickerModule } from '@fuse/components';\r\n\r\nimport { BoardResolve, ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { ScrumboardComponent } from 'app/main/apps/scrumboard/scrumboard.component';\r\nimport { ScrumboardBoardComponent } from 'app/main/apps/scrumboard/board/board.component';\r\nimport { ScrumboardBoardListComponent } from 'app/main/apps/scrumboard/board/list/list.component';\r\nimport { ScrumboardBoardCardComponent } from 'app/main/apps/scrumboard/board/list/card/card.component';\r\nimport { ScrumboardBoardEditListNameComponent } from 'app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component';\r\nimport { ScrumboardBoardAddCardComponent } from 'app/main/apps/scrumboard/board/list/add-card/add-card.component';\r\nimport { ScrumboardBoardAddListComponent } from 'app/main/apps/scrumboard/board/add-list/add-list.component';\r\nimport { ScrumboardCardDialogComponent } from 'app/main/apps/scrumboard/board/dialogs/card/card.component';\r\nimport { ScrumboardLabelSelectorComponent } from 'app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component';\r\nimport { ScrumboardEditBoardNameComponent } from 'app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component';\r\nimport { ScrumboardBoardSettingsSidenavComponent } from 'app/main/apps/scrumboard/board/sidenavs/settings/settings.component';\r\nimport { ScrumboardBoardColorSelectorComponent } from 'app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'boards',\r\n        component: ScrumboardComponent,\r\n        resolve  : {\r\n            scrumboard: ScrumboardService\r\n        }\r\n    },\r\n    {\r\n        path     : 'boards/:boardId/:boardUri',\r\n        component: ScrumboardBoardComponent,\r\n        resolve  : {\r\n            board: BoardResolve\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'boards'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        ScrumboardComponent,\r\n        ScrumboardBoardComponent,\r\n        ScrumboardBoardListComponent,\r\n        ScrumboardBoardCardComponent,\r\n        ScrumboardBoardEditListNameComponent,\r\n        ScrumboardBoardAddCardComponent,\r\n        ScrumboardBoardAddListComponent,\r\n        ScrumboardCardDialogComponent,\r\n        ScrumboardLabelSelectorComponent,\r\n        ScrumboardEditBoardNameComponent,\r\n        ScrumboardBoardSettingsSidenavComponent,\r\n        ScrumboardBoardColorSelectorComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule,\r\n        MatRippleModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n\r\n        NgxDnDModule,\r\n\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule,\r\n        FuseMaterialColorPickerModule\r\n    ],\r\n    providers      : [\r\n        ScrumboardService,\r\n        BoardResolve\r\n    ],\r\n    entryComponents: [ScrumboardCardDialogComponent]\r\n})\r\nexport class ScrumboardModule\r\n{\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { Card } from 'app/main/apps/scrumboard/card.model';\r\nimport { ScrumboardCardDialogComponent } from 'app/main/apps/scrumboard/board/dialogs/card/card.component';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-list',\r\n    templateUrl  : './list.component.html',\r\n    styleUrls    : ['./list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardListComponent implements OnInit, OnDestroy\r\n{\r\n    board: any;\r\n    dialogRef: any;\r\n\r\n    @Input()\r\n    list;\r\n\r\n    @ViewChild(FusePerfectScrollbarDirective)\r\n    listScroll: FusePerfectScrollbarDirective;\r\n\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {ScrumboardService} _scrumboardService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _scrumboardService: ScrumboardService,\r\n        private _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On list name changed\r\n     *\r\n     * @param newListName\r\n     */\r\n    onListNameChanged(newListName): void\r\n    {\r\n        this.list.name = newListName;\r\n    }\r\n\r\n    /**\r\n     * On card added\r\n     *\r\n     * @param newCardName\r\n     */\r\n    onCardAdd(newCardName): void\r\n    {\r\n        if ( newCardName === '' )\r\n        {\r\n            return;\r\n        }\r\n\r\n        this._scrumboardService.addCard(this.list.id, new Card({name: newCardName}));\r\n\r\n        setTimeout(() => {\r\n            this.listScroll.scrollToBottom(0, 400);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove list\r\n     *\r\n     * @param listId\r\n     */\r\n    removeList(listId): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the list and it\\'s all cards?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this._scrumboardService.removeList(listId);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open card dialog\r\n     *\r\n     * @param cardId\r\n     */\r\n    openCardDialog(cardId): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ScrumboardCardDialogComponent, {\r\n            panelClass: 'scrumboard-card-dialog',\r\n            data      : {\r\n                cardId: cardId,\r\n                listId: this.list.id\r\n            }\r\n        });\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n}\r\n","<div class=\"list mat-elevation-z1\" fxLayout=\"column\">\r\n\r\n    <!-- LIST HEADER -->\r\n    <div class=\"list-header\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n        <scrumboard-board-edit-list-name\r\n            fxFlex=\"1 0 auto\"\r\n            [list]=\"list\"\r\n            (listNameChanged)=\"onListNameChanged($event)\">\r\n        </scrumboard-board-edit-list-name>\r\n\r\n        <div fxFlex=\"0 1 auto\">\r\n            <button mat-icon-button class=\"list-header-option-button\" [matMenuTriggerFor]=\"listMenu\">\r\n                <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #listMenu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"removeList(list.id)\">Remove List</button>\r\n            </mat-menu>\r\n        </div>\r\n\r\n    </div>\r\n    <!-- / LIST HEADER -->\r\n\r\n    <!-- LIST CONTENT -->\r\n    <div class=\"list-content\" fxLayout=\"column\">\r\n\r\n        <div class=\"list-cards ngx-dnd-container\"\r\n             [model]=\"list.idCards\" ngxDroppable=\"card\" (out)=\"onDrop($event)\"\r\n             fusePerfectScrollbar #listScroll>\r\n            <scrumboard-board-card ngxDraggable\r\n                                   (click)=\"openCardDialog(cardId)\"\r\n                                   class=\"scrumboard-board-card ngx-dnd-item\"\r\n                                   *ngFor=\"let cardId of list.idCards\"\r\n                                   [model]=\"cardId\"\r\n                                   [cardId]=\"cardId\">\r\n            </scrumboard-board-card>\r\n        </div>\r\n    </div>\r\n    <!-- / LIST CONTENT -->\r\n\r\n    <!-- NEW CARD BUTTON-->\r\n    <div class=\"list-footer\">\r\n        <scrumboard-board-add-card (cardAdded)=\"onCardAdd($event)\"></scrumboard-board-add-card>\r\n    </div>\r\n    <!-- / NEW CARD BUTTON-->\r\n\r\n</div>\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class List\r\n{\r\n    id: string;\r\n    name: string;\r\n    idCards: string[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param list\r\n     */\r\n    constructor(list)\r\n    {\r\n        this.id = list.id || FuseUtils.generateGUID();\r\n        this.name = list.name || '';\r\n        this.idCards = [];\r\n    }\r\n}\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nimport { List } from './list.model';\r\nimport { Card } from './card.model';\r\n\r\nconst sampleLabels = [\r\n    {\r\n        id   : '56027e4119ad3a5dc28b36cd',\r\n        name : 'Design',\r\n        color: 'red-500'\r\n    },\r\n    {\r\n        id   : '5640635e19ad3a5dc21416b2',\r\n        name : 'App',\r\n        color: 'blue-500'\r\n    },\r\n    {\r\n        id   : '6540635g19ad3s5dc31412b2',\r\n        name : 'Feature',\r\n        color: 'green-400'\r\n    }\r\n];\r\n\r\nconst sampleMembers = [\r\n    {\r\n        id    : '56027c1930450d8bf7b10758',\r\n        name  : 'Alice Freeman',\r\n        avatar: 'assets/images/avatars/alice.jpg'\r\n    },\r\n    {\r\n        id    : '26027s1930450d8bf7b10828',\r\n        name  : 'Danielle Obrien',\r\n        avatar: 'assets/images/avatars/danielle.jpg'\r\n    },\r\n    {\r\n        id    : '76027g1930450d8bf7b10958',\r\n        name  : 'James Lewis',\r\n        avatar: 'assets/images/avatars/james.jpg'\r\n    },\r\n    {\r\n        id    : '36027j1930450d8bf7b10158',\r\n        name  : 'Vincent Munoz',\r\n        avatar: 'assets/images/avatars/vincent.jpg'\r\n    }\r\n];\r\n\r\nexport class Board\r\n{\r\n    name: string;\r\n    uri: string;\r\n    id: string;\r\n    settings: {\r\n        color: string,\r\n        subscribed: boolean,\r\n        cardCoverImages: boolean\r\n    };\r\n    lists: List[];\r\n    cards: Card[];\r\n    members: {\r\n        id: string,\r\n        name: string,\r\n        avatar: string\r\n    }[];\r\n    labels: {\r\n        id: string,\r\n        name: string,\r\n        color: string\r\n    }[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param board\r\n     */\r\n    constructor(board)\r\n    {\r\n        this.name = board.name || 'Untitled Board';\r\n        this.uri = board.uri || 'untitled-board';\r\n        this.id = board.id || FuseUtils.generateGUID();\r\n        this.settings = board.settings || {\r\n            color          : '',\r\n            subscribed     : true,\r\n            cardCoverImages: true\r\n        };\r\n        this.lists = [];\r\n        this.cards = [];\r\n        this.members = board.members || sampleMembers;\r\n        this.labels = board.labels || sampleLabels;\r\n    }\r\n}\r\n","import { Component, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-add-card',\r\n    templateUrl  : './add-card.component.html',\r\n    styleUrls    : ['./add-card.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardAddCardComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Output()\r\n    cardAdded: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.cardAdded = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this._formBuilder.group({\r\n            name: ''\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close the form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            const cardName = this.form.getRawValue().name;\r\n            this.cardAdded.next(cardName);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n}\r\n\r\n","<div *ngIf=\"!formActive\" class=\"add-card-button\"\r\n     (click)=\"openForm()\"\r\n     fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n    <mat-icon class=\"s-20\">add</mat-icon>\r\n    <div>Add a card</div>\r\n</div>\r\n\r\n<div *ngIf=\"formActive\" class=\"add-card-form-wrapper\">\r\n\r\n    <form [formGroup]=\"form\" (submit)=\"onFormSubmit()\" class=\"add-card-form\" fxLayout=\"column\">\r\n\r\n        <mat-form-field fxFlex floatLabel=\"never\">\r\n            <input #nameInput matInput formControlName=\"name\" placeholder=\"Card title\" autocomplete=\"off\" required>\r\n        </mat-form-field>\r\n\r\n        <div class=\"pl-8\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <button mat-raised-button class=\"add-button mat-accent\" aria-label=\"add\"\r\n                    [disabled]=\"form.invalid\">\r\n                <span>Add</span>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"closeForm()\" class=\"cancel-button\" aria-label=\"cancel\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Card\r\n{\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    idAttachmentCover: string;\r\n    idMembers: string[];\r\n    idLabels: string[];\r\n    attachments: any[];\r\n    subscribed: boolean;\r\n    checklists: any[];\r\n    checkItems: number;\r\n    checkItemsChecked: number;\r\n    comments: any[];\r\n    activities: any[];\r\n    due: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param card\r\n     */\r\n    constructor(card)\r\n    {\r\n        this.id = card.id || FuseUtils.generateGUID();\r\n        this.name = card.name || '';\r\n        this.description = card.description || '';\r\n        this.idAttachmentCover = card.idAttachmentCover || '';\r\n        this.idMembers = card.idMembers || [];\r\n        this.idLabels = card.idLabels || [];\r\n        this.attachments = card.attachments || [];\r\n        this.subscribed = card.subscribed || true;\r\n        this.checklists = card.checklists || [];\r\n        this.checkItems = card.checkItems || 0;\r\n        this.checkItemsChecked = card.checkItemsChecked || 0;\r\n        this.comments = card.comments || [];\r\n        this.activities = card.activities || [];\r\n        this.due = card.due || '';\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-edit-list-name',\r\n    templateUrl  : './edit-list-name.component.html',\r\n    styleUrls    : ['./edit-list-name.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardEditListNameComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Input()\r\n    list;\r\n\r\n    @Output()\r\n    listNameChanged: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.listNameChanged = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this._formBuilder.group({\r\n            name: [this.list.name]\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close the form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            this.list.name = this.form.getRawValue().name;\r\n            this.listNameChanged.next(this.list.name);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n}\r\n","<div fxFlex=\"1 0 auto\" *ngIf=\"!formActive\" class=\"list-header-name\" (click)=\"openForm()\">\r\n    {{list.name}}\r\n</div>\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\"\r\n      class=\"list-header-name-form\" fxLayout=\"row\" fxFlex=\"1 0 auto\"\r\n      *ngIf=\"formActive\">\r\n\r\n    <input formControlName=\"name\" #nameInput fxFlex placeholder=\"Write a list Name\">\r\n\r\n    <button mat-icon-button fxFlex=\"0 1 auto\">\r\n        <mat-icon>check</mat-icon>\r\n    </button>\r\n    <button mat-icon-button fxFlex=\"0 1 auto\" (click)=\"closeForm()\" type=\"button\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</form>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-label-selector',\r\n    templateUrl  : './label-selector.component.html',\r\n    styleUrls    : ['./label-selector.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\n\r\nexport class ScrumboardLabelSelectorComponent implements OnInit, OnDestroy\r\n{\r\n    @Input('card')\r\n    card: any;\r\n\r\n    @Output()\r\n    cardLabelsChanged: EventEmitter<any>;\r\n\r\n    board: any;\r\n    labelsMenuView: string;\r\n    selectedLabel: any;\r\n    newLabel: any;\r\n    toggleInArray: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.cardLabelsChanged = new EventEmitter();\r\n        this.labelsMenuView = 'labels';\r\n        this.newLabel = {\r\n            id   : '',\r\n            name : '',\r\n            color: 'blue-400'\r\n        };\r\n        this.toggleInArray = FuseUtils.toggleInArray;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Card labels changed\r\n     */\r\n    onCardLabelsChanged(): void\r\n    {\r\n        this.cardLabelsChanged.next();\r\n    }\r\n\r\n    /**\r\n     * On label change\r\n     */\r\n    onLabelChange(): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Add new label\r\n     */\r\n    addNewLabel(): void\r\n    {\r\n        this.newLabel.id = FuseUtils.generateGUID();\r\n        this.board.labels.push(Object.assign({}, this.newLabel));\r\n        this.newLabel.name = '';\r\n        this.labelsMenuView = 'labels';\r\n    }\r\n}\r\n","<div [ngSwitch]=\"labelsMenuView\" class=\"views\" (click)=\"$event.stopPropagation()\">\r\n\r\n    <div class=\"view\" *ngSwitchCase=\"'labels'\" fxFlex fxLayout=\"column\">\r\n\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>Labels</div>\r\n            <button mat-button (click)=\"labelsMenuView ='add'\">\r\n                <mat-icon class=\"s-16\">add</mat-icon>\r\n                <span>Add</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div fxFlex fxLayout=\"column\" fusePerfectScrollbar>\r\n\r\n            <div class=\"label\" *ngFor=\"let label of board.labels\" fxFlex=\"0 0 auto\" fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between center\">\r\n\r\n                <div class=\"label-color\" [ngClass]=\"label.color\"></div>\r\n\r\n                <mat-checkbox fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\"\r\n                              [checked]=\"card.idLabels.indexOf(label.id) > -1\"\r\n                              (change)=\"toggleInArray(label.id, card.idLabels);onCardLabelsChanged()\">\r\n                    {{label.name}}\r\n                </mat-checkbox>\r\n\r\n                <button mat-icon-button>\r\n                    <mat-icon class=\"s-16\" (click)=\"labelsMenuView ='edit';selectedLabel = label\">mode_edit</mat-icon>\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"view edit\" *ngSwitchCase=\"'edit'\" fxFlex fxLayout=\"column\">\r\n\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <button mat-icon-button (click)=\"labelsMenuView ='labels'\">\r\n                <mat-icon class=\"s-16\">arrow_back</mat-icon>\r\n            </button>\r\n            <div>Edit Label</div>\r\n        </div>\r\n\r\n        <div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Name\" [(ngModel)]=\"selectedLabel.name\" (change)=\"onLabelChange()\">\r\n            </mat-form-field>\r\n\r\n            <fuse-material-color-picker [(ngModel)]=\"selectedLabel.color\" class=\"ml-8\"\r\n                                        (colorChanged)=\"$event.preventDefault;onLabelChange()\"></fuse-material-color-picker>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"view add\" *ngSwitchCase=\"'add'\" fxFlex fxLayout=\"column\">\r\n\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <button mat-icon-button (click)=\"labelsMenuView ='labels'\">\r\n                <mat-icon class=\"s-16\">arrow_back</mat-icon>\r\n            </button>\r\n            <div>Add Label</div>\r\n        </div>\r\n\r\n        <form (submit)=\"addNewLabel()\" #newLabelForm=\"ngForm\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"start end\">\r\n\r\n            <div fxFlex=\"0 1 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <mat-form-field fxFlex>\r\n                    <input matInput placeholder=\"Name\" [(ngModel)]=\"newLabel.name\" name=\"labelName\" required>\r\n                </mat-form-field>\r\n\r\n                <fuse-material-color-picker class=\"ml-8\" [(ngModel)]=\"newLabel.color\"\r\n                                            name=\"labelColor\"></fuse-material-color-picker>\r\n            </div>\r\n\r\n            <button mat-raised-button class=\"mat-accent mt-16\" [disabled]=\"!newLabelForm.valid\">ADD NEW LABEL</button>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n</div>\r\n"],"sourceRoot":"webpack:///"}