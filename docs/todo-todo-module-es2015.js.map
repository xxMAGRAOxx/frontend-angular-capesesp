{"version":3,"sources":["./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","./src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","./src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","./src/app/main/apps/todo/todo.service.ts","./src/app/main/apps/todo/todo-list/todo-list.component.ts","./src/app/main/apps/todo/todo-list/todo-list.component.html","./src/app/main/apps/todo/todo.component.ts","./src/app/main/apps/todo/todo.component.html","./src/app/main/apps/todo/todo.model.ts","./src/app/main/apps/todo/todo.module.ts","./src/app/main/apps/todo/todo-details/todo-details.component.ts","./src/app/main/apps/todo/todo-details/todo-details.component.html"],"names":[],"mappings":"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","file":"todo-todo-module-es2015.js","sourcesContent":["import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list-item',\r\n    templateUrl  : './todo-list-item.component.html',\r\n    styleUrls    : ['./todo-list-item.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TodoListItemComponent implements OnInit, OnDestroy\r\n{\r\n    tags: any[];\r\n\r\n    @Input()\r\n    todo: Todo;\r\n\r\n    @HostBinding('class.selected')\r\n    selected: boolean;\r\n\r\n    @HostBinding('class.completed')\r\n    completed: boolean;\r\n\r\n    @HostBinding('class.move-disabled')\r\n    moveDisabled: boolean;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n        // Disable move if path is not /all\r\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\r\n        {\r\n            this.moveDisabled = true;\r\n        }\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the initial values\r\n        this.todo = new Todo(this.todo);\r\n        this.completed = this.todo.completed;\r\n\r\n        // Subscribe to update on selected todo change\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n                this.selected = false;\r\n\r\n                if ( selectedTodos.length > 0 )\r\n                {\r\n                    for ( const todo of selectedTodos )\r\n                    {\r\n                        if ( todo.id === this.todo.id )\r\n                        {\r\n                            this.selected = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On selected change\r\n     */\r\n    onSelectedChange(): void\r\n    {\r\n        this._todoService.toggleSelectedTodo(this.todo.id);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Important\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n    <mat-icon class=\"handle mr-16\" ngxDragHandle fxFlex=\"0 1 auto\" fxHide.xs>\r\n        drag_handle\r\n    </mat-icon>\r\n\r\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\r\n                  class=\"mr-16\" fxFlex=\"0 1 auto\" (click)=\"$event.stopPropagation()\">\r\n    </mat-checkbox>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\r\n\r\n        <div class=\"info\" fxFlex fxFlexLayout=\"column\">\r\n\r\n            <div class=\"title\">\r\n                {{todo.title}}\r\n            </div>\r\n\r\n            <div class=\"notes\">\r\n                {{todo.notes}}\r\n            </div>\r\n\r\n            <div class=\"tags\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\">\r\n\r\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\r\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\r\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\"\r\n                    aria-label=\"Toggle important\" fxHide.xs>\r\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleStar($event)\"\r\n                    aria-label=\"Toggle star\" fxHide.xs>\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\"\r\n                    fxHide.xs>\r\n                <mat-icon class=\"secondary-text\">more_vert</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #moreMenu=\"matMenu\">\r\n                <button mat-menu-item aria-label=\"toggle done\" (click)=\"toggleCompleted($event)\">\r\n                    <ng-container *ngIf=\"todo.completed\">\r\n                        <mat-icon>check_box</mat-icon>\r\n                        <span>Mark as undone</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.completed\">\r\n                        <mat-icon>check_box_outline_blank</mat-icon>\r\n                        <span>Mark as done</span>\r\n                    </ng-container>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"toggle important\" (click)=\"toggleImportant($event)\">\r\n                    <ng-container *ngIf=\"todo.important\">\r\n                        <mat-icon>error</mat-icon>\r\n                        <span>Remove important</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.important\">\r\n                        <mat-icon>error_outline</mat-icon>\r\n                        <span>Mark as important</span>\r\n                    </ng-container>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"toggle star\" (click)=\"toggleStar($event)\">\r\n                    <ng-container *ngIf=\"todo.starred\">\r\n                        <mat-icon>star</mat-icon>\r\n                        <span>Remove star</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.starred\">\r\n                        <mat-icon>star_border</mat-icon>\r\n                        <span>Add star</span>\r\n                    </ng-container>\r\n                </button>\r\n            </mat-menu>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo-main-sidebar',\r\n    templateUrl  : './main-sidebar.component.html',\r\n    styleUrls    : ['./main-sidebar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    folders: any[];\r\n    filters: any[];\r\n    tags: any[];\r\n    accounts: object;\r\n    selectedAccount: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {Router} _router\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _router: Router\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.accounts = {\r\n            creapond    : 'johndoe@creapond.com',\r\n            withinpixels: 'johndoe@withinpixels.com'\r\n        };\r\n        this.selectedAccount = 'creapond';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(filters => {\r\n                this.filters = filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New todo\r\n     */\r\n    newTodo(): void\r\n    {\r\n        this._router.navigate(['/apps/todo/all']).then(() => {\r\n            setTimeout(() => {\r\n                this._todoService.onNewTodoClicked.next('');\r\n            });\r\n        });\r\n    }\r\n}\r\n","<!-- SIDEBAR HEADER -->\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\r\n     class=\"header accent p-24 pb-4\">\r\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n            check_box\r\n        </mat-icon>\r\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">To-Do</span>\r\n    </div>\r\n\r\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\r\n        <div class=\"title\">John Doe</div>\r\n        <mat-form-field floatLabel=\"never\">\r\n            <mat-select class=\"account-selection\" placeholder=\"Todo Selection\"\r\n                        [ngModel]=\"selectedAccount\">\r\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\r\n                    {{account.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR HEADER -->\r\n\r\n<!-- SIDEBAR CONTENT -->\r\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\r\n\r\n    <div class=\"p-24\">\r\n        <button mat-raised-button\r\n                class=\"mat-accent add-todo-button w-100-p\"\r\n                (click)=\"newTodo()\"\r\n                aria-label=\"ADD TASK\">\r\n            ADD TASK\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"nav material2\">\r\n\r\n        <div class=\"nav-item\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/all'\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\">view_headline</mat-icon>\r\n                <span>All</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">FILTERS</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/filter/' + filter.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\r\n                <span>{{filter.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">TAGS</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let tag of tags\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/tag/' + tag.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':tag.color}\">label</mat-icon>\r\n                <span>{{tag.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\n\r\n@Injectable()\r\nexport class TodoService implements Resolve<any>\r\n{\r\n    todos: Todo[];\r\n    selectedTodos: Todo[];\r\n    currentTodo: Todo;\r\n    searchText: string;\r\n    filters: any[];\r\n    tags: any[];\r\n    routeParams: any;\r\n\r\n    onTodosChanged: BehaviorSubject<any>;\r\n    onSelectedTodosChanged: BehaviorSubject<any>;\r\n    onCurrentTodoChanged: BehaviorSubject<any>;\r\n    onFiltersChanged: BehaviorSubject<any>;\r\n    onTagsChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: BehaviorSubject<any>;\r\n    onNewTodoClicked: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.selectedTodos = [];\r\n        this.searchText = '';\r\n        this.onTodosChanged = new BehaviorSubject([]);\r\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\r\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\r\n        this.onFiltersChanged = new BehaviorSubject([]);\r\n        this.onTagsChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new BehaviorSubject('');\r\n        this.onNewTodoClicked = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getFilters(),\r\n                this.getTags(),\r\n                this.getTodos()\r\n            ]).then(\r\n                () => {\r\n                    if ( this.routeParams.todoId )\r\n                    {\r\n                        this.setCurrentTodo(this.routeParams.todoId);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setCurrentTodo(null);\r\n                    }\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        if ( searchText !== '' )\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                        else\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all filters\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFilters(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-filters')\r\n                .subscribe((response: any) => {\r\n                    this.filters = response;\r\n                    this.onFiltersChanged.next(this.filters);\r\n                    resolve(this.filters);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all tags\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getTags(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags')\r\n                .subscribe((response: any) => {\r\n                    this.tags = response;\r\n                    this.onTagsChanged.next(this.tags);\r\n                    resolve(this.tags);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos\r\n     *\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodos(): Promise<Todo[]>\r\n    {\r\n        if ( this.routeParams.tagHandle )\r\n        {\r\n            return this.getTodosByTag(this.routeParams.tagHandle);\r\n        }\r\n\r\n        if ( this.routeParams.filterHandle )\r\n        {\r\n            return this.getTodosByFilter(this.routeParams.filterHandle);\r\n        }\r\n\r\n        return this.getTodosByParams(this.routeParams);\r\n    }\r\n\r\n    /**\r\n     * Get todos by params\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByParams(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos')\r\n                .subscribe((todos: any) => {\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by filter\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByFilter(handle): Promise<Todo[]>\r\n    {\r\n\r\n        let param = handle + '=true';\r\n\r\n        if ( handle === 'dueDate' )\r\n        {\r\n            param = handle + '=^$|\\\\s+';\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos?' + param)\r\n                .subscribe((todos: any) => {\r\n\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by tag\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByTag(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags?handle=' + handle)\r\n                .subscribe((tags: any) => {\r\n\r\n                    const tagId = tags[0].id;\r\n\r\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\r\n                        .subscribe((todos: any) => {\r\n\r\n                            this.todos = todos.map(todo => {\r\n                                return new Todo(todo);\r\n                            });\r\n\r\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                            this.onTodosChanged.next(this.todos);\r\n\r\n                            resolve(this.todos);\r\n\r\n                        }, reject);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle selected todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedTodo(id): void\r\n    {\r\n        // First, check if we already have that todo as selected...\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            for ( const todo of this.selectedTodos )\r\n            {\r\n                // ...delete the selected todo\r\n                if ( todo.id === id )\r\n                {\r\n                    const index = this.selectedTodos.indexOf(todo);\r\n\r\n                    if ( index !== -1 )\r\n                    {\r\n                        this.selectedTodos.splice(index, 1);\r\n\r\n                        // Trigger the next event\r\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n\r\n                        // Return\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedTodos.push(\r\n            this.todos.find(todo => {\r\n                return todo.id === id;\r\n            })\r\n        );\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            this.deselectTodos();\r\n        }\r\n        else\r\n        {\r\n            this.selectTodos();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // If there is no filter, select all todos\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedTodos = this.todos;\r\n        }\r\n        else\r\n        {\r\n            this.selectedTodos.push(...\r\n                this.todos.filter(todo => {\r\n                    return todo[filterParameter] === filterValue;\r\n                })\r\n            );\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Set current todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    setCurrentTodo(id): void\r\n    {\r\n        this.currentTodo = this.todos.find(todo => {\r\n            return todo.id === id;\r\n        });\r\n\r\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\r\n\r\n        const tagHandle    = this.routeParams.tagHandle,\r\n              filterHandle = this.routeParams.filterHandle;\r\n\r\n        if ( tagHandle )\r\n        {\r\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\r\n        }\r\n        else if ( filterHandle )\r\n        {\r\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\r\n        }\r\n        else\r\n        {\r\n            this._location.go('apps/todo/all/' + id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this.selectedTodos.map(todo => {\r\n            this.toggleTagOnTodo(tagId, todo);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     */\r\n    toggleTagOnTodo(tagId, todo): void\r\n    {\r\n        const index = todo.tags.indexOf(tagId);\r\n\r\n        if ( index !== -1 )\r\n        {\r\n            todo.tags.splice(index, 1);\r\n        }\r\n        else\r\n        {\r\n            todo.tags.push(tagId);\r\n        }\r\n\r\n        this.updateTodo(todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     * @returns {boolean}\r\n     */\r\n    hasTag(tagId, todo): any\r\n    {\r\n        if ( !todo.tags )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return todo.tags.indexOf(tagId) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Update the todo\r\n     *\r\n     * @param todo\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateTodo(todo): any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\r\n                .subscribe(response => {\r\n\r\n                    this.getTodos().then(todos => {\r\n\r\n                        resolve(todos);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list',\r\n    templateUrl  : './todo-list.component.html',\r\n    styleUrls    : ['./todo-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoListComponent implements OnInit, OnDestroy\r\n{\r\n    todos: Todo[];\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {TodoService} _todoService\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _todoService: TodoService,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update todos on changes\r\n        this._todoService.onTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(todos => {\r\n                this.todos = todos;\r\n            });\r\n\r\n        // Subscribe to update current todo on changes\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentTodo => {\r\n                if ( !currentTodo )\r\n                {\r\n                    // Set the current todo id to null to deselect the current todo\r\n                    this.currentTodo = null;\r\n\r\n                    // Handle the location changes\r\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\r\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\r\n\r\n                    if ( tagHandle )\r\n                    {\r\n                        this._location.go('apps/todo/tag/' + tagHandle);\r\n                    }\r\n                    else if ( filterHandle )\r\n                    {\r\n                        this._location.go('apps/todo/filter/' + filterHandle);\r\n                    }\r\n                    else\r\n                    {\r\n                        this._location.go('apps/todo/all');\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Read todo\r\n     *\r\n     * @param todoId\r\n     */\r\n    readTodo(todoId): void\r\n    {\r\n        // Set current todo\r\n        this._todoService.setCurrentTodo(todoId);\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"todos.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\r\n    <span class=\"no-todos-text hint-text\">There are no todos!</span>\r\n</div>\r\n<div class=\"todo-list\" ngxDroppable [model]=\"todos\" (out)=\"onDrop($event)\" [@animateStagger]=\"{value:'50'}\">\r\n    <todo-list-item class=\"todo-list-item has-handle\"\r\n                    *ngFor=\"let todo of todos\" [todo]=\"todo\"\r\n                    ngxDraggable\r\n                    [model]=\"todo\"\r\n                    (click)=\"readTodo(todo.id)\"\r\n                    [ngClass]=\"{'current-todo':todo?.id == currentTodo?.id}\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n    </todo-list-item>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo',\r\n    templateUrl  : './todo.component.html',\r\n    styleUrls    : ['./todo.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedTodos: boolean;\r\n    isIndeterminate: boolean;\r\n    filters: any[];\r\n    tags: any[];\r\n    searchInput: FormControl;\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {TodoService} _todoService\r\n     */\r\n    constructor(\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _todoService: TodoService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n\r\n                setTimeout(() => {\r\n                    this.hasSelectedTodos = selectedTodos.length > 0;\r\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\r\n                }, 0);\r\n            });\r\n\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.filters = this._todoService.filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = this._todoService.tags;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._todoService.onSearchTextChanged.next(searchText);\r\n            });\r\n\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([currentTodo, formType]) => {\r\n                if ( !currentTodo )\r\n                {\r\n                    this.currentTodo = null;\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Deselect current todo\r\n     */\r\n    deselectCurrentTodo(): void\r\n    {\r\n        this._todoService.onCurrentTodoChanged.next([null, null]);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        this._todoService.toggleSelectAll();\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this._todoService.selectTodos(filterParameter, filterValue);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this._todoService.deselectTodos();\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnSelectedTodos(tagId);\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"todo\" class=\"page-layout carded left-sidebar inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- SIDEBAR -->\r\n    <fuse-sidebar class=\"sidebar\" name=\"todo-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\r\n        <todo-main-sidebar></todo-main-sidebar>\r\n    </fuse-sidebar>\r\n    <!-- / SIDEBAR -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- CONTENT HEADER -->\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('todo-main-sidebar')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n\r\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\r\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a task\" fxFlex>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / CONTENT HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" [ngClass]=\"{'current-todo-selected':currentTodo}\">\r\n\r\n            <!-- CONTENT TOOLBAR -->\r\n            <div class=\"toolbar px-24 py-8\">\r\n\r\n                <div class=\"todo-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedTodos\"\r\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-menu #selectMenu=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"selectTodos()\">All</button>\r\n                        <button mat-menu-item (click)=\"deselectTodos()\">None</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('read', true)\">Read</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('read', false)\">Unread</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('starred', true)\">Starred</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('starred', false)\">Unstarred</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('important', true)\">Important</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('important', false)\">Unimportant</button>\r\n                    </mat-menu>\r\n\r\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedTodos\"></div>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedTodos\">\r\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\r\n                    </button>\r\n                    <mat-menu #labelMenu=\"matMenu\">\r\n                        <button mat-menu-item *ngFor=\"let tag of tags\" (click)=\"toggleTagOnSelectedTodos(tag.id)\">\r\n                            {{tag.title}}\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n\r\n                <div *ngIf=\"currentTodo\" fxHide.gt-lg>\r\n                    <button mat-icon-button (click)=\"deselectCurrentTodo()\">\r\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / CONTENT TOOLBAR -->\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\" fxFlexAlign=\"row\">\r\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\r\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","export class Todo\r\n{\r\n    id: string;\r\n    title: string;\r\n    notes: string;\r\n    startDate: string;\r\n    dueDate: boolean;\r\n    completed: boolean;\r\n    starred: boolean;\r\n    important: boolean;\r\n    deleted: boolean;\r\n    tags: [\r\n        {\r\n            'id': number,\r\n            'name': string,\r\n            'label': string,\r\n            'color': string\r\n        }\r\n        ];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param todo\r\n     */\r\n    constructor(todo)\r\n    {\r\n        {\r\n            this.id = todo.id;\r\n            this.title = todo.title;\r\n            this.notes = todo.notes;\r\n            this.startDate = todo.startDate;\r\n            this.dueDate = todo.dueDate;\r\n            this.completed = todo.completed;\r\n            this.starred = todo.starred;\r\n            this.important = todo.important;\r\n            this.deleted = todo.deleted;\r\n            this.tags = todo.tags || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(): void\r\n    {\r\n        this.starred = !this.starred;\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     */\r\n    toggleImportant(): void\r\n    {\r\n        this.important = !this.important;\r\n    }\r\n\r\n    /**\r\n     * Toggle completed\r\n     */\r\n    toggleCompleted(): void\r\n    {\r\n        this.completed = !this.completed;\r\n    }\r\n\r\n    /**\r\n     * Toggle deleted\r\n     */\r\n    toggleDeleted(): void\r\n    {\r\n        this.deleted = !this.deleted;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\r\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\r\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\r\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\r\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'all',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'all/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'all'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TodoComponent,\r\n        TodoMainSidebarComponent,\r\n        TodoListItemComponent,\r\n        TodoListComponent,\r\n        TodoDetailsComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n\r\n        NgxDnDModule,\r\n\r\n        FuseSharedModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers   : [\r\n        TodoService\r\n    ]\r\n})\r\nexport class TodoModule\r\n{\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo-details',\r\n    templateUrl  : './todo-details.component.html',\r\n    styleUrls    : ['./todo-details.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoDetailsComponent implements OnInit, OnDestroy\r\n{\r\n    todo: Todo;\r\n    tags: any[];\r\n    formType: string;\r\n    todoForm: FormGroup;\r\n\r\n    @ViewChild('titleInput')\r\n    titleInputField;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update the current todo\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([todo, formType]) => {\r\n\r\n                if ( todo && formType === 'edit' )\r\n                {\r\n                    this.formType = 'edit';\r\n                    this.todo = todo;\r\n                    this.todoForm = this.createTodoForm();\r\n\r\n                    this.todoForm.valueChanges\r\n                        .pipe(\r\n                            takeUntil(this._unsubscribeAll),\r\n                            debounceTime(500),\r\n                            distinctUntilChanged()\r\n                        )\r\n                        .subscribe(data => {\r\n                            this._todoService.updateTodo(data);\r\n                        });\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.tags = labels;\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onNewTodoClicked\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this.todo = new Todo({});\r\n                this.todo.id = FuseUtils.generateGUID();\r\n                this.formType = 'new';\r\n                this.todoForm = this.createTodoForm();\r\n                this.focusTitleField();\r\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Focus title field\r\n     */\r\n    focusTitleField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.titleInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create todo form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createTodoForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            id       : [this.todo.id],\r\n            title    : [this.todo.title],\r\n            notes    : [this.todo.notes],\r\n            startDate: [this.todo.startDate],\r\n            dueDate  : [this.todo.dueDate],\r\n            completed: [this.todo.completed],\r\n            starred  : [this.todo.starred],\r\n            important: [this.todo.important],\r\n            deleted  : [this.todo.deleted],\r\n            tags     : [this.todo.tags]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param event\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     *\r\n     * @param event\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     *\r\n     * @param event\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Deleted\r\n     *\r\n     * @param event\r\n     */\r\n    toggleDeleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleDeleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnTodo(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @returns {any}\r\n     */\r\n    hasTag(tagId): any\r\n    {\r\n        return this._todoService.hasTag(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Add todo\r\n     */\r\n    addTodo(): void\r\n    {\r\n        this._todoService.updateTodo(this.todoForm.getRawValue());\r\n    }\r\n}\r\n","<div *ngIf=\"!todo\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\r\n    <mat-icon class=\"s-120 mb-12 select-todo-icon hint-text\"\r\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">check_box\r\n    </mat-icon>\r\n    <span class=\"hint-text mat-h1 select-todo-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\r\n        Select a todo\r\n    </span>\r\n</div>\r\n\r\n<div *ngIf=\"todo\">\r\n\r\n    <div class=\"todo-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n        <button mat-button class=\"toggle-complete-button\" (click)=\"toggleCompleted($event)\"\r\n                aria-label=\"Toggle completed\" fxFlex=\"0 1 auto\">\r\n            <mat-icon *ngIf=\"todo.completed\">check_box</mat-icon>\r\n            <mat-icon *ngIf=\"!todo.completed\">check_box_outline_blank</mat-icon>\r\n            <span class=\"ml-8\">Mark as Done</span>\r\n        </button>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\r\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" fxFlex=\"0 1 auto\">\r\n                <mat-icon class=\"secondary-text\">label</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #labelMenu=\"matMenu\">\r\n                <button mat-menu-item *ngFor=\"let tag of tags\"\r\n                        (click)=\"toggleTagOnTodo(tag.id)\">\r\n                    <mat-icon *ngIf=\"hasTag(tag.id)\">check</mat-icon>\r\n                    <mat-icon *ngIf=\"!hasTag(tag.id)\"></mat-icon>\r\n                    <span>{{tag.title}}</span>\r\n                </button>\r\n            </mat-menu>\r\n\r\n            <button mat-icon-button (click)=\"toggleDeleted($event)\" aria-label=\"Toggle delete\">\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"todo.deleted\">delete_forever</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.deleted\">delete</mat-icon>\r\n            </button>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"todo-content\">\r\n\r\n        <form [formGroup]=\"todoForm\" (submit)=\"addTodo()\">\r\n\r\n            <div class=\"tags mb-24\" fxFlexFill fxLayout=\"row wrap\">\r\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\r\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\r\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"title mt-8\" fxFill>\r\n                <mat-label>Title</mat-label>\r\n                <textarea matInput\r\n                          #titleInput\r\n                          name=\"title\"\r\n                          formControlName=\"title\"\r\n                          required>\r\n                </textarea>\r\n            </mat-form-field>\r\n\r\n            <div class=\"dates\" fxFlexFill fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"mr-sm-12\" fxFlex>\r\n                    <mat-label>Start Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"ml-sm-12\" fxFlex>\r\n                    <mat-label>Due Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"dueDatePicker\" placeholder=\"Due Date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFill>\r\n                <mat-label>Notes</mat-label>\r\n                <textarea matInput #notes\r\n                          name=\"notes\"\r\n                          formControlName=\"notes\"\r\n                          maxlength=\"500\">\r\n                </textarea>\r\n                <mat-hint align=\"end\">{{notes.value.length}} / 500</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <button *ngIf=\"formType === 'new'\"\r\n                    mat-raised-button color=\"accent\"\r\n                    [disabled]=\"todoForm.invalid\">\r\n                SAVE\r\n            </button>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}