{"version":3,"sources":["webpack:///src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","webpack:///src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","webpack:///src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","webpack:///src/app/main/apps/todo/todo.service.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list.component.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list.component.html","webpack:///src/app/main/apps/todo/todo.component.ts","webpack:///src/app/main/apps/todo/todo.component.html","webpack:///src/app/main/apps/todo/todo.model.ts","webpack:///src/app/main/apps/todo/todo.module.ts","webpack:///src/app/main/apps/todo/todo-details/todo-details.component.ts","webpack:///src/app/main/apps/todo/todo-details/todo-details.component.html"],"names":["TodoListItemComponent","_todoService","_activatedRoute","snapshot","url","path","moveDisabled","_unsubscribeAll","todo","completed","onSelectedTodosChanged","pipe","subscribe","selectedTodos","selected","length","id","onTagsChanged","tags","next","complete","toggleSelectedTodo","event","stopPropagation","toggleStar","updateTodo","toggleImportant","toggleCompleted","onSelectedChange","$event","selector","templateUrl","styleUrls","encapsulation","None","TodoMainSidebarComponent","_router","accounts","creapond","withinpixels","selectedAccount","onFiltersChanged","filters","navigate","then","setTimeout","onNewTodoClicked","newTodo","animations","TodoService","_httpClient","_location","searchText","onTodosChanged","onCurrentTodoChanged","onSearchTextChanged","route","state","routeParams","params","Promise","resolve","reject","all","getFilters","getTags","getTodos","todoId","setCurrentTodo","get","response","tagHandle","getTodosByTag","filterHandle","getTodosByFilter","getTodosByParams","handle","todos","map","filterArrayByString","param","tagId","index","indexOf","splice","push","find","deselectTodos","selectTodos","filterParameter","filterValue","undefined","filter","currentTodo","go","toggleTagOnTodo","post","TodoListComponent","ev","onDrop","TodoComponent","_fuseSidebarService","searchInput","hasSelectedTodos","isIndeterminate","folders","valueChanges","formType","toggleSelectAll","toggleTagOnSelectedTodos","name","getSidebar","toggleOpen","toggleSidebar","Todo","title","notes","startDate","dueDate","starred","important","deleted","routes","component","redirectTo","TodoModule","forChild","declarations","imports","providers","TodoDetailsComponent","_formBuilder","todoForm","createTodoForm","data","labels","generateGUID","focusTitleField","titleInputField","nativeElement","focus","group","toggleDeleted","hasTag","getRawValue"],"mappings":"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","file":"todo-todo-module-es5.js","sourcesContent":["import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list-item',\r\n    templateUrl  : './todo-list-item.component.html',\r\n    styleUrls    : ['./todo-list-item.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TodoListItemComponent implements OnInit, OnDestroy\r\n{\r\n    tags: any[];\r\n\r\n    @Input()\r\n    todo: Todo;\r\n\r\n    @HostBinding('class.selected')\r\n    selected: boolean;\r\n\r\n    @HostBinding('class.completed')\r\n    completed: boolean;\r\n\r\n    @HostBinding('class.move-disabled')\r\n    moveDisabled: boolean;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n        // Disable move if path is not /all\r\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\r\n        {\r\n            this.moveDisabled = true;\r\n        }\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the initial values\r\n        this.todo = new Todo(this.todo);\r\n        this.completed = this.todo.completed;\r\n\r\n        // Subscribe to update on selected todo change\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n                this.selected = false;\r\n\r\n                if ( selectedTodos.length > 0 )\r\n                {\r\n                    for ( const todo of selectedTodos )\r\n                    {\r\n                        if ( todo.id === this.todo.id )\r\n                        {\r\n                            this.selected = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On selected change\r\n     */\r\n    onSelectedChange(): void\r\n    {\r\n        this._todoService.toggleSelectedTodo(this.todo.id);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Important\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n    <mat-icon class=\"handle mr-16\" ngxDragHandle fxFlex=\"0 1 auto\" fxHide.xs>\r\n        drag_handle\r\n    </mat-icon>\r\n\r\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\r\n                  class=\"mr-16\" fxFlex=\"0 1 auto\" (click)=\"$event.stopPropagation()\">\r\n    </mat-checkbox>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\r\n\r\n        <div class=\"info\" fxFlex fxFlexLayout=\"column\">\r\n\r\n            <div class=\"title\">\r\n                {{todo.title}}\r\n            </div>\r\n\r\n            <div class=\"notes\">\r\n                {{todo.notes}}\r\n            </div>\r\n\r\n            <div class=\"tags\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\">\r\n\r\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\r\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\r\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\"\r\n                    aria-label=\"Toggle important\" fxHide.xs>\r\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleStar($event)\"\r\n                    aria-label=\"Toggle star\" fxHide.xs>\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\"\r\n                    fxHide.xs>\r\n                <mat-icon class=\"secondary-text\">more_vert</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #moreMenu=\"matMenu\">\r\n                <button mat-menu-item aria-label=\"toggle done\" (click)=\"toggleCompleted($event)\">\r\n                    <ng-container *ngIf=\"todo.completed\">\r\n                        <mat-icon>check_box</mat-icon>\r\n                        <span>Mark as undone</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.completed\">\r\n                        <mat-icon>check_box_outline_blank</mat-icon>\r\n                        <span>Mark as done</span>\r\n                    </ng-container>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"toggle important\" (click)=\"toggleImportant($event)\">\r\n                    <ng-container *ngIf=\"todo.important\">\r\n                        <mat-icon>error</mat-icon>\r\n                        <span>Remove important</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.important\">\r\n                        <mat-icon>error_outline</mat-icon>\r\n                        <span>Mark as important</span>\r\n                    </ng-container>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"toggle star\" (click)=\"toggleStar($event)\">\r\n                    <ng-container *ngIf=\"todo.starred\">\r\n                        <mat-icon>star</mat-icon>\r\n                        <span>Remove star</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.starred\">\r\n                        <mat-icon>star_border</mat-icon>\r\n                        <span>Add star</span>\r\n                    </ng-container>\r\n                </button>\r\n            </mat-menu>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo-main-sidebar',\r\n    templateUrl  : './main-sidebar.component.html',\r\n    styleUrls    : ['./main-sidebar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    folders: any[];\r\n    filters: any[];\r\n    tags: any[];\r\n    accounts: object;\r\n    selectedAccount: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {Router} _router\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _router: Router\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.accounts = {\r\n            creapond    : 'johndoe@creapond.com',\r\n            withinpixels: 'johndoe@withinpixels.com'\r\n        };\r\n        this.selectedAccount = 'creapond';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(filters => {\r\n                this.filters = filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New todo\r\n     */\r\n    newTodo(): void\r\n    {\r\n        this._router.navigate(['/apps/todo/all']).then(() => {\r\n            setTimeout(() => {\r\n                this._todoService.onNewTodoClicked.next('');\r\n            });\r\n        });\r\n    }\r\n}\r\n","<!-- SIDEBAR HEADER -->\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\r\n     class=\"header accent p-24 pb-4\">\r\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n            check_box\r\n        </mat-icon>\r\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">To-Do</span>\r\n    </div>\r\n\r\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\r\n        <div class=\"title\">John Doe</div>\r\n        <mat-form-field floatLabel=\"never\">\r\n            <mat-select class=\"account-selection\" placeholder=\"Todo Selection\"\r\n                        [ngModel]=\"selectedAccount\">\r\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\r\n                    {{account.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR HEADER -->\r\n\r\n<!-- SIDEBAR CONTENT -->\r\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\r\n\r\n    <div class=\"p-24\">\r\n        <button mat-raised-button\r\n                class=\"mat-accent add-todo-button w-100-p\"\r\n                (click)=\"newTodo()\"\r\n                aria-label=\"ADD TASK\">\r\n            ADD TASK\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"nav material2\">\r\n\r\n        <div class=\"nav-item\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/all'\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\">view_headline</mat-icon>\r\n                <span>All</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">FILTERS</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/filter/' + filter.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\r\n                <span>{{filter.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">TAGS</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let tag of tags\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/tag/' + tag.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':tag.color}\">label</mat-icon>\r\n                <span>{{tag.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\n\r\n@Injectable()\r\nexport class TodoService implements Resolve<any>\r\n{\r\n    todos: Todo[];\r\n    selectedTodos: Todo[];\r\n    currentTodo: Todo;\r\n    searchText: string;\r\n    filters: any[];\r\n    tags: any[];\r\n    routeParams: any;\r\n\r\n    onTodosChanged: BehaviorSubject<any>;\r\n    onSelectedTodosChanged: BehaviorSubject<any>;\r\n    onCurrentTodoChanged: BehaviorSubject<any>;\r\n    onFiltersChanged: BehaviorSubject<any>;\r\n    onTagsChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: BehaviorSubject<any>;\r\n    onNewTodoClicked: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.selectedTodos = [];\r\n        this.searchText = '';\r\n        this.onTodosChanged = new BehaviorSubject([]);\r\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\r\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\r\n        this.onFiltersChanged = new BehaviorSubject([]);\r\n        this.onTagsChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new BehaviorSubject('');\r\n        this.onNewTodoClicked = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getFilters(),\r\n                this.getTags(),\r\n                this.getTodos()\r\n            ]).then(\r\n                () => {\r\n                    if ( this.routeParams.todoId )\r\n                    {\r\n                        this.setCurrentTodo(this.routeParams.todoId);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setCurrentTodo(null);\r\n                    }\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        if ( searchText !== '' )\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                        else\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all filters\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFilters(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-filters')\r\n                .subscribe((response: any) => {\r\n                    this.filters = response;\r\n                    this.onFiltersChanged.next(this.filters);\r\n                    resolve(this.filters);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all tags\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getTags(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags')\r\n                .subscribe((response: any) => {\r\n                    this.tags = response;\r\n                    this.onTagsChanged.next(this.tags);\r\n                    resolve(this.tags);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos\r\n     *\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodos(): Promise<Todo[]>\r\n    {\r\n        if ( this.routeParams.tagHandle )\r\n        {\r\n            return this.getTodosByTag(this.routeParams.tagHandle);\r\n        }\r\n\r\n        if ( this.routeParams.filterHandle )\r\n        {\r\n            return this.getTodosByFilter(this.routeParams.filterHandle);\r\n        }\r\n\r\n        return this.getTodosByParams(this.routeParams);\r\n    }\r\n\r\n    /**\r\n     * Get todos by params\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByParams(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos')\r\n                .subscribe((todos: any) => {\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by filter\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByFilter(handle): Promise<Todo[]>\r\n    {\r\n\r\n        let param = handle + '=true';\r\n\r\n        if ( handle === 'dueDate' )\r\n        {\r\n            param = handle + '=^$|\\\\s+';\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos?' + param)\r\n                .subscribe((todos: any) => {\r\n\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by tag\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByTag(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags?handle=' + handle)\r\n                .subscribe((tags: any) => {\r\n\r\n                    const tagId = tags[0].id;\r\n\r\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\r\n                        .subscribe((todos: any) => {\r\n\r\n                            this.todos = todos.map(todo => {\r\n                                return new Todo(todo);\r\n                            });\r\n\r\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                            this.onTodosChanged.next(this.todos);\r\n\r\n                            resolve(this.todos);\r\n\r\n                        }, reject);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle selected todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedTodo(id): void\r\n    {\r\n        // First, check if we already have that todo as selected...\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            for ( const todo of this.selectedTodos )\r\n            {\r\n                // ...delete the selected todo\r\n                if ( todo.id === id )\r\n                {\r\n                    const index = this.selectedTodos.indexOf(todo);\r\n\r\n                    if ( index !== -1 )\r\n                    {\r\n                        this.selectedTodos.splice(index, 1);\r\n\r\n                        // Trigger the next event\r\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n\r\n                        // Return\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedTodos.push(\r\n            this.todos.find(todo => {\r\n                return todo.id === id;\r\n            })\r\n        );\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            this.deselectTodos();\r\n        }\r\n        else\r\n        {\r\n            this.selectTodos();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // If there is no filter, select all todos\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedTodos = this.todos;\r\n        }\r\n        else\r\n        {\r\n            this.selectedTodos.push(...\r\n                this.todos.filter(todo => {\r\n                    return todo[filterParameter] === filterValue;\r\n                })\r\n            );\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Set current todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    setCurrentTodo(id): void\r\n    {\r\n        this.currentTodo = this.todos.find(todo => {\r\n            return todo.id === id;\r\n        });\r\n\r\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\r\n\r\n        const tagHandle    = this.routeParams.tagHandle,\r\n              filterHandle = this.routeParams.filterHandle;\r\n\r\n        if ( tagHandle )\r\n        {\r\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\r\n        }\r\n        else if ( filterHandle )\r\n        {\r\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\r\n        }\r\n        else\r\n        {\r\n            this._location.go('apps/todo/all/' + id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this.selectedTodos.map(todo => {\r\n            this.toggleTagOnTodo(tagId, todo);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     */\r\n    toggleTagOnTodo(tagId, todo): void\r\n    {\r\n        const index = todo.tags.indexOf(tagId);\r\n\r\n        if ( index !== -1 )\r\n        {\r\n            todo.tags.splice(index, 1);\r\n        }\r\n        else\r\n        {\r\n            todo.tags.push(tagId);\r\n        }\r\n\r\n        this.updateTodo(todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     * @returns {boolean}\r\n     */\r\n    hasTag(tagId, todo): any\r\n    {\r\n        if ( !todo.tags )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return todo.tags.indexOf(tagId) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Update the todo\r\n     *\r\n     * @param todo\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateTodo(todo): any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\r\n                .subscribe(response => {\r\n\r\n                    this.getTodos().then(todos => {\r\n\r\n                        resolve(todos);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list',\r\n    templateUrl  : './todo-list.component.html',\r\n    styleUrls    : ['./todo-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoListComponent implements OnInit, OnDestroy\r\n{\r\n    todos: Todo[];\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {TodoService} _todoService\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _todoService: TodoService,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update todos on changes\r\n        this._todoService.onTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(todos => {\r\n                this.todos = todos;\r\n            });\r\n\r\n        // Subscribe to update current todo on changes\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentTodo => {\r\n                if ( !currentTodo )\r\n                {\r\n                    // Set the current todo id to null to deselect the current todo\r\n                    this.currentTodo = null;\r\n\r\n                    // Handle the location changes\r\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\r\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\r\n\r\n                    if ( tagHandle )\r\n                    {\r\n                        this._location.go('apps/todo/tag/' + tagHandle);\r\n                    }\r\n                    else if ( filterHandle )\r\n                    {\r\n                        this._location.go('apps/todo/filter/' + filterHandle);\r\n                    }\r\n                    else\r\n                    {\r\n                        this._location.go('apps/todo/all');\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Read todo\r\n     *\r\n     * @param todoId\r\n     */\r\n    readTodo(todoId): void\r\n    {\r\n        // Set current todo\r\n        this._todoService.setCurrentTodo(todoId);\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"todos.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\r\n    <span class=\"no-todos-text hint-text\">There are no todos!</span>\r\n</div>\r\n<div class=\"todo-list\" ngxDroppable [model]=\"todos\" (out)=\"onDrop($event)\" [@animateStagger]=\"{value:'50'}\">\r\n    <todo-list-item class=\"todo-list-item has-handle\"\r\n                    *ngFor=\"let todo of todos\" [todo]=\"todo\"\r\n                    ngxDraggable\r\n                    [model]=\"todo\"\r\n                    (click)=\"readTodo(todo.id)\"\r\n                    [ngClass]=\"{'current-todo':todo?.id == currentTodo?.id}\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n    </todo-list-item>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo',\r\n    templateUrl  : './todo.component.html',\r\n    styleUrls    : ['./todo.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedTodos: boolean;\r\n    isIndeterminate: boolean;\r\n    filters: any[];\r\n    tags: any[];\r\n    searchInput: FormControl;\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {TodoService} _todoService\r\n     */\r\n    constructor(\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _todoService: TodoService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n\r\n                setTimeout(() => {\r\n                    this.hasSelectedTodos = selectedTodos.length > 0;\r\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\r\n                }, 0);\r\n            });\r\n\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.filters = this._todoService.filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = this._todoService.tags;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._todoService.onSearchTextChanged.next(searchText);\r\n            });\r\n\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([currentTodo, formType]) => {\r\n                if ( !currentTodo )\r\n                {\r\n                    this.currentTodo = null;\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Deselect current todo\r\n     */\r\n    deselectCurrentTodo(): void\r\n    {\r\n        this._todoService.onCurrentTodoChanged.next([null, null]);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        this._todoService.toggleSelectAll();\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this._todoService.selectTodos(filterParameter, filterValue);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this._todoService.deselectTodos();\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnSelectedTodos(tagId);\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"todo\" class=\"page-layout carded left-sidebar inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- SIDEBAR -->\r\n    <fuse-sidebar class=\"sidebar\" name=\"todo-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\r\n        <todo-main-sidebar></todo-main-sidebar>\r\n    </fuse-sidebar>\r\n    <!-- / SIDEBAR -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- CONTENT HEADER -->\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('todo-main-sidebar')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n\r\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\r\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a task\" fxFlex>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / CONTENT HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" [ngClass]=\"{'current-todo-selected':currentTodo}\">\r\n\r\n            <!-- CONTENT TOOLBAR -->\r\n            <div class=\"toolbar px-24 py-8\">\r\n\r\n                <div class=\"todo-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedTodos\"\r\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-menu #selectMenu=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"selectTodos()\">All</button>\r\n                        <button mat-menu-item (click)=\"deselectTodos()\">None</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('read', true)\">Read</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('read', false)\">Unread</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('starred', true)\">Starred</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('starred', false)\">Unstarred</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('important', true)\">Important</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('important', false)\">Unimportant</button>\r\n                    </mat-menu>\r\n\r\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedTodos\"></div>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedTodos\">\r\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\r\n                    </button>\r\n                    <mat-menu #labelMenu=\"matMenu\">\r\n                        <button mat-menu-item *ngFor=\"let tag of tags\" (click)=\"toggleTagOnSelectedTodos(tag.id)\">\r\n                            {{tag.title}}\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n\r\n                <div *ngIf=\"currentTodo\" fxHide.gt-lg>\r\n                    <button mat-icon-button (click)=\"deselectCurrentTodo()\">\r\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / CONTENT TOOLBAR -->\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\" fxFlexAlign=\"row\">\r\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\r\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","export class Todo\r\n{\r\n    id: string;\r\n    title: string;\r\n    notes: string;\r\n    startDate: string;\r\n    dueDate: boolean;\r\n    completed: boolean;\r\n    starred: boolean;\r\n    important: boolean;\r\n    deleted: boolean;\r\n    tags: [\r\n        {\r\n            'id': number,\r\n            'name': string,\r\n            'label': string,\r\n            'color': string\r\n        }\r\n        ];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param todo\r\n     */\r\n    constructor(todo)\r\n    {\r\n        {\r\n            this.id = todo.id;\r\n            this.title = todo.title;\r\n            this.notes = todo.notes;\r\n            this.startDate = todo.startDate;\r\n            this.dueDate = todo.dueDate;\r\n            this.completed = todo.completed;\r\n            this.starred = todo.starred;\r\n            this.important = todo.important;\r\n            this.deleted = todo.deleted;\r\n            this.tags = todo.tags || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(): void\r\n    {\r\n        this.starred = !this.starred;\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     */\r\n    toggleImportant(): void\r\n    {\r\n        this.important = !this.important;\r\n    }\r\n\r\n    /**\r\n     * Toggle completed\r\n     */\r\n    toggleCompleted(): void\r\n    {\r\n        this.completed = !this.completed;\r\n    }\r\n\r\n    /**\r\n     * Toggle deleted\r\n     */\r\n    toggleDeleted(): void\r\n    {\r\n        this.deleted = !this.deleted;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\r\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\r\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\r\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\r\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'all',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'all/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'all'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TodoComponent,\r\n        TodoMainSidebarComponent,\r\n        TodoListItemComponent,\r\n        TodoListComponent,\r\n        TodoDetailsComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n\r\n        NgxDnDModule,\r\n\r\n        FuseSharedModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers   : [\r\n        TodoService\r\n    ]\r\n})\r\nexport class TodoModule\r\n{\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo-details',\r\n    templateUrl  : './todo-details.component.html',\r\n    styleUrls    : ['./todo-details.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoDetailsComponent implements OnInit, OnDestroy\r\n{\r\n    todo: Todo;\r\n    tags: any[];\r\n    formType: string;\r\n    todoForm: FormGroup;\r\n\r\n    @ViewChild('titleInput')\r\n    titleInputField;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update the current todo\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([todo, formType]) => {\r\n\r\n                if ( todo && formType === 'edit' )\r\n                {\r\n                    this.formType = 'edit';\r\n                    this.todo = todo;\r\n                    this.todoForm = this.createTodoForm();\r\n\r\n                    this.todoForm.valueChanges\r\n                        .pipe(\r\n                            takeUntil(this._unsubscribeAll),\r\n                            debounceTime(500),\r\n                            distinctUntilChanged()\r\n                        )\r\n                        .subscribe(data => {\r\n                            this._todoService.updateTodo(data);\r\n                        });\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.tags = labels;\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onNewTodoClicked\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this.todo = new Todo({});\r\n                this.todo.id = FuseUtils.generateGUID();\r\n                this.formType = 'new';\r\n                this.todoForm = this.createTodoForm();\r\n                this.focusTitleField();\r\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Focus title field\r\n     */\r\n    focusTitleField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.titleInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create todo form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createTodoForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            id       : [this.todo.id],\r\n            title    : [this.todo.title],\r\n            notes    : [this.todo.notes],\r\n            startDate: [this.todo.startDate],\r\n            dueDate  : [this.todo.dueDate],\r\n            completed: [this.todo.completed],\r\n            starred  : [this.todo.starred],\r\n            important: [this.todo.important],\r\n            deleted  : [this.todo.deleted],\r\n            tags     : [this.todo.tags]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param event\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     *\r\n     * @param event\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     *\r\n     * @param event\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Deleted\r\n     *\r\n     * @param event\r\n     */\r\n    toggleDeleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleDeleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnTodo(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @returns {any}\r\n     */\r\n    hasTag(tagId): any\r\n    {\r\n        return this._todoService.hasTag(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Add todo\r\n     */\r\n    addTodo(): void\r\n    {\r\n        this._todoService.updateTodo(this.todoForm.getRawValue());\r\n    }\r\n}\r\n","<div *ngIf=\"!todo\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\r\n    <mat-icon class=\"s-120 mb-12 select-todo-icon hint-text\"\r\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">check_box\r\n    </mat-icon>\r\n    <span class=\"hint-text mat-h1 select-todo-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\r\n        Select a todo\r\n    </span>\r\n</div>\r\n\r\n<div *ngIf=\"todo\">\r\n\r\n    <div class=\"todo-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n        <button mat-button class=\"toggle-complete-button\" (click)=\"toggleCompleted($event)\"\r\n                aria-label=\"Toggle completed\" fxFlex=\"0 1 auto\">\r\n            <mat-icon *ngIf=\"todo.completed\">check_box</mat-icon>\r\n            <mat-icon *ngIf=\"!todo.completed\">check_box_outline_blank</mat-icon>\r\n            <span class=\"ml-8\">Mark as Done</span>\r\n        </button>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\r\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" fxFlex=\"0 1 auto\">\r\n                <mat-icon class=\"secondary-text\">label</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #labelMenu=\"matMenu\">\r\n                <button mat-menu-item *ngFor=\"let tag of tags\"\r\n                        (click)=\"toggleTagOnTodo(tag.id)\">\r\n                    <mat-icon *ngIf=\"hasTag(tag.id)\">check</mat-icon>\r\n                    <mat-icon *ngIf=\"!hasTag(tag.id)\"></mat-icon>\r\n                    <span>{{tag.title}}</span>\r\n                </button>\r\n            </mat-menu>\r\n\r\n            <button mat-icon-button (click)=\"toggleDeleted($event)\" aria-label=\"Toggle delete\">\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"todo.deleted\">delete_forever</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.deleted\">delete</mat-icon>\r\n            </button>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"todo-content\">\r\n\r\n        <form [formGroup]=\"todoForm\" (submit)=\"addTodo()\">\r\n\r\n            <div class=\"tags mb-24\" fxFlexFill fxLayout=\"row wrap\">\r\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\r\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\r\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"title mt-8\" fxFill>\r\n                <mat-label>Title</mat-label>\r\n                <textarea matInput\r\n                          #titleInput\r\n                          name=\"title\"\r\n                          formControlName=\"title\"\r\n                          required>\r\n                </textarea>\r\n            </mat-form-field>\r\n\r\n            <div class=\"dates\" fxFlexFill fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"mr-sm-12\" fxFlex>\r\n                    <mat-label>Start Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"ml-sm-12\" fxFlex>\r\n                    <mat-label>Due Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"dueDatePicker\" placeholder=\"Due Date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFill>\r\n                <mat-label>Notes</mat-label>\r\n                <textarea matInput #notes\r\n                          name=\"notes\"\r\n                          formControlName=\"notes\"\r\n                          maxlength=\"500\">\r\n                </textarea>\r\n                <mat-hint align=\"end\">{{notes.value.length}} / 500</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <button *ngIf=\"formType === 'new'\"\r\n                    mat-raised-button color=\"accent\"\r\n                    [disabled]=\"todoForm.invalid\">\r\n                SAVE\r\n            </button>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n"]}